生产者												消费者


进入临界区lock										进入临界区 lock
(缓冲区满时等待暂时没有考虑只是简单的sleep2)        n == 0时缓冲区空等待 
唤醒阻塞队列
pthread_cond_signal(&g_cond)						 pthread_cond_wait
unlock												 unlock




////////////



1.多线程
单个生产者-单个消费者模型    
Posix互斥锁+Posix条件变量

2.多进程
单个生产者-单个消费者模型AsyncServer框架
Linux无锁队列

单个生产者-多个消费者模型Serverbench框架
Linux信号量

3.互斥锁和信号量的区别
互斥锁：只能用在多线程 （线程库提供）
信号量：可以用在多线程也可以多进程（ipc机制）
从原理上讲，mutex实际上是count=1情况下的semaphore



4.互斥和同步
多进程：
互斥：P、V在同一个进程中
同步：P、V在不同进程中
多线程：
互斥：互斥锁或者信号量
同步：条件变量或者信号量