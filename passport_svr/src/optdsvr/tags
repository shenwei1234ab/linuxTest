!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ANZHI_AppID	Common.h	/^const static std::string ANZHI_AppID = "1444358687pcvkJI4bL2f7xjuLu5xx";$/;"	v
ANZHI_AppSecret	Common.h	/^const static std::string ANZHI_AppSecret = "LS3io6mRL64QPS231Yx72r52";$/;"	v
APPCHINA_APPID	Common.h	/^const static std::string APPCHINA_APPID = "5000505381";$/;"	v
APPCHINA_AppKey	Common.h	/^const static std::string APPCHINA_AppKey =$/;"	v
APP_Secrect4399	Common.h	/^const static std::string APP_Secrect4399 = "18fab67843d213d5f3cad0c195453752";$/;"	v
ASY_TEST	database/PassPortDatabaseConnection.h	/^	ASY_TEST,$/;"	e	enum:PassPortDatabaseStatements
AllocatedObject	Log/DC_File_EventLog.h	/^struct DC_File_EventLog : AllocatedObject {$/;"	s
AllocatedObject	ServerData.h	/^struct ServerData : vn::AllocatedObject {$/;"	s	class:vn
AllocatedObject	manager/BSAwardManager.h	/^struct BSAward : AllocatedObject {$/;"	s
AllocatedObject	manager/BSCouponManager.h	/^struct BSCoupon : AllocatedObject {$/;"	s
AllocatedObject::DC_File_EventLog_Type	Log/DC_File_EventLog.h	/^    static std::map<DC_File_EventLog_Type, DC_File_EventLog *(*)()> s_registry;$/;"	m	struct:AllocatedObject	access:public
AllocatedObject::Type	manager/BSCouponManager.h	/^    enum Type {$/;"	g	struct:AllocatedObject	access:public
AllocatedObject::afterWin	manager/BSAwardManager.h	/^    std::vector<std::pair<u32, u32>> afterWin; \/\/ <id, weight>$/;"	m	struct:AllocatedObject	access:public
AllocatedObject::awardId	manager/BSAwardManager.h	/^    u32 awardId = 0;$/;"	m	struct:AllocatedObject	access:public
AllocatedObject::cost	manager/BSCouponManager.h	/^    vn::u32 cost = 0;$/;"	m	struct:AllocatedObject	access:public
AllocatedObject::couponId	manager/BSCouponManager.h	/^    vn::u32 couponId = 0;$/;"	m	struct:AllocatedObject	access:public
AllocatedObject::date	Log/DC_File_EventLog.h	/^    DateTime date;$/;"	m	struct:AllocatedObject	access:public
AllocatedObject::desc	manager/BSAwardManager.h	/^    str8 desc;$/;"	m	struct:AllocatedObject	access:public
AllocatedObject::desc	manager/BSCouponManager.h	/^    vn::str8 desc;$/;"	m	struct:AllocatedObject	access:public
AllocatedObject::diamonds	manager/BSAwardManager.h	/^    s32 diamonds = 0;$/;"	m	struct:AllocatedObject	access:public
AllocatedObject::extraWeight	manager/BSAwardManager.h	/^    u32 extraWeight = 0;$/;"	m	struct:AllocatedObject	access:public
AllocatedObject::groupId	manager/BSAwardManager.h	/^    u32 groupId = 0;$/;"	m	struct:AllocatedObject	access:public
AllocatedObject::imageId	manager/BSAwardManager.h	/^    u32 imageId = 0;$/;"	m	struct:AllocatedObject	access:public
AllocatedObject::imageId	manager/BSCouponManager.h	/^    vn::u32 imageId = 0;$/;"	m	struct:AllocatedObject	access:public
AllocatedObject::items	manager/BSAwardManager.h	/^    std::vector<std::pair<u32, u32>> items; \/\/ <id, count>$/;"	m	struct:AllocatedObject	access:public
AllocatedObject::kCT_Diamonds	manager/BSCouponManager.h	/^        kCT_Diamonds = 2,$/;"	e	enum:AllocatedObject::Type
AllocatedObject::kCT_Hero	manager/BSCouponManager.h	/^        kCT_Hero = 1,$/;"	e	enum:AllocatedObject::Type
AllocatedObject::kCT_Items	manager/BSCouponManager.h	/^        kCT_Items = 3$/;"	e	enum:AllocatedObject::Type
AllocatedObject::load	Log/DC_File_EventLog.h	/^    virtual void load(DataStream &stream);$/;"	p	struct:AllocatedObject	access:public	signature:(DataStream &stream)
AllocatedObject::maxLevelGroup	manager/BSCouponManager.h	/^    bool maxLevelGroup = false;$/;"	m	struct:AllocatedObject	access:public
AllocatedObject::maxLevelId	manager/BSCouponManager.h	/^    vn::u32 maxLevelId = 0;$/;"	m	struct:AllocatedObject	access:public
AllocatedObject::minLevelGroup	manager/BSCouponManager.h	/^    bool minLevelGroup = false;$/;"	m	struct:AllocatedObject	access:public
AllocatedObject::minLevelId	manager/BSCouponManager.h	/^    vn::u32 minLevelId = 0;$/;"	m	struct:AllocatedObject	access:public
AllocatedObject::money	manager/BSAwardManager.h	/^    s32 money = 0;$/;"	m	struct:AllocatedObject	access:public
AllocatedObject::originalCost	manager/BSCouponManager.h	/^    vn::u32 originalCost = 0;$/;"	m	struct:AllocatedObject	access:public
AllocatedObject::poolWeight	manager/BSAwardManager.h	/^    u32 poolWeight = 0;$/;"	m	struct:AllocatedObject	access:public
AllocatedObject::rank	manager/BSAwardManager.h	/^    u32 rank = 0;$/;"	m	struct:AllocatedObject	access:public
AllocatedObject::s_registry	Log/DC_File_EventLog.h	/^    static std::map<DC_File_EventLog_Type, DC_File_EventLog *(*)()> s_registry;$/;"	m	struct:AllocatedObject	access:public
AllocatedObject::save	Log/DC_File_EventLog.h	/^    virtual void save(DataStream &stream) const;$/;"	p	struct:AllocatedObject	access:public	signature:(DataStream &stream) const
AllocatedObject::subImageId	manager/BSCouponManager.h	/^    vn::u32 subImageId = 0;$/;"	m	struct:AllocatedObject	access:public
AllocatedObject::title	manager/BSCouponManager.h	/^    vn::str8 title;$/;"	m	struct:AllocatedObject	access:public
AllocatedObject::type	Log/DC_File_EventLog.h	/^    virtual DC_File_EventLog_Type type() const = 0;$/;"	p	struct:AllocatedObject	access:public
AllocatedObject::type	manager/BSCouponManager.h	/^    virtual Type type() const = 0;$/;"	p	struct:AllocatedObject	access:public
AllocatedObject::u32	manager/BSAwardManager.h	/^    std::vector<std::pair<u32, u32>> afterWin; \/\/ <id, weight>$/;"	m	struct:AllocatedObject	access:public
AllocatedObject::u32	manager/BSAwardManager.h	/^    std::vector<std::pair<u32, u32>> items; \/\/ <id, count>$/;"	m	struct:AllocatedObject	access:public
AllocatedObject::validTime	manager/BSCouponManager.h	/^    vn::f32 validTime = 0;$/;"	m	struct:AllocatedObject	access:public
AllocatedObject::weight	manager/BSAwardManager.h	/^    u32 weight = 0;$/;"	m	struct:AllocatedObject	access:public
AllocatedObject::weight	manager/BSCouponManager.h	/^    vn::u32 weight = 0;	\/\/权重$/;"	m	struct:AllocatedObject	access:public
AllocatedObject::~BSCoupon	manager/BSCouponManager.h	/^    virtual ~BSCoupon() = default;$/;"	p	struct:AllocatedObject	access:public
AllocatedObject::~DC_File_EventLog	Log/DC_File_EventLog.h	/^    virtual ~DC_File_EventLog() = default;$/;"	p	struct:AllocatedObject	access:public
AppSecret_360	Common.h	/^const static std::string AppSecret_360 = "ff87d00b6c7f685501de702a73e7b845";$/;"	v
AsyncBuy	worker/BSItemStore.cpp	/^void BSItemStore::AsyncBuy(u32 id,std::function<void (int result)>doResult)$/;"	f	class:BSItemStore	signature:(u32 id,std::function<void (int result)>doResult)
AsyncCreateUser	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncCreateUser(AsyncObjectPtr obj,std::function<void (bool ret,  LoggedUserPtr user)>doResult)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr obj,std::function<void (bool ret, LoggedUserPtr user)>doResult)
AsyncInsert	worker/BSLevel.cpp	/^void BSLevel::AsyncInsert(u32 levelId,std::function<void(bool ret)> doResult)$/;"	f	class:BSLevel	signature:(u32 levelId,std::function<void(bool ret)> doResult)
AsyncInsertForceGuide	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncInsertForceGuide(LoggedUserPtr pUser,u32 guideid,std::function<void(bool)> doResulet)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr pUser,u32 guideid,std::function<void(bool)> doResulet)
AsyncInsertHero	worker/PreLoggingUser.cpp	/^void PreLoggingUser::AsyncInsertHero(LoggedUserPtr user,std::function<void(bool ret)>doResult)$/;"	f	class:PreLoggingUser	signature:(LoggedUserPtr user,std::function<void(bool ret)>doResult)
AsyncInsertItemStore	worker/PreLoggingUser.cpp	/^void PreLoggingUser::AsyncInsertItemStore(LoggedUserPtr user,std::function<void(bool ret)>doResult)$/;"	f	class:PreLoggingUser	signature:(LoggedUserPtr user,std::function<void(bool ret)>doResult)
AsyncInsertLevel	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncInsertLevel(AsyncObjectPtr obj,std::string &strUUId,u32 levelId,bool intrusion,u32 intrusiontimes,u32 starNum,s32 score,bool shovel,bool watch,std::function<void(bool)> doResulet)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr obj,std::string &strUUId,u32 levelId,bool intrusion,u32 intrusiontimes,u32 starNum,s32 score,bool shovel,bool watch,std::function<void(bool)> doResulet)
AsyncInsertLevelGroup_Levels	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncInsertLevelGroup_Levels(LoggedUserPtr pUser,u32 groupId,u32 levelId,std::string heros,std::string platforms, bool resolved,bool shovel ,u32 stars,u8 passed,bool watch,std::function<void(bool ret)> doResulet)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr pUser,u32 groupId,u32 levelId,std::string heros,std::string platforms, bool resolved,bool shovel ,u32 stars,u8 passed,bool watch,std::function<void(bool ret)> doResulet)
AsyncInsertLevelGroups	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncInsertLevelGroups(LoggedUserPtr pUser,u32 groupId,bool pressed,u32 intrusionCount,u32 rewardsCount,std::function<void(bool)> doResulet)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr pUser,u32 groupId,bool pressed,u32 intrusionCount,u32 rewardsCount,std::function<void(bool)> doResulet)
AsyncInsertLevels	worker/PreLoggingUser.cpp	/^void PreLoggingUser::AsyncInsertLevels(LoggedUserPtr user,std::function<void(bool ret)>doResult)$/;"	f	class:PreLoggingUser	signature:(LoggedUserPtr user,std::function<void(bool ret)>doResult)
AsyncInsertLog	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncInsertLog(AsyncObjectPtr asyObj,std::string &strUUId,u32 eventType,std::string &strMessage,std::function<void(bool)> doResulet)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr asyObj,std::string &strUUId,u32 eventType,std::string &strMessage,std::function<void(bool)> doResulet)
AsyncInsertMines	worker/PreLoggingUser.cpp	/^void PreLoggingUser::AsyncInsertMines(LoggedUserPtr user,std::function<void(bool ret)>doResult)$/;"	f	class:PreLoggingUser	signature:(LoggedUserPtr user,std::function<void(bool ret)>doResult)
AsyncInsertMissions	worker/PreLoggingUser.cpp	/^void PreLoggingUser::AsyncInsertMissions(LoggedUserPtr user,std::function<void(bool ret)>doResult)$/;"	f	class:PreLoggingUser	signature:(LoggedUserPtr user,std::function<void(bool ret)>doResult)
AsyncInsertMonsterMap	worker/PreLoggingUser.cpp	/^void PreLoggingUser::AsyncInsertMonsterMap(LoggedUserPtr user,std::function<void(bool ret)>doResult)$/;"	f	class:PreLoggingUser	signature:(LoggedUserPtr user,std::function<void(bool ret)>doResult)
AsyncInsertPlatformStore	worker/PreLoggingUser.cpp	/^void PreLoggingUser::AsyncInsertPlatformStore(LoggedUserPtr user,std::function<void(bool ret)>doResult)$/;"	f	class:PreLoggingUser	signature:(LoggedUserPtr user,std::function<void(bool ret)>doResult)
AsyncInsertTechUpgrade	worker/PreLoggingUser.cpp	/^void  PreLoggingUser::AsyncInsertTechUpgrade(LoggedUserPtr user,std::function<void(bool ret)>doResult)$/;"	f	class:PreLoggingUser	signature:(LoggedUserPtr user,std::function<void(bool ret)>doResult)
AsyncInsertTowerUpgrade	worker/PreLoggingUser.cpp	/^void PreLoggingUser::AsyncInsertTowerUpgrade(LoggedUserPtr user,std::function<void(bool ret)>doResult)$/;"	f	class:PreLoggingUser	signature:(LoggedUserPtr user,std::function<void(bool ret)>doResult)
AsyncInsertbaseinfo	worker/PreLoggingUser.cpp	/^void PreLoggingUser::AsyncInsertbaseinfo(LoggedUserPtr user,std::function<void(bool ret)>doResult)$/;"	f	class:PreLoggingUser	signature:(LoggedUserPtr user,std::function<void(bool ret)>doResult)
AsyncLoadBaseInfo	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncLoadBaseInfo( std::string &stdUUid,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult result)> doResult)$/;"	f	class:DC_DataBase	signature:( std::string &stdUUid,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult result)> doResult)
AsyncLoadForceGuide	manager/DC_DataBase.cpp	/^void  DC_DataBase::AsyncLoadForceGuide(LoggedUserPtr user,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult )> doResult)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult )> doResult)
AsyncLoadHeroIdbyUUIdTowerClass	manager/DC_DataBase.cpp	/^void  DC_DataBase::AsyncLoadHeroIdbyUUIdTowerClass(LoggedUserPtr user,u32 towerClass,std::function<void(PreparedQueryResult)> doResulet)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user,u32 towerClass,std::function<void(PreparedQueryResult)> doResulet)
AsyncLoadItemStore	manager/DC_DataBase.cpp	/^void  DC_DataBase::AsyncLoadItemStore(LoggedUserPtr user,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult )> doResult)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult )> doResult)
AsyncLoadLevelGroup	manager/DC_DataBase.cpp	/^void  DC_DataBase::AsyncLoadLevelGroup(LoggedUserPtr user,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult )> doResult)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult )> doResult)
AsyncLoadLevelGroupLevels	manager/DC_DataBase.cpp	/^void  DC_DataBase::AsyncLoadLevelGroupLevels(vn::u32 levelId,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult )> doResult)$/;"	f	class:DC_DataBase	signature:(vn::u32 levelId,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult )> doResult)
AsyncLoadLevels	manager/DC_DataBase.cpp	/^void  DC_DataBase::AsyncLoadLevels(LoggedUserPtr user,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult )> doResult)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult )> doResult)
AsyncLoadMines	manager/DC_DataBase.cpp	/^void  DC_DataBase::AsyncLoadMines(LoggedUserPtr user,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult )> doResult)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult )> doResult)
AsyncLoadMissions	manager/DC_DataBase.cpp	/^void  DC_DataBase::AsyncLoadMissions(LoggedUserPtr user,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult )> doResult)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult )> doResult)
AsyncLoadMonsterMap	manager/DC_DataBase.cpp	/^void  DC_DataBase::AsyncLoadMonsterMap(LoggedUserPtr user,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult )> doResult)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult )> doResult)
AsyncLoadPlatformStore	manager/DC_DataBase.cpp	/^void  DC_DataBase::AsyncLoadPlatformStore(LoggedUserPtr user,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult )> doResult)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult )> doResult)
AsyncLoadTechUpgrade	manager/DC_DataBase.cpp	/^void  DC_DataBase::AsyncLoadTechUpgrade(LoggedUserPtr user,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult )> doResult)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult )> doResult)
AsyncLoadTowerUpgrade	manager/DC_DataBase.cpp	/^void  DC_DataBase::AsyncLoadTowerUpgrade(LoggedUserPtr user,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult )> doResult)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult )> doResult)
AsyncLog	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncLog(AsyncObjectPtr obj,UserEventLogPtr log,std::function<void(bool ret)> doResult)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr obj,UserEventLogPtr log,std::function<void(bool ret)> doResult)
AsyncSave	worker/BSGoldMine.cpp	/^void BSGoldMine::AsyncSave(AsyncObjectPtr asyncObjectPtr,u32 id,std::function<void(bool ret)> doResult)$/;"	f	class:BSGoldMine	signature:(AsyncObjectPtr asyncObjectPtr,u32 id,std::function<void(bool ret)> doResult)
AsyncSave	worker/BSGoldMine.cpp	/^void BSGoldMine::AsyncSave(vn::RefCountedPtr<AsyncObject> asyncObjectPtr,std::function<void(bool ret)> doResult)$/;"	f	class:BSGoldMine	signature:(vn::RefCountedPtr<AsyncObject> asyncObjectPtr,std::function<void(bool ret)> doResult)
AsyncTaskPtr	worker/AsyncTask.h	/^typedef vn::RefCountedPtr<AsyncTask> AsyncTaskPtr;$/;"	t
AsyncUpdate	worker/BSLevel.cpp	/^void BSLevel::AsyncUpdate(u32 levelId,std::function<void(bool ret)> doResult)$/;"	f	class:BSLevel	signature:(u32 levelId,std::function<void(bool ret)> doResult)
AsyncUpdateBaseInfoAll	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncUpdateBaseInfoAll(AsyncObjectPtr asyncObject,LoggedUserPtr pUser,std::function<void(bool)> doResulet)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr asyncObject,LoggedUserPtr pUser,std::function<void(bool)> doResulet)
AsyncUpdateBaseInfo_Baseinfo	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncUpdateBaseInfo_Baseinfo(AsyncObjectPtr asyncObject,std::string &strUUid,s32 clip0,s32 clip1,s32 clip2,s32 money,s32 diamond,u32 purchaseDiamond,std::function<void(bool)> doResulet)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr asyncObject,std::string &strUUid,s32 clip0,s32 clip1,s32 clip2,s32 money,s32 diamond,u32 purchaseDiamond,std::function<void(bool)> doResulet)
AsyncUpdateBaseInfo_Coupon	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncUpdateBaseInfo_Coupon(AsyncObjectPtr asyPtr,std::string &strUUid,s32 couponId,f32 couponTimer,vn::u64 timeStamp,std::function<void(bool)> doResulet)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr asyPtr,std::string &strUUid,s32 couponId,f32 couponTimer,vn::u64 timeStamp,std::function<void(bool)> doResulet)
AsyncUpdateBaseInfo_Hero	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncUpdateBaseInfo_Hero(AsyncObjectPtr asyncObject,std::string &strUUid,s32 shovel0,s32 shovel1,s32 skill0,s32 skill1,s32 watch0,s32 watch1,std::function<void(bool)> doResulet)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr asyncObject,std::string &strUUid,s32 shovel0,s32 shovel1,s32 skill0,s32 skill1,s32 watch0,s32 watch1,std::function<void(bool)> doResulet)
AsyncUpdateBaseInfo_Lottery	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncUpdateBaseInfo_Lottery(AsyncObjectPtr asyPtr,std::string &strUUid,u32 lotteryDraw,s32 lotteryState,f32 lotteryTimer,std::string &lotteryPool,vn::u64 timestamp,std::function<void(bool)> doResulet)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr asyPtr,std::string &strUUid,u32 lotteryDraw,s32 lotteryState,f32 lotteryTimer,std::string &lotteryPool,vn::u64 timestamp,std::function<void(bool)> doResulet)
AsyncUpdateBaseInfo_Registion	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncUpdateBaseInfo_Registion(AsyncObjectPtr asyncObject,std::string &strUUid,std::string &strfirstDate,std::string &strlastDate,s32 count,s32 group,std::function<void(bool)> doResulet)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr asyncObject,std::string &strUUid,std::string &strfirstDate,std::string &strlastDate,s32 count,s32 group,std::function<void(bool)> doResulet)
AsyncUpdateGoldMine	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncUpdateGoldMine(std::string &strUUId,u32 id, u32 num,f32 timer,vn::u64 timeStamp,AsyncObjectPtr asyncObjectPtr,std::function<void(bool)>doResult)$/;"	f	class:DC_DataBase	signature:(std::string &strUUId,u32 id, u32 num,f32 timer,vn::u64 timeStamp,AsyncObjectPtr asyncObjectPtr,std::function<void(bool)>doResult)
AsyncUpdateIntrusion	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncUpdateIntrusion(std::string &strUUId,bool running,f32 timer,vn::u64 timestamp,AsyncObjectPtr asyncObject,std::function<void(bool)> doResulet)$/;"	f	class:DC_DataBase	signature:(std::string &strUUId,bool running,f32 timer,vn::u64 timestamp,AsyncObjectPtr asyncObject,std::function<void(bool)> doResulet)
AsyncUpdateItemStore	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncUpdateItemStore(LoggedUserPtr pUser,u32 itemId,u32 itemNum,std::function<void(bool)> doResulet)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr pUser,u32 itemId,u32 itemNum,std::function<void(bool)> doResulet)
AsyncUpdateLevel	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncUpdateLevel(AsyncObjectPtr asyncObjPtr,std::string &strUUId,u32 levelId,bool intrusion,u32 intrusiontimes,u32 starNum,s32 score,bool shovel,bool watch,std::function<void(bool)> doResulet)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr asyncObjPtr,std::string &strUUId,u32 levelId,bool intrusion,u32 intrusiontimes,u32 starNum,s32 score,bool shovel,bool watch,std::function<void(bool)> doResulet)
AsyncUpdateLevelGroup_Levels	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncUpdateLevelGroup_Levels(AsyncObjectPtr asyncObjPtr,LoggedUserPtr user,u32 groupId,u32 levelId,std::string heros,std::string platforms, bool resolved,bool shovel ,u32 stars,u8 passed,bool watch,std::function<void(bool ret)> doResulet)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr asyncObjPtr,LoggedUserPtr user,u32 groupId,u32 levelId,std::string heros,std::string platforms, bool resolved,bool shovel ,u32 stars,u8 passed,bool watch,std::function<void(bool ret)> doResulet)
AsyncUpdateLevelGroups	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncUpdateLevelGroups(AsyncObjectPtr asyncObjPtr,LoggedUserPtr user,u32 groupId,bool pressed,u32 intrusionCount,u32 rewardsCount,std::function<void(bool)> doResulet)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr asyncObjPtr,LoggedUserPtr user,u32 groupId,bool pressed,u32 intrusionCount,u32 rewardsCount,std::function<void(bool)> doResulet)
AsyncUpdateLoginInfo	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncUpdateLoginInfo(AsyncObjectPtr asyPtr,LoggedUserPtr pUser,std::function<void(bool)> doResulet)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr asyPtr,LoggedUserPtr pUser,std::function<void(bool)> doResulet)
AsyncUpdateMission	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncUpdateMission(AsyncObjectPtr asyObj,std::string &strUUId,u32 missionId,bool missionStatus,std::function<void(bool)> doResulet)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr asyObj,std::string &strUUId,u32 missionId,bool missionStatus,std::function<void(bool)> doResulet)
AsyncUpdateMonsterMap	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncUpdateMonsterMap(LoggedUserPtr pUser,u32 monsterid,bool monsterStatus,std::function<void(bool)> doResulet)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr pUser,u32 monsterid,bool monsterStatus,std::function<void(bool)> doResulet)
AsyncUpdatePlatform	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncUpdatePlatform(AsyncObjectPtr asyObj,std::string &strUUId,u32 category,u32 level,std::function<void(bool)> doResulet)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr asyObj,std::string &strUUId,u32 category,u32 level,std::function<void(bool)> doResulet)
AsyncUpdateRunesStatus	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncUpdateRunesStatus(u32 runId,s32 runstatus,LoggedUserPtr pUser,std::string &heroId,std::function<void(bool)>doResult)$/;"	f	class:DC_DataBase	signature:(u32 runId,s32 runstatus,LoggedUserPtr pUser,std::string &heroId,std::function<void(bool)>doResult)
AsyncUpdateTech	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncUpdateTech(LoggedUserPtr pUser,u32 techIndex,u32 techStatus,std::function<void(bool)> doResulet)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr pUser,u32 techIndex,u32 techStatus,std::function<void(bool)> doResulet)
AsyncUpdateTimeStamp	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncUpdateTimeStamp(AsyncObjectPtr asyncObject,std::string &strUUId,u32 stamp,std::function<void(bool)> doResulet)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr asyncObject,std::string &strUUId,u32 stamp,std::function<void(bool)> doResulet)
AsyncUpdateTower	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncUpdateTower(LoggedUserPtr pUser,u32 classIndex,u32 inclassIndex,u32 upgradeValue,std::function<void(bool)> doResulet)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr pUser,u32 classIndex,u32 inclassIndex,u32 upgradeValue,std::function<void(bool)> doResulet)
AsyncUse	worker/BSItemStore.cpp	/^void BSItemStore::AsyncUse(u32 id,std::function<void (int result)>doResult)$/;"	f	class:BSItemStore	signature:(u32 id,std::function<void (int result)>doResult)
Async_InsertHero	manager/DC_DataBase.cpp	/^void DC_DataBase::Async_InsertHero(AsyncObjectPtr obj,LoggedUserPtr user,std::function<void(bool ret)>doResult)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr obj,LoggedUserPtr user,std::function<void(bool ret)>doResult)
Async_InsertItemStore	manager/DC_DataBase.cpp	/^void DC_DataBase::Async_InsertItemStore(AsyncObjectPtr obj,LoggedUserPtr user,std::function<void(bool ret)>doResult)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr obj,LoggedUserPtr user,std::function<void(bool ret)>doResult)
Async_InsertLevels	manager/DC_DataBase.cpp	/^void DC_DataBase::Async_InsertLevels(AsyncObjectPtr obj,LoggedUserPtr user,std::function<void(bool ret)>doResult)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr obj,LoggedUserPtr user,std::function<void(bool ret)>doResult)
Async_InsertMines	manager/DC_DataBase.cpp	/^void DC_DataBase::Async_InsertMines(AsyncObjectPtr obj,LoggedUserPtr user,std::function<void(bool ret)>doResult)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr obj,LoggedUserPtr user,std::function<void(bool ret)>doResult)
Async_InsertMissions	manager/DC_DataBase.cpp	/^void DC_DataBase::Async_InsertMissions(AsyncObjectPtr obj,LoggedUserPtr user,std::function<void(bool ret)>doResult)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr obj,LoggedUserPtr user,std::function<void(bool ret)>doResult)
Async_InsertMonsterMap	manager/DC_DataBase.cpp	/^void DC_DataBase::Async_InsertMonsterMap(AsyncObjectPtr obj,LoggedUserPtr user,std::function<void(bool ret)>doResult)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr obj,LoggedUserPtr user,std::function<void(bool ret)>doResult)
Async_InsertPlatformStore	manager/DC_DataBase.cpp	/^void DC_DataBase::Async_InsertPlatformStore(AsyncObjectPtr obj,LoggedUserPtr user,std::function<void(bool ret)>doResult)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr obj,LoggedUserPtr user,std::function<void(bool ret)>doResult)
Async_InsertTechUpgrade	manager/DC_DataBase.cpp	/^void  DC_DataBase::Async_InsertTechUpgrade(AsyncObjectPtr obj,LoggedUserPtr user,std::function<void(bool ret)>doResult)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr obj,LoggedUserPtr user,std::function<void(bool ret)>doResult)
Async_InsertTowerUpgrade	manager/DC_DataBase.cpp	/^void DC_DataBase::Async_InsertTowerUpgrade(AsyncObjectPtr obj,LoggedUserPtr user,std::function<void(bool ret)>doResult)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr obj,LoggedUserPtr user,std::function<void(bool ret)>doResult)
Async_intrusion	worker/BSIntrusion.cpp	/^void BSIntrusion::Async_intrusion(AsyncObjectPtr asyncObjPtr,std::function<void(bool ret)> doResult)$/;"	f	class:BSIntrusion	signature:(AsyncObjectPtr asyncObjPtr,std::function<void(bool ret)> doResult)
Asyncadd	worker/BSItemStore.cpp	/^void BSItemStore::Asyncadd(u32 id, u32 count,std::function<void (bool ret)>doResult)$/;"	f	class:BSItemStore	signature:(u32 id, u32 count,std::function<void (bool ret)>doResult)
Asyncbuy	worker/BSPlatformStore.cpp	/^void BSPlatformStore::Asyncbuy(u32 category,std::function<void(int ret)> doResult)$/;"	f	class:BSPlatformStore	signature:(u32 category,std::function<void(int ret)> doResult)
Asynccollect	worker/BSGoldMine.cpp	/^void BSGoldMine::Asynccollect(u32 id, u32 num,std::function<void(int ret)> doResult)$/;"	f	class:BSGoldMine	signature:(u32 id, u32 num,std::function<void(int ret)> doResult)
Asyncintrude	worker/BSLevel.cpp	/^void BSLevel::Asyncintrude(AsyncObjectPtr asyncObjPtr,u32 levelId,std::function<void(bool ret)> doResult)$/;"	f	class:BSLevel	signature:(AsyncObjectPtr asyncObjPtr,u32 levelId,std::function<void(bool ret)> doResult)
Asyncintrude	worker/BSLevelGroup.cpp	/^void BSLevelGroupManager::Asyncintrude(AsyncObjectPtr asyncObjPtr,u32 groupId,std::function<void(bool ret)> doResult)$/;"	f	class:BSLevelGroupManager	signature:(AsyncObjectPtr asyncObjPtr,u32 groupId,std::function<void(bool ret)> doResult)
Asyncorder_ok	worker/LoggedUser.cpp	/^void LoggedUser::Asyncorder_ok(const str8 &cooOrderSerial,$/;"	f	class:LoggedUser	signature:(const str8 &cooOrderSerial, std::function<void(bool ret)> doResult)
Asyncsave	Log/DC_DataBase_EventLog.cpp	/^void	DC_DataBase_EventLog_User_BeginBattle::Asyncsave(AsyncObjectPtr obj,std::function<void(bool ret)>doResult)$/;"	f	class:DC_DataBase_EventLog_User_BeginBattle	signature:(AsyncObjectPtr obj,std::function<void(bool ret)>doResult)
Asyncsave	Log/DC_DataBase_EventLog.cpp	/^void 	DC_DataBase_EventLog_User_EndBattle::Asyncsave(AsyncObjectPtr obj,std::function<void(bool ret)>doResult)$/;"	f	class:DC_DataBase_EventLog_User_EndBattle	signature:(AsyncObjectPtr obj,std::function<void(bool ret)>doResult)
Asyncsave	Log/DC_DataBase_EventLog.cpp	/^void DC_DataBase_EventLog_User::Asyncsave(AsyncObjectPtr obj,std::function<void(bool ret)> doResult)$/;"	f	class:DC_DataBase_EventLog_User	signature:(AsyncObjectPtr obj,std::function<void(bool ret)> doResult)
Asyncsave	Log/DC_DataBase_EventLog.cpp	/^void DC_DataBase_EventLog_User_Login::Asyncsave(AsyncObjectPtr obj,std::function<void(bool ret)> doResult)$/;"	f	class:DC_DataBase_EventLog_User_Login	signature:(AsyncObjectPtr obj,std::function<void(bool ret)> doResult)
Asyncsave	Log/DC_DataBase_EventLog.cpp	/^void DC_DataBase_EventLog_User_Logout::Asyncsave(AsyncObjectPtr obj,std::function<void(bool ret)> doResult)$/;"	f	class:DC_DataBase_EventLog_User_Logout	signature:(AsyncObjectPtr obj,std::function<void(bool ret)> doResult)
Asyncsave	Log/DC_DataBase_EventLog.cpp	/^void DC_DataBase_EventLog_User_Signin::Asyncsave(AsyncObjectPtr obj,std::function<void(bool ret)>doResult)$/;"	f	class:DC_DataBase_EventLog_User_Signin	signature:(AsyncObjectPtr obj,std::function<void(bool ret)>doResult)
Asyncsave	Log/DC_DataBase_EventLog.h	/^    virtual void Asyncsave(AsyncObjectPtr obj,std::function<void(bool ret)>)=0;$/;"	p	struct:RefCounted	access:public	signature:(AsyncObjectPtr obj,std::function<void(bool ret)>)
Asyncsave	worker/BSHero.cpp	/^void BSHero::Asyncsave(u32 idx,std::function<void(bool ret)>doResult)$/;"	f	class:BSHero	signature:(u32 idx,std::function<void(bool ret)>doResult)
Asyncsave	worker/BSIntrusion.cpp	/^void BSIntrusion::Asyncsave(AsyncObjectPtr asyncObjPtr,std::function<void(bool)> doResulet)$/;"	f	class:BSIntrusion	signature:(AsyncObjectPtr asyncObjPtr,std::function<void(bool)> doResulet)
Asyncsave	worker/BSItemStore.cpp	/^void BSItemStore::Asyncsave(u32 id,std::function<void (bool ret)> doResult)$/;"	f	class:BSItemStore	signature:(u32 id,std::function<void (bool ret)> doResult)
Asyncsave	worker/BSLevelGroup.cpp	/^void BSLevelGroupManager::Asyncsave(u32 levelId,std::function<void(int ret)>doResult)$/;"	f	class:BSLevelGroupManager	signature:(u32 levelId,std::function<void(int ret)>doResult)
Asyncsave	worker/BSMission.cpp	/^void BSMission::Asyncsave(u32 missionId,std::function<void(bool ret)>doResult)$/;"	f	class:BSMission	signature:(u32 missionId,std::function<void(bool ret)>doResult)
Asyncsave	worker/BSMonsterMap.cpp	/^void BSMonsterMap::Asyncsave(u32 id,std::function<void(bool ret)>doResult)$/;"	f	class:BSMonsterMap	signature:(u32 id,std::function<void(bool ret)>doResult)
Asyncsave	worker/BSPlatformStore.cpp	/^void BSPlatformStore::Asyncsave(u32 category,std::function<void(bool ret)>doResult)$/;"	f	class:BSPlatformStore	signature:(u32 category,std::function<void(bool ret)>doResult)
Asyncsave	worker/BSRegistration.cpp	/^void BSRegistration::Asyncsave(std::function<void(bool ret)> doResult)$/;"	f	class:BSRegistration	signature:(std::function<void(bool ret)> doResult)
Asyncsave	worker/BSTechUpgrade.cpp	/^void BSTechUpgrade::Asyncsave(u32 idx,std::function<void(bool ret)> doResult)$/;"	f	class:BSTechUpgrade	signature:(u32 idx,std::function<void(bool ret)> doResult)
Asyncsave	worker/BSTowerUpgrade.cpp	/^void	BSTowerUpgrade::Asyncsave(u32 idx, u32 num,std::function<void(bool ret)> doResult)$/;"	f	class:BSTowerUpgrade	signature:(u32 idx, u32 num,std::function<void(bool ret)> doResult)
AsyncsaveNew	worker/BSLevelGroup.cpp	/^void BSLevelGroupManager::AsyncsaveNew(u32 levelId,std::function<void(int ret)>doResult)$/;"	f	class:BSLevelGroupManager	signature:(u32 levelId,std::function<void(int ret)>doResult)
AsyncsaveRune	worker/BSHero.cpp	/^void BSHero::AsyncsaveRune(u32 idx, u32 runeIdx,std::function<void(bool ret)>doResult)$/;"	f	class:BSHero	signature:(u32 idx, u32 runeIdx,std::function<void(bool ret)>doResult)
AsyncsetReward	worker/BSMission.cpp	/^void BSMission::AsyncsetReward(u32 missionId ,bool missionStatus,std::function<void(bool ret)> doResult)$/;"	f	class:BSMission	signature:(u32 missionId ,bool missionStatus,std::function<void(bool ret)> doResult)
Asyncunlock_rune	worker/BSHero.cpp	/^void  BSHero::Asyncunlock_rune(u32 idx, u32 runeIdx,std::function<void(int ret)>doResult)$/;"	f	class:BSHero	signature:(u32 idx, u32 runeIdx,std::function<void(int ret)>doResult)
Asyncupdate	worker/BSGoldMine.cpp	/^void BSGoldMine::Asyncupdate(f32 deltaTime,std::function<void(bool ret)>doResult)$/;"	f	class:BSGoldMine	signature:(f32 deltaTime,std::function<void(bool ret)>doResult)
Asyncupdate	worker/BSIntrusion.cpp	/^void BSIntrusion::Asyncupdate(f32 deltaTime,std::function<void(bool ret)> doResult)$/;"	f	class:BSIntrusion	signature:(f32 deltaTime,std::function<void(bool ret)> doResult)
Asyncupdate_levelInfo	worker/BSLevel.cpp	/^void BSLevel::Asyncupdate_levelInfo(const tbl::Record_level *data, u32 starNum, s32 score, bool shovel, bool watch, bool *intrusion,std::function<void(int ret)> doResult)$/;"	f	class:BSLevel	signature:(const tbl::Record_level *data, u32 starNum, s32 score, bool shovel, bool watch, bool *intrusion,std::function<void(int ret)> doResult)
AsyncupgradeHero	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncupgradeHero(AsyncObjectPtr ptr,std::string &strUUId,u32 id,s32 status,u32 towerclass,std::function<void(bool)> doResulet)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr ptr,std::string &strUUId,u32 id,s32 status,u32 towerclass,std::function<void(bool)> doResulet)
Asyncupgrade_hero	worker/BSHero.cpp	/^void BSHero::Asyncupgrade_hero(u32 idx, bool useCoupon,std::function<void(int ret)>doResult)$/;"	f	class:BSHero	signature:(u32 idx, bool useCoupon,std::function<void(int ret)>doResult)
Asyncupgrade_tech	worker/BSTechUpgrade.cpp	/^void BSTechUpgrade::Asyncupgrade_tech(u32 idx,std::function<void(int ret)> doResult)$/;"	f	class:BSTechUpgrade	signature:(u32 idx,std::function<void(int ret)> doResult)
Asyncupgrade_tower	worker/BSTowerUpgrade.cpp	/^void  BSTowerUpgrade::Asyncupgrade_tower(u32 idx, u32 num,std::function<void(int ret)> doResult)$/;"	f	class:BSTowerUpgrade	signature:(u32 idx, u32 num,std::function<void(int ret)> doResult)
BAIDU_AppID	Common.h	/^const static std::string BAIDU_AppID = "6685863";$/;"	v
BAIDU_AppKey	Common.h	/^const static std::string BAIDU_AppKey = "zLGKVnyRGlcbW1chPd2szcTF";$/;"	v
BAIDU_SecretKey	Common.h	/^const static std::string BAIDU_SecretKey = "5YjTT5MAz2IOcpW7aA9TCypA0Sk8BeeF";$/;"	v
BSAwardManager::draw	manager/BSAwardManager.cpp	/^u32 BSAwardManager::draw(std::vector<std::pair<const BSAward *, u32>> &pool, const BSAward *&generated) {$/;"	f	class:BSAwardManager	signature:(std::vector<std::pair<const BSAward *, u32>> &pool, const BSAward *&generated)
BSAwardManager::find	manager/BSAwardManager.cpp	/^const BSAward * BSAwardManager::find(u32 awardId) {$/;"	f	class:BSAwardManager	signature:(u32 awardId)
BSAwardManager::generate	manager/BSAwardManager.cpp	/^std::vector<std::pair<const BSAward *, u32>> BSAwardManager::generate() {$/;"	f	class:BSAwardManager	signature:()
BSAwardManager::initData	manager/BSAwardManager.cpp	/^void BSAwardManager::initData(const tbl::Table_award &table) {$/;"	f	class:BSAwardManager	signature:(const tbl::Table_award &table)
BSCommonFunc::calc_diamondByChip	manager/BSCommonFunc.cpp	/^u32 BSCommonFunc::calc_diamondByChip(u32 chip)$/;"	f	class:BSCommonFunc	signature:(u32 chip)
BSCommonFunc::calc_diamondByRes	manager/BSCommonFunc.cpp	/^u32 BSCommonFunc::calc_diamondByRes(u32 res)$/;"	f	class:BSCommonFunc	signature:(u32 res)
BSCoupon	manager/BSCouponManager.h	/^struct BSCoupon_Diamonds : BSCoupon {$/;"	s
BSCoupon	manager/BSCouponManager.h	/^struct BSCoupon_Hero : BSCoupon {$/;"	s
BSCoupon	manager/BSCouponManager.h	/^struct BSCoupon_Items : BSCoupon {$/;"	s
BSCoupon::heroClassId	manager/BSCouponManager.h	/^	vn::u32 heroClassId = 0;$/;"	m	struct:BSCoupon	access:public
BSCoupon::items	manager/BSCouponManager.h	/^    std::vector<std::pair<u32, u32>> items; \/\/ <id, count>$/;"	m	struct:BSCoupon	access:public
BSCoupon::productId	manager/BSCouponManager.h	/^	vn::u32 productId = 0;$/;"	m	struct:BSCoupon	access:public
BSCoupon::type	manager/BSCouponManager.h	/^    Type type() const { return kCT_Diamonds; }$/;"	f	struct:BSCoupon	access:public
BSCoupon::type	manager/BSCouponManager.h	/^    Type type() const { return kCT_Hero; }$/;"	f	struct:BSCoupon	access:public
BSCoupon::type	manager/BSCouponManager.h	/^    Type type() const { return kCT_Items; }$/;"	f	struct:BSCoupon	access:public
BSCoupon::u32	manager/BSCouponManager.h	/^    std::vector<std::pair<u32, u32>> items; \/\/ <id, count>$/;"	m	struct:BSCoupon	access:public
BSCouponManager::find	manager/BSCouponManager.cpp	/^const BSCoupon * BSCouponManager::find(LoggedUser *user, u32 couponId) {$/;"	f	class:BSCouponManager	signature:(LoggedUser *user, u32 couponId)
BSCouponManager::find	manager/BSCouponManager.cpp	/^const BSCoupon * BSCouponManager::find(u32 couponId) {$/;"	f	class:BSCouponManager	signature:(u32 couponId)
BSCouponManager::generate	manager/BSCouponManager.cpp	/^const BSCoupon * BSCouponManager::generate(LoggedUser *user) {$/;"	f	class:BSCouponManager	signature:(LoggedUser *user)
BSCouponManager::initData	manager/BSCouponManager.cpp	/^void BSCouponManager::initData(const tbl::Table_coupon &table) {$/;"	f	class:BSCouponManager	signature:(const tbl::Table_coupon &table)
BSDiamondShop::find_product	manager/BSDiamondShop.cpp	/^BSDiamondShop::Product * BSDiamondShop::find_product(u32 id) {$/;"	f	class:BSDiamondShop	signature:(u32 id)
BSDiamondShop::initData	manager/BSDiamondShop.cpp	/^void BSDiamondShop::initData(const tbl::Table_diamond_shop &table) {$/;"	f	class:BSDiamondShop	signature:(const tbl::Table_diamond_shop &table)
BSDiamondShop::productMap	manager/BSDiamondShop.cpp	/^const std::map<u32, BSDiamondShop::Product> & BSDiamondShop::productMap() {$/;"	f	class:BSDiamondShop	signature:()
BSFactory::find_herorune	manager/BSFactory.cpp	/^const tbl::Record_herorune * BSFactory::find_herorune(u32 runeClass, u32 rank)$/;"	f	class:BSFactory	signature:(u32 runeClass, u32 rank)
BSFactory::find_itemStore	manager/BSFactory.cpp	/^const tbl::Record_item_store * BSFactory::find_itemStore(u32 id)$/;"	f	class:BSFactory	signature:(u32 id)
BSFactory::find_level	manager/BSFactory.cpp	/^const tbl::Record_level * BSFactory::find_level(u32 id)$/;"	f	class:BSFactory	signature:(u32 id)
BSFactory::find_tower	manager/BSFactory.cpp	/^const tbl::Record_tower * BSFactory::find_tower(u32 id)$/;"	f	class:BSFactory	signature:(u32 id)
BSFactory::herorune	manager/BSFactory.cpp	/^tbl::Table_herorune & BSFactory::herorune()$/;"	f	class:BSFactory	signature:()
BSFactory::itemStore	manager/BSFactory.cpp	/^tbl::Table_item_store & BSFactory::itemStore()$/;"	f	class:BSFactory	signature:()
BSFactory::level	manager/BSFactory.cpp	/^tbl::Table_level & BSFactory::level()$/;"	f	class:BSFactory	signature:()
BSFactory::monster	manager/BSFactory.cpp	/^tbl::Table_monster & BSFactory::monster()$/;"	f	class:BSFactory	signature:()
BSFactory::progress	manager/BSFactory.cpp	/^tbl::Table_progress & BSFactory::progress()$/;"	f	class:BSFactory	signature:()
BSFactory::tower	manager/BSFactory.cpp	/^tbl::Table_tower & BSFactory::tower()$/;"	f	class:BSFactory	signature:()
BSForceGuide	worker/BSForceGuide.cpp	/^BSForceGuide::BSForceGuide(LoggedUser *user)$/;"	f	class:BSForceGuide	signature:(LoggedUser *user)
BSForceGuide::BSForceGuide	worker/BSForceGuide.cpp	/^BSForceGuide::BSForceGuide(LoggedUser *user)$/;"	f	class:BSForceGuide	signature:(LoggedUser *user)
BSForceGuide::disableList	worker/BSForceGuide.cpp	/^const std::set<u32> & BSForceGuide::disableList()$/;"	f	class:BSForceGuide	signature:()
BSForceGuide::erase	worker/BSForceGuide.cpp	/^void BSForceGuide::erase(u32 data)$/;"	f	class:BSForceGuide	signature:(u32 data)
BSForceGuide::init	worker/BSForceGuide.cpp	/^void BSForceGuide::init()$/;"	f	class:BSForceGuide	signature:()
BSForceGuide::insert	worker/BSForceGuide.cpp	/^bool BSForceGuide::insert(u32 data) {$/;"	f	class:BSForceGuide	signature:(u32 data)
BSForceGuide::load	worker/BSForceGuide.cpp	/^void BSForceGuide::load(PreparedQueryResult result)$/;"	f	class:BSForceGuide	signature:(PreparedQueryResult result)
BSForceGuide::load	worker/BSForceGuide.cpp	/^void BSForceGuide::load(Variable_object &vobj)$/;"	f	class:BSForceGuide	signature:(Variable_object &vobj)
BSForceGuide::load	worker/BSForceGuide.cpp	/^void BSForceGuide::load(u32 version, DataStream &stream)$/;"	f	class:BSForceGuide	signature:(u32 version, DataStream &stream)
BSForceGuide::save	worker/BSForceGuide.cpp	/^void BSForceGuide::save(DataStream &stream) const$/;"	f	class:BSForceGuide	signature:(DataStream &stream) const
BSForceGuide::save	worker/BSForceGuide.cpp	/^void BSForceGuide::save(Variable_object &vobj) const {$/;"	f	class:BSForceGuide	signature:(Variable_object &vobj) const
BSForceGuide::~BSForceGuide	worker/BSForceGuide.cpp	/^BSForceGuide::~BSForceGuide()$/;"	f	class:BSForceGuide	signature:()
BSGoldMine	worker/BSGoldMine.cpp	/^BSGoldMine::BSGoldMine(LoggedUser *user)$/;"	f	class:BSGoldMine	signature:(LoggedUser *user)
BSGoldMine::AsyncSave	worker/BSGoldMine.cpp	/^void BSGoldMine::AsyncSave(AsyncObjectPtr asyncObjectPtr,u32 id,std::function<void(bool ret)> doResult)$/;"	f	class:BSGoldMine	signature:(AsyncObjectPtr asyncObjectPtr,u32 id,std::function<void(bool ret)> doResult)
BSGoldMine::AsyncSave	worker/BSGoldMine.cpp	/^void BSGoldMine::AsyncSave(vn::RefCountedPtr<AsyncObject> asyncObjectPtr,std::function<void(bool ret)> doResult)$/;"	f	class:BSGoldMine	signature:(vn::RefCountedPtr<AsyncObject> asyncObjectPtr,std::function<void(bool ret)> doResult)
BSGoldMine::Asynccollect	worker/BSGoldMine.cpp	/^void BSGoldMine::Asynccollect(u32 id, u32 num,std::function<void(int ret)> doResult)$/;"	f	class:BSGoldMine	signature:(u32 id, u32 num,std::function<void(int ret)> doResult)
BSGoldMine::Asyncupdate	worker/BSGoldMine.cpp	/^void BSGoldMine::Asyncupdate(f32 deltaTime,std::function<void(bool ret)>doResult)$/;"	f	class:BSGoldMine	signature:(f32 deltaTime,std::function<void(bool ret)>doResult)
BSGoldMine::BSGoldMine	worker/BSGoldMine.cpp	/^BSGoldMine::BSGoldMine(LoggedUser *user)$/;"	f	class:BSGoldMine	signature:(LoggedUser *user)
BSGoldMine::GoldMine::calcYield	worker/BSGoldMine.cpp	/^void BSGoldMine::GoldMine::calcYield() {$/;"	f	class:BSGoldMine::GoldMine	signature:()
BSGoldMine::GoldMine::update	worker/BSGoldMine.cpp	/^bool BSGoldMine::GoldMine::update(f32 deltaTime)$/;"	f	class:BSGoldMine::GoldMine	signature:(f32 deltaTime)
BSGoldMine::_calcYield	worker/BSGoldMine.cpp	/^void BSGoldMine::_calcYield()$/;"	f	class:BSGoldMine	signature:()
BSGoldMine::_setStatus	worker/BSGoldMine.cpp	/^void BSGoldMine::_setStatus(u32 mineId, u32 levelId, bool group, u32 status) {$/;"	f	class:BSGoldMine	signature:(u32 mineId, u32 levelId, bool group, u32 status)
BSGoldMine::collect	worker/BSGoldMine.cpp	/^bool BSGoldMine::collect(u32 id, u32 num,s32 *addDiamond)$/;"	f	class:BSGoldMine	signature:(u32 id, u32 num,s32 *addDiamond)
BSGoldMine::init	worker/BSGoldMine.cpp	/^void BSGoldMine::init()$/;"	f	class:BSGoldMine	signature:()
BSGoldMine::load	worker/BSGoldMine.cpp	/^void BSGoldMine::load(PreparedQueryResult result)$/;"	f	class:BSGoldMine	signature:(PreparedQueryResult result)
BSGoldMine::load	worker/BSGoldMine.cpp	/^void BSGoldMine::load(Variable_object &vobj) {$/;"	f	class:BSGoldMine	signature:(Variable_object &vobj)
BSGoldMine::load	worker/BSGoldMine.cpp	/^void BSGoldMine::load(u32 version, DataStream &stream)$/;"	f	class:BSGoldMine	signature:(u32 version, DataStream &stream)
BSGoldMine::loadInitialGoldMineList	worker/BSGoldMine.cpp	/^bool BSGoldMine::loadInitialGoldMineList(u32 fsId, const str8 &path) {$/;"	f	class:BSGoldMine	signature:(u32 fsId, const str8 &path)
BSGoldMine::notifyIntrusion	worker/BSGoldMine.cpp	/^void BSGoldMine::notifyIntrusion(u32 mineId, u32 levelId, bool group) {$/;"	f	class:BSGoldMine	signature:(u32 mineId, u32 levelId, bool group)
BSGoldMine::notifyVictory	worker/BSGoldMine.cpp	/^void BSGoldMine::notifyVictory(u32 mineId, u32 levelId, bool group) {$/;"	f	class:BSGoldMine	signature:(u32 mineId, u32 levelId, bool group)
BSGoldMine::s_initalMines	worker/BSGoldMine.cpp	/^decltype(BSGoldMine::s_initalMines) BSGoldMine::s_initalMines;$/;"	m	class:BSGoldMine	file:
BSGoldMine::save	worker/BSGoldMine.cpp	/^void BSGoldMine::save(DataStream &stream) const$/;"	f	class:BSGoldMine	signature:(DataStream &stream) const
BSGoldMine::save	worker/BSGoldMine.cpp	/^void BSGoldMine::save(Variable_object &vobj) const {$/;"	f	class:BSGoldMine	signature:(Variable_object &vobj) const
BSGoldMine::update	worker/BSGoldMine.cpp	/^void BSGoldMine::update(f32 deltaTime)$/;"	f	class:BSGoldMine	signature:(f32 deltaTime)
BSHero	worker/BSHero.cpp	/^BSHero::BSHero(LoggedUser *user)$/;"	f	class:BSHero	signature:(LoggedUser *user)
BSHero::Asyncsave	worker/BSHero.cpp	/^void BSHero::Asyncsave(u32 idx,std::function<void(bool ret)>doResult)$/;"	f	class:BSHero	signature:(u32 idx,std::function<void(bool ret)>doResult)
BSHero::AsyncsaveRune	worker/BSHero.cpp	/^void BSHero::AsyncsaveRune(u32 idx, u32 runeIdx,std::function<void(bool ret)>doResult)$/;"	f	class:BSHero	signature:(u32 idx, u32 runeIdx,std::function<void(bool ret)>doResult)
BSHero::Asyncunlock_rune	worker/BSHero.cpp	/^void  BSHero::Asyncunlock_rune(u32 idx, u32 runeIdx,std::function<void(int ret)>doResult)$/;"	f	class:BSHero	signature:(u32 idx, u32 runeIdx,std::function<void(int ret)>doResult)
BSHero::Asyncupgrade_hero	worker/BSHero.cpp	/^void BSHero::Asyncupgrade_hero(u32 idx, bool useCoupon,std::function<void(int ret)>doResult)$/;"	f	class:BSHero	signature:(u32 idx, bool useCoupon,std::function<void(int ret)>doResult)
BSHero::BSHero	worker/BSHero.cpp	/^BSHero::BSHero(LoggedUser *user)$/;"	f	class:BSHero	signature:(LoggedUser *user)
BSHero::SyncOpenHero	worker/BSHero.cpp	/^bool  BSHero::SyncOpenHero()$/;"	f	class:BSHero	signature:()
BSHero::SyncOpenRune	worker/BSHero.cpp	/^bool BSHero::SyncOpenRune(std::vector<Rune> &runeList, u32 towerClass, u32 lv)$/;"	f	class:BSHero	signature:(std::vector<Rune> &runeList, u32 towerClass, u32 lv)
BSHero::_open_rune	worker/BSHero.cpp	/^void BSHero::_open_rune(std::vector<Rune> &runeList, u32 towerClass, u32 lv)$/;"	f	class:BSHero	signature:(std::vector<Rune> &runeList, u32 towerClass, u32 lv)
BSHero::_update_rune_res	worker/BSHero.cpp	/^void BSHero::_update_rune_res()$/;"	f	class:BSHero	signature:()
BSHero::heroList	worker/BSHero.cpp	/^const std::vector<BSHero::HeroInfo> & BSHero::heroList()$/;"	f	class:BSHero	signature:()
BSHero::init	worker/BSHero.cpp	/^void BSHero::init()$/;"	f	class:BSHero	signature:()
BSHero::load	worker/BSHero.cpp	/^void BSHero::load(HeroInfo &heroinfo)$/;"	f	class:BSHero	signature:(HeroInfo &heroinfo)
BSHero::load	worker/BSHero.cpp	/^void BSHero::load(PreparedQueryResult baseinfo)$/;"	f	class:BSHero	signature:(PreparedQueryResult baseinfo)
BSHero::load	worker/BSHero.cpp	/^void BSHero::load(Variable_object &vobj) {$/;"	f	class:BSHero	signature:(Variable_object &vobj)
BSHero::load	worker/BSHero.cpp	/^void BSHero::load(u32 version, DataStream &stream)$/;"	f	class:BSHero	signature:(u32 version, DataStream &stream)
BSHero::loadInitalHeroList	worker/BSHero.cpp	/^bool BSHero::loadInitalHeroList(u32 fsId, const str8 &fileName) {$/;"	f	class:BSHero	signature:(u32 fsId, const str8 &fileName)
BSHero::open_hero	worker/BSHero.cpp	/^void BSHero::open_hero()$/;"	f	class:BSHero	signature:()
BSHero::s_initialHeroList	worker/BSHero.cpp	/^decltype(BSHero::m_heroList) BSHero::s_initialHeroList;$/;"	m	class:BSHero	file:
BSHero::save	worker/BSHero.cpp	/^void BSHero::save(DataStream &stream) const$/;"	f	class:BSHero	signature:(DataStream &stream) const
BSHero::save	worker/BSHero.cpp	/^void BSHero::save(Variable_object &vobj) const {$/;"	f	class:BSHero	signature:(Variable_object &vobj) const
BSHero::shovel	worker/BSHero.cpp	/^const u32 * BSHero::shovel()$/;"	f	class:BSHero	signature:()
BSHero::skull	worker/BSHero.cpp	/^const u32 * BSHero::skull()$/;"	f	class:BSHero	signature:()
BSHero::unlock_rune	worker/BSHero.cpp	/^bool BSHero::unlock_rune(u32 idx, u32 runeIdx)$/;"	f	class:BSHero	signature:(u32 idx, u32 runeIdx)
BSHero::unlocked	worker/BSHero.cpp	/^bool BSHero::unlocked(u32 heroClassId) {$/;"	f	class:BSHero	signature:(u32 heroClassId)
BSHero::upgrade_hero	worker/BSHero.cpp	/^bool BSHero::upgrade_hero(u32 idx, bool useCoupon,s32 *payDiamond)$/;"	f	class:BSHero	signature:(u32 idx, bool useCoupon,s32 *payDiamond)
BSHero::watch	worker/BSHero.cpp	/^const u32 * BSHero::watch()$/;"	f	class:BSHero	signature:()
BSHero::~BSHero	worker/BSHero.cpp	/^BSHero::~BSHero()$/;"	f	class:BSHero	signature:()
BSIntrusion	worker/BSIntrusion.cpp	/^BSIntrusion::BSIntrusion(LoggedUser *user)$/;"	f	class:BSIntrusion	signature:(LoggedUser *user)
BSIntrusion::Async_intrusion	worker/BSIntrusion.cpp	/^void BSIntrusion::Async_intrusion(AsyncObjectPtr asyncObjPtr,std::function<void(bool ret)> doResult)$/;"	f	class:BSIntrusion	signature:(AsyncObjectPtr asyncObjPtr,std::function<void(bool ret)> doResult)
BSIntrusion::Asyncsave	worker/BSIntrusion.cpp	/^void BSIntrusion::Asyncsave(AsyncObjectPtr asyncObjPtr,std::function<void(bool)> doResulet)$/;"	f	class:BSIntrusion	signature:(AsyncObjectPtr asyncObjPtr,std::function<void(bool)> doResulet)
BSIntrusion::Asyncupdate	worker/BSIntrusion.cpp	/^void BSIntrusion::Asyncupdate(f32 deltaTime,std::function<void(bool ret)> doResult)$/;"	f	class:BSIntrusion	signature:(f32 deltaTime,std::function<void(bool ret)> doResult)
BSIntrusion::BSIntrusion	worker/BSIntrusion.cpp	/^BSIntrusion::BSIntrusion(LoggedUser *user)$/;"	f	class:BSIntrusion	signature:(LoggedUser *user)
BSIntrusion::Sync_intrusion	worker/BSIntrusion.cpp	/^bool BSIntrusion::Sync_intrusion()$/;"	f	class:BSIntrusion	signature:()
BSIntrusion::_intrusion	worker/BSIntrusion.cpp	/^void BSIntrusion::_intrusion()$/;"	f	class:BSIntrusion	signature:()
BSIntrusion::init	worker/BSIntrusion.cpp	/^void BSIntrusion::init()$/;"	f	class:BSIntrusion	signature:()
BSIntrusion::intrusion	worker/BSIntrusion.cpp	/^void BSIntrusion::intrusion()$/;"	f	class:BSIntrusion	signature:()
BSIntrusion::load	worker/BSIntrusion.cpp	/^void BSIntrusion::load(PreparedQueryResult baseinfo)$/;"	f	class:BSIntrusion	signature:(PreparedQueryResult baseinfo)
BSIntrusion::load	worker/BSIntrusion.cpp	/^void BSIntrusion::load(Variable_object &vobj) {$/;"	f	class:BSIntrusion	signature:(Variable_object &vobj)
BSIntrusion::load	worker/BSIntrusion.cpp	/^void BSIntrusion::load(u32 version, DataStream &stream)$/;"	f	class:BSIntrusion	signature:(u32 version, DataStream &stream)
BSIntrusion::save	worker/BSIntrusion.cpp	/^void BSIntrusion::save(DataStream &stream) const$/;"	f	class:BSIntrusion	signature:(DataStream &stream) const
BSIntrusion::save	worker/BSIntrusion.cpp	/^void BSIntrusion::save(Variable_object &vobj) const {$/;"	f	class:BSIntrusion	signature:(Variable_object &vobj) const
BSIntrusion::update	worker/BSIntrusion.cpp	/^void BSIntrusion::update(f32 deltaTime)$/;"	f	class:BSIntrusion	signature:(f32 deltaTime)
BSItemStore	worker/BSItemStore.cpp	/^BSItemStore::BSItemStore(LoggedUser *user)$/;"	f	class:BSItemStore	signature:(LoggedUser *user)
BSItemStore::AsyncBuy	worker/BSItemStore.cpp	/^void BSItemStore::AsyncBuy(u32 id,std::function<void (int result)>doResult)$/;"	f	class:BSItemStore	signature:(u32 id,std::function<void (int result)>doResult)
BSItemStore::AsyncUse	worker/BSItemStore.cpp	/^void BSItemStore::AsyncUse(u32 id,std::function<void (int result)>doResult)$/;"	f	class:BSItemStore	signature:(u32 id,std::function<void (int result)>doResult)
BSItemStore::Asyncadd	worker/BSItemStore.cpp	/^void BSItemStore::Asyncadd(u32 id, u32 count,std::function<void (bool ret)>doResult)$/;"	f	class:BSItemStore	signature:(u32 id, u32 count,std::function<void (bool ret)>doResult)
BSItemStore::Asyncsave	worker/BSItemStore.cpp	/^void BSItemStore::Asyncsave(u32 id,std::function<void (bool ret)> doResult)$/;"	f	class:BSItemStore	signature:(u32 id,std::function<void (bool ret)> doResult)
BSItemStore::BSItemStore	worker/BSItemStore.cpp	/^BSItemStore::BSItemStore(LoggedUser *user)$/;"	f	class:BSItemStore	signature:(LoggedUser *user)
BSItemStore::_add	worker/BSItemStore.cpp	/^void BSItemStore::_add(u32 id, u32 count) {$/;"	f	class:BSItemStore	signature:(u32 id, u32 count)
BSItemStore::buy	worker/BSItemStore.cpp	/^bool BSItemStore::buy(u32 id,s32 *payDiamond)$/;"	f	class:BSItemStore	signature:(u32 id,s32 *payDiamond)
BSItemStore::init	worker/BSItemStore.cpp	/^void BSItemStore::init()$/;"	f	class:BSItemStore	signature:()
BSItemStore::itemMap	worker/BSItemStore.cpp	/^ std::map<u32, u32> & BSItemStore::itemMap()$/;"	f	class:BSItemStore	signature:()
BSItemStore::load	worker/BSItemStore.cpp	/^void BSItemStore::load(PreparedQueryResult result)$/;"	f	class:BSItemStore	signature:(PreparedQueryResult result)
BSItemStore::load	worker/BSItemStore.cpp	/^void BSItemStore::load(Variable_object &vobj) {$/;"	f	class:BSItemStore	signature:(Variable_object &vobj)
BSItemStore::load	worker/BSItemStore.cpp	/^void BSItemStore::load(u32 version, DataStream &stream)$/;"	f	class:BSItemStore	signature:(u32 version, DataStream &stream)
BSItemStore::save	worker/BSItemStore.cpp	/^void BSItemStore::save(DataStream &stream) const$/;"	f	class:BSItemStore	signature:(DataStream &stream) const
BSItemStore::save	worker/BSItemStore.cpp	/^void BSItemStore::save(Variable_object &vobj) const {$/;"	f	class:BSItemStore	signature:(Variable_object &vobj) const
BSItemStore::use	worker/BSItemStore.cpp	/^bool BSItemStore::use(u32 id)$/;"	f	class:BSItemStore	signature:(u32 id)
BSItemStore::~BSItemStore	worker/BSItemStore.cpp	/^BSItemStore::~BSItemStore()$/;"	f	class:BSItemStore	signature:()
BSLevel	worker/BSLevel.cpp	/^BSLevel::BSLevel(LoggedUser *user) :m_user(user) {}$/;"	f	class:BSLevel	signature:(LoggedUser *user)
BSLevel::AsyncInsert	worker/BSLevel.cpp	/^void BSLevel::AsyncInsert(u32 levelId,std::function<void(bool ret)> doResult)$/;"	f	class:BSLevel	signature:(u32 levelId,std::function<void(bool ret)> doResult)
BSLevel::AsyncUpdate	worker/BSLevel.cpp	/^void BSLevel::AsyncUpdate(u32 levelId,std::function<void(bool ret)> doResult)$/;"	f	class:BSLevel	signature:(u32 levelId,std::function<void(bool ret)> doResult)
BSLevel::Asyncintrude	worker/BSLevel.cpp	/^void BSLevel::Asyncintrude(AsyncObjectPtr asyncObjPtr,u32 levelId,std::function<void(bool ret)> doResult)$/;"	f	class:BSLevel	signature:(AsyncObjectPtr asyncObjPtr,u32 levelId,std::function<void(bool ret)> doResult)
BSLevel::Asyncupdate_levelInfo	worker/BSLevel.cpp	/^void BSLevel::Asyncupdate_levelInfo(const tbl::Record_level *data, u32 starNum, s32 score, bool shovel, bool watch, bool *intrusion,std::function<void(int ret)> doResult)$/;"	f	class:BSLevel	signature:(const tbl::Record_level *data, u32 starNum, s32 score, bool shovel, bool watch, bool *intrusion,std::function<void(int ret)> doResult)
BSLevel::BSLevel	worker/BSLevel.cpp	/^BSLevel::BSLevel(LoggedUser *user) :m_user(user) {}$/;"	f	class:BSLevel	signature:(LoggedUser *user)
BSLevel::Syncintrude	worker/BSLevel.cpp	/^bool BSLevel::Syncintrude(u32 levelId)$/;"	f	class:BSLevel	signature:(u32 levelId)
BSLevel::_clear	worker/BSLevel.cpp	/^void BSLevel::_clear()$/;"	f	class:BSLevel	signature:()
BSLevel::find	worker/BSLevel.cpp	/^BSLevel::LevelInfo * BSLevel::find(u32 id) {$/;"	f	class:BSLevel	signature:(u32 id)
BSLevel::init	worker/BSLevel.cpp	/^void BSLevel::init()$/;"	f	class:BSLevel	signature:()
BSLevel::intrude	worker/BSLevel.cpp	/^void BSLevel::intrude(u32 levelId) {$/;"	f	class:BSLevel	signature:(u32 levelId)
BSLevel::intrusion	worker/BSLevel.cpp	/^bool BSLevel::intrusion(u32 levelId) {$/;"	f	class:BSLevel	signature:(u32 levelId)
BSLevel::levelList	worker/BSLevel.cpp	/^std::map<u32, BSLevel::LevelInfo *> & BSLevel::levelList() {$/;"	f	class:BSLevel	signature:()
BSLevel::load	worker/BSLevel.cpp	/^void BSLevel::load(PreparedQueryResult result)$/;"	f	class:BSLevel	signature:(PreparedQueryResult result)
BSLevel::load	worker/BSLevel.cpp	/^void BSLevel::load(Variable_object &vobj) {$/;"	f	class:BSLevel	signature:(Variable_object &vobj)
BSLevel::load	worker/BSLevel.cpp	/^void BSLevel::load(u32 version, DataStream &stream)$/;"	f	class:BSLevel	signature:(u32 version, DataStream &stream)
BSLevel::pass_level	worker/BSLevel.cpp	/^void BSLevel::pass_level(u32 param) {$/;"	f	class:BSLevel	signature:(u32 param)
BSLevel::passed	worker/BSLevel.cpp	/^bool BSLevel::passed(u32 levelId) {$/;"	f	class:BSLevel	signature:(u32 levelId)
BSLevel::save	worker/BSLevel.cpp	/^void BSLevel::save(DataStream &stream) const$/;"	f	class:BSLevel	signature:(DataStream &stream) const
BSLevel::save	worker/BSLevel.cpp	/^void BSLevel::save(Variable_object &vobj) const {$/;"	f	class:BSLevel	signature:(Variable_object &vobj) const
BSLevel::update_levelInfo	worker/BSLevel.cpp	/^bool BSLevel::update_levelInfo(const tbl::Record_level *data, u32 starNum, s32 score, bool shovel, bool watch, bool *intrusion,bool *ifNew,s32 *addDiamond) {$/;"	f	class:BSLevel	signature:(const tbl::Record_level *data, u32 starNum, s32 score, bool shovel, bool watch, bool *intrusion,bool *ifNew,s32 *addDiamond)
BSLevel::~BSLevel	worker/BSLevel.cpp	/^BSLevel::~BSLevel()$/;"	f	class:BSLevel	signature:()
BSLevelGroup	worker/BSLevelGroup.cpp	/^BSLevelGroup::BSLevelGroup(const BSLevelGroupInfo *_info)$/;"	f	class:BSLevelGroup	signature:(const BSLevelGroupInfo *_info)
BSLevelGroup::BSLevelGroup	worker/BSLevelGroup.cpp	/^BSLevelGroup::BSLevelGroup(const BSLevelGroupInfo *_info)$/;"	f	class:BSLevelGroup	signature:(const BSLevelGroupInfo *_info)
BSLevelGroup::refresh	worker/BSLevelGroup.cpp	/^void BSLevelGroup::refresh() {$/;"	f	class:BSLevelGroup	signature:()
BSLevelGroup::reset	worker/BSLevelGroup.cpp	/^BSLevelGroup::LevelInfo * BSLevelGroup::reset(u32 levelId) {$/;"	f	class:BSLevelGroup	signature:(u32 levelId)
BSLevelGroup::win	worker/BSLevelGroup.cpp	/^BSLevelGroup::LevelInfo * BSLevelGroup::win(u32 levelId, u32 stars, bool watch, bool shovel, const std::vector<u32> &heros, const std::vector<std::pair<u32, u32>> &towers, const std::vector<std::pair<u32, u32>> &platforms, bool &firstVictory, size_t &firstReward) {$/;"	f	class:BSLevelGroup	signature:(u32 levelId, u32 stars, bool watch, bool shovel, const std::vector<u32> &heros, const std::vector<std::pair<u32, u32>> &towers, const std::vector<std::pair<u32, u32>> &platforms, bool &firstVictory, size_t &firstReward)
BSLevelGroupInfo	worker/BSLevelGroupInfo.cpp	/^BSLevelGroupInfo::BSLevelGroupInfo(const tbl::Record_levelclass &rec)$/;"	f	class:BSLevelGroupInfo	signature:(const tbl::Record_levelclass &rec)
BSLevelGroupInfo::BSLevelGroupInfo	worker/BSLevelGroupInfo.cpp	/^BSLevelGroupInfo::BSLevelGroupInfo(const tbl::Record_levelclass &rec)$/;"	f	class:BSLevelGroupInfo	signature:(const tbl::Record_levelclass &rec)
BSLevelGroupInfoManager::findGroup	manager/BSLevelGroupInfoManager.cpp	/^const BSLevelGroupInfo * BSLevelGroupInfoManager::findGroup(u32 groupId) {$/;"	f	class:BSLevelGroupInfoManager	signature:(u32 groupId)
BSLevelGroupInfoManager::initData	manager/BSLevelGroupInfoManager.cpp	/^void BSLevelGroupInfoManager::initData(const tbl::Table_levelclass &table) {$/;"	f	class:BSLevelGroupInfoManager	signature:(const tbl::Table_levelclass &table)
BSLevelGroupManager::Asyncintrude	worker/BSLevelGroup.cpp	/^void BSLevelGroupManager::Asyncintrude(AsyncObjectPtr asyncObjPtr,u32 groupId,std::function<void(bool ret)> doResult)$/;"	f	class:BSLevelGroupManager	signature:(AsyncObjectPtr asyncObjPtr,u32 groupId,std::function<void(bool ret)> doResult)
BSLevelGroupManager::Asyncsave	worker/BSLevelGroup.cpp	/^void BSLevelGroupManager::Asyncsave(u32 levelId,std::function<void(int ret)>doResult)$/;"	f	class:BSLevelGroupManager	signature:(u32 levelId,std::function<void(int ret)>doResult)
BSLevelGroupManager::AsyncsaveNew	worker/BSLevelGroup.cpp	/^void BSLevelGroupManager::AsyncsaveNew(u32 levelId,std::function<void(int ret)>doResult)$/;"	f	class:BSLevelGroupManager	signature:(u32 levelId,std::function<void(int ret)>doResult)
BSLevelGroupManager::Syncintrude	worker/BSLevelGroup.cpp	/^bool BSLevelGroupManager::Syncintrude(u32 groupId)$/;"	f	class:BSLevelGroupManager	signature:(u32 groupId)
BSLevelGroupManager::_AsyncInsertLevelToGroupHandl	worker/BSLevelGroup.cpp	/^void	BSLevelGroupManager::_AsyncInsertLevelToGroupHandl(bool ret,u32 groupId,u32 levelId,AsyncTaskPtr task,std::function<void(int ret)> doResult)$/;"	f	class:BSLevelGroupManager	signature:(bool ret,u32 groupId,u32 levelId,AsyncTaskPtr task,std::function<void(int ret)> doResult)
BSLevelGroupManager::_AsyncintrudeHandl	worker/BSLevelGroup.cpp	/^void BSLevelGroupManager::_AsyncintrudeHandl(bool ret,AsyncTaskPtr task,std::function<void(bool ret)> doResult,u32 groupId,u32 levelId,u32 mineId)$/;"	f	class:BSLevelGroupManager	signature:(bool ret,AsyncTaskPtr task,std::function<void(bool ret)> doResult,u32 groupId,u32 levelId,u32 mineId)
BSLevelGroupManager::_AsyncsaveNewHandl	worker/BSLevelGroup.cpp	/^void	BSLevelGroupManager::_AsyncsaveNewHandl(AsyncTaskPtr task,std::function<void(int ret)>doResult)$/;"	f	class:BSLevelGroupManager	signature:(AsyncTaskPtr task,std::function<void(int ret)>doResult)
BSLevelGroupManager::checkGroupStatus	worker/BSLevelGroup.cpp	/^u32 BSLevelGroupManager::checkGroupStatus(u32 groupId) {$/;"	f	class:BSLevelGroupManager	signature:(u32 groupId)
BSLevelGroupManager::clear	worker/BSLevelGroup.cpp	/^void BSLevelGroupManager::clear() {$/;"	f	class:BSLevelGroupManager	signature:()
BSLevelGroupManager::intrude	worker/BSLevelGroup.cpp	/^void BSLevelGroupManager::intrude(u32 groupId) {$/;"	f	class:BSLevelGroupManager	signature:(u32 groupId)
BSLevelGroupManager::intrusion	worker/BSLevelGroup.cpp	/^bool BSLevelGroupManager::intrusion(u32 groupId) {$/;"	f	class:BSLevelGroupManager	signature:(u32 groupId)
BSLevelGroupManager::load	worker/BSLevelGroup.cpp	/^void	BSLevelGroupManager::load(PreparedQueryResult groupResult)$/;"	f	class:BSLevelGroupManager	signature:(PreparedQueryResult groupResult)
BSLevelGroupManager::load	worker/BSLevelGroup.cpp	/^void BSLevelGroupManager::load(Variable_object &vobj) {$/;"	f	class:BSLevelGroupManager	signature:(Variable_object &vobj)
BSLevelGroupManager::load	worker/BSLevelGroup.cpp	/^void BSLevelGroupManager::load(u8 version, DataStream &stream) {$/;"	f	class:BSLevelGroupManager	signature:(u8 version, DataStream &stream)
BSLevelGroupManager::passed	worker/BSLevelGroup.cpp	/^bool BSLevelGroupManager::passed(u32 groupId) {$/;"	f	class:BSLevelGroupManager	signature:(u32 groupId)
BSLevelGroupManager::reset	worker/BSLevelGroup.cpp	/^bool BSLevelGroupManager::reset(u32 levelId) {$/;"	f	class:BSLevelGroupManager	signature:(u32 levelId)
BSLevelGroupManager::save	worker/BSLevelGroup.cpp	/^void BSLevelGroupManager::save(DataStream &stream) const {$/;"	f	class:BSLevelGroupManager	signature:(DataStream &stream) const
BSLevelGroupManager::save	worker/BSLevelGroup.cpp	/^void BSLevelGroupManager::save(Variable_object &vobj) const {$/;"	f	class:BSLevelGroupManager	signature:(Variable_object &vobj) const
BSLevelGroupManager::win	worker/BSLevelGroup.cpp	/^bool BSLevelGroupManager::win(u32 levelId, u32 stars, bool watch, bool shovel, const std::vector<u32> &heroes, const std::vector<std::pair<u32, u32>> &towers, const std::vector<std::pair<u32, u32>> &platforms, bool *intrusion,bool *ifNew,vn::s32 *pAddDiamond) {$/;"	f	class:BSLevelGroupManager	signature:(u32 levelId, u32 stars, bool watch, bool shovel, const std::vector<u32> &heroes, const std::vector<std::pair<u32, u32>> &towers, const std::vector<std::pair<u32, u32>> &platforms, bool *intrusion,bool *ifNew,vn::s32 *pAddDiamond)
BSMission::Asyncsave	worker/BSMission.cpp	/^void BSMission::Asyncsave(u32 missionId,std::function<void(bool ret)>doResult)$/;"	f	class:BSMission	signature:(u32 missionId,std::function<void(bool ret)>doResult)
BSMission::AsyncsetReward	worker/BSMission.cpp	/^void BSMission::AsyncsetReward(u32 missionId ,bool missionStatus,std::function<void(bool ret)> doResult)$/;"	f	class:BSMission	signature:(u32 missionId ,bool missionStatus,std::function<void(bool ret)> doResult)
BSMission::load	worker/BSMission.cpp	/^void BSMission::load(PreparedQueryResult result )$/;"	f	class:BSMission	signature:(PreparedQueryResult result )
BSMission::load	worker/BSMission.cpp	/^void BSMission::load(Variable_object &vobj) {$/;"	f	class:BSMission	signature:(Variable_object &vobj)
BSMission::load	worker/BSMission.cpp	/^void BSMission::load(u8 version, DataStream &stream) {$/;"	f	class:BSMission	signature:(u8 version, DataStream &stream)
BSMission::reset	worker/BSMission.cpp	/^void BSMission::reset() {$/;"	f	class:BSMission	signature:()
BSMission::save	worker/BSMission.cpp	/^void BSMission::save(DataStream &stream) const {$/;"	f	class:BSMission	signature:(DataStream &stream) const
BSMission::save	worker/BSMission.cpp	/^void BSMission::save(Variable_object &vobj) const {$/;"	f	class:BSMission	signature:(Variable_object &vobj) const
BSMission::setReward	worker/BSMission.cpp	/^void BSMission::setReward(u32 id ,bool b) {$/;"	f	class:BSMission	signature:(u32 id ,bool b)
BSMissionManager::find_mission	manager/BSMissionManager.cpp	/^BSMissionManager::Mission * BSMissionManager::find_mission(u32 id) {$/;"	f	class:BSMissionManager	signature:(u32 id)
BSMissionManager::initData	manager/BSMissionManager.cpp	/^void BSMissionManager::initData(const tbl::Table_mission &table) {$/;"	f	class:BSMissionManager	signature:(const tbl::Table_mission &table)
BSMonsterMap	worker/BSMonsterMap.cpp	/^BSMonsterMap::BSMonsterMap(LoggedUser *user)$/;"	f	class:BSMonsterMap	signature:(LoggedUser *user)
BSMonsterMap::Asyncsave	worker/BSMonsterMap.cpp	/^void BSMonsterMap::Asyncsave(u32 id,std::function<void(bool ret)>doResult)$/;"	f	class:BSMonsterMap	signature:(u32 id,std::function<void(bool ret)>doResult)
BSMonsterMap::BSMonsterMap	worker/BSMonsterMap.cpp	/^BSMonsterMap::BSMonsterMap(LoggedUser *user)$/;"	f	class:BSMonsterMap	signature:(LoggedUser *user)
BSMonsterMap::init	worker/BSMonsterMap.cpp	/^void BSMonsterMap::init()$/;"	f	class:BSMonsterMap	signature:()
BSMonsterMap::load	worker/BSMonsterMap.cpp	/^void BSMonsterMap::load(PreparedQueryResult result )$/;"	f	class:BSMonsterMap	signature:(PreparedQueryResult result )
BSMonsterMap::load	worker/BSMonsterMap.cpp	/^void BSMonsterMap::load(Variable_object &vobj) {$/;"	f	class:BSMonsterMap	signature:(Variable_object &vobj)
BSMonsterMap::load	worker/BSMonsterMap.cpp	/^void BSMonsterMap::load(u32 version, DataStream &stream)$/;"	f	class:BSMonsterMap	signature:(u32 version, DataStream &stream)
BSMonsterMap::meet_monster	worker/BSMonsterMap.cpp	/^bool BSMonsterMap::meet_monster(u32 id)$/;"	f	class:BSMonsterMap	signature:(u32 id)
BSMonsterMap::monsterMap	worker/BSMonsterMap.cpp	/^std::map<u32, bool> & BSMonsterMap::monsterMap() {$/;"	f	class:BSMonsterMap	signature:()
BSMonsterMap::save	worker/BSMonsterMap.cpp	/^void BSMonsterMap::save(DataStream &stream) const$/;"	f	class:BSMonsterMap	signature:(DataStream &stream) const
BSMonsterMap::save	worker/BSMonsterMap.cpp	/^void BSMonsterMap::save(Variable_object &vobj) const {$/;"	f	class:BSMonsterMap	signature:(Variable_object &vobj) const
BSMonsterMap::unmeet_monster	worker/BSMonsterMap.cpp	/^void  BSMonsterMap::unmeet_monster(u32 id)$/;"	f	class:BSMonsterMap	signature:(u32 id)
BSMonsterMap::~BSMonsterMap	worker/BSMonsterMap.cpp	/^BSMonsterMap::~BSMonsterMap()$/;"	f	class:BSMonsterMap	signature:()
BSPlatformStore::Asyncbuy	worker/BSPlatformStore.cpp	/^void BSPlatformStore::Asyncbuy(u32 category,std::function<void(int ret)> doResult)$/;"	f	class:BSPlatformStore	signature:(u32 category,std::function<void(int ret)> doResult)
BSPlatformStore::Asyncsave	worker/BSPlatformStore.cpp	/^void BSPlatformStore::Asyncsave(u32 category,std::function<void(bool ret)>doResult)$/;"	f	class:BSPlatformStore	signature:(u32 category,std::function<void(bool ret)>doResult)
BSPlatformStore::buy	worker/BSPlatformStore.cpp	/^bool BSPlatformStore::buy(u32 category,s32 *payDiamond) {$/;"	f	class:BSPlatformStore	signature:(u32 category,s32 *payDiamond)
BSPlatformStore::load	worker/BSPlatformStore.cpp	/^void BSPlatformStore::load(PreparedQueryResult result )$/;"	f	class:BSPlatformStore	signature:(PreparedQueryResult result )
BSPlatformStore::load	worker/BSPlatformStore.cpp	/^void BSPlatformStore::load(Variable_object &vobj) {$/;"	f	class:BSPlatformStore	signature:(Variable_object &vobj)
BSPlatformStore::load	worker/BSPlatformStore.cpp	/^void BSPlatformStore::load(u8 version, DataStream &stream) {$/;"	f	class:BSPlatformStore	signature:(u8 version, DataStream &stream)
BSPlatformStore::reset	worker/BSPlatformStore.cpp	/^void BSPlatformStore::reset() {$/;"	f	class:BSPlatformStore	signature:()
BSPlatformStore::save	worker/BSPlatformStore.cpp	/^void BSPlatformStore::save(DataStream &stream) const {$/;"	f	class:BSPlatformStore	signature:(DataStream &stream) const
BSPlatformStore::save	worker/BSPlatformStore.cpp	/^void BSPlatformStore::save(Variable_object &vobj) const {$/;"	f	class:BSPlatformStore	signature:(Variable_object &vobj) const
BSPlatformStoreInfo::buy	worker/BSPlatformStoreInfo.cpp	/^bool BSPlatformStoreInfo::buy(u32 category, u32 currentNum, BSPlayerBaseInfo &player,s32 *payDiamond) {$/;"	f	class:BSPlatformStoreInfo	signature:(u32 category, u32 currentNum, BSPlayerBaseInfo &player,s32 *payDiamond)
BSPlatformStoreInfo::initData	worker/BSPlatformStoreInfo.cpp	/^void BSPlatformStoreInfo::initData(const tbl::Table_platform &table) {$/;"	f	class:BSPlatformStoreInfo	signature:(const tbl::Table_platform &table)
BSPlayerBaseInfo	worker/BSPlatformStoreInfo.h	/^class BSPlayerBaseInfo;$/;"	v
BSPlayerBaseInfo	worker/BSPlayerBaseInfo.cpp	/^BSPlayerBaseInfo::BSPlayerBaseInfo(LoggedUser *user)$/;"	f	class:BSPlayerBaseInfo	signature:(LoggedUser *user)
BSPlayerBaseInfo	worker/BSPlayerBaseInfo.cpp	/^BSPlayerBaseInfo::BSPlayerBaseInfo(LoggedUser *user,s32 money,s32 diamond,s32 clip0,s32 clip1,s32 clip2)$/;"	f	class:BSPlayerBaseInfo	signature:(LoggedUser *user,s32 money,s32 diamond,s32 clip0,s32 clip1,s32 clip2)
BSPlayerBaseInfo::BSPlayerBaseInfo	worker/BSPlayerBaseInfo.cpp	/^BSPlayerBaseInfo::BSPlayerBaseInfo(LoggedUser *user)$/;"	f	class:BSPlayerBaseInfo	signature:(LoggedUser *user)
BSPlayerBaseInfo::BSPlayerBaseInfo	worker/BSPlayerBaseInfo.cpp	/^BSPlayerBaseInfo::BSPlayerBaseInfo(LoggedUser *user,s32 money,s32 diamond,s32 clip0,s32 clip1,s32 clip2)$/;"	f	class:BSPlayerBaseInfo	signature:(LoggedUser *user,s32 money,s32 diamond,s32 clip0,s32 clip1,s32 clip2)
BSPlayerBaseInfo::SetDiamond	worker/BSPlayerBaseInfo.cpp	/^void BSPlayerBaseInfo::SetDiamond(s32 diamond)$/;"	f	class:BSPlayerBaseInfo	signature:(s32 diamond)
BSPlayerBaseInfo::addByType	worker/BSPlayerBaseInfo.cpp	/^void BSPlayerBaseInfo::addByType(u32 type, s32 value,s32 *addDiamond)$/;"	f	class:BSPlayerBaseInfo	signature:(u32 type, s32 value,s32 *addDiamond)
BSPlayerBaseInfo::addChip	worker/BSPlayerBaseInfo.cpp	/^void BSPlayerBaseInfo::addChip(u32 index, s32 value)$/;"	f	class:BSPlayerBaseInfo	signature:(u32 index, s32 value)
BSPlayerBaseInfo::addChipByType	worker/BSPlayerBaseInfo.cpp	/^void BSPlayerBaseInfo::addChipByType(u32 type,s32 value) {$/;"	f	class:BSPlayerBaseInfo	signature:(u32 type,s32 value)
BSPlayerBaseInfo::addDiamond	worker/BSPlayerBaseInfo.cpp	/^void BSPlayerBaseInfo::addDiamond(s32 value)$/;"	f	class:BSPlayerBaseInfo	signature:(s32 value)
BSPlayerBaseInfo::addMoney	worker/BSPlayerBaseInfo.cpp	/^void BSPlayerBaseInfo::addMoney(s32 value)$/;"	f	class:BSPlayerBaseInfo	signature:(s32 value)
BSPlayerBaseInfo::chip	worker/BSPlayerBaseInfo.cpp	/^s32 BSPlayerBaseInfo::chip(u32 index) {$/;"	f	class:BSPlayerBaseInfo	signature:(u32 index)
BSPlayerBaseInfo::diamond	worker/BSPlayerBaseInfo.cpp	/^s32 BSPlayerBaseInfo::diamond()$/;"	f	class:BSPlayerBaseInfo	signature:()
BSPlayerBaseInfo::init	worker/BSPlayerBaseInfo.cpp	/^void BSPlayerBaseInfo::init(vn::s32 diamond)$/;"	f	class:BSPlayerBaseInfo	signature:(vn::s32 diamond)
BSPlayerBaseInfo::load	worker/BSPlayerBaseInfo.cpp	/^void BSPlayerBaseInfo::load(DBTable_baseinfo &tbaseinfo)$/;"	f	class:BSPlayerBaseInfo	signature:(DBTable_baseinfo &tbaseinfo)
BSPlayerBaseInfo::load	worker/BSPlayerBaseInfo.cpp	/^void BSPlayerBaseInfo::load(PreparedQueryResult baseinfo,vn::s32 balance)$/;"	f	class:BSPlayerBaseInfo	signature:(PreparedQueryResult baseinfo,vn::s32 balance)
BSPlayerBaseInfo::load	worker/BSPlayerBaseInfo.cpp	/^void BSPlayerBaseInfo::load(Variable_object &vobj) {$/;"	f	class:BSPlayerBaseInfo	signature:(Variable_object &vobj)
BSPlayerBaseInfo::load	worker/BSPlayerBaseInfo.cpp	/^void BSPlayerBaseInfo::load(u32 version, DataStream &stream)$/;"	f	class:BSPlayerBaseInfo	signature:(u32 version, DataStream &stream)
BSPlayerBaseInfo::money	worker/BSPlayerBaseInfo.cpp	/^s32 BSPlayerBaseInfo::money()$/;"	f	class:BSPlayerBaseInfo	signature:()
BSPlayerBaseInfo::save	worker/BSPlayerBaseInfo.cpp	/^void BSPlayerBaseInfo::save(DataStream &stream) const$/;"	f	class:BSPlayerBaseInfo	signature:(DataStream &stream) const
BSPlayerBaseInfo::save	worker/BSPlayerBaseInfo.cpp	/^void BSPlayerBaseInfo::save(Variable_object &vobj) const {$/;"	f	class:BSPlayerBaseInfo	signature:(Variable_object &vobj) const
BSPlayerBaseInfo::~BSPlayerBaseInfo	worker/BSPlayerBaseInfo.cpp	/^BSPlayerBaseInfo::~BSPlayerBaseInfo()$/;"	f	class:BSPlayerBaseInfo	signature:()
BSRegistration::Asyncsave	worker/BSRegistration.cpp	/^void BSRegistration::Asyncsave(std::function<void(bool ret)> doResult)$/;"	f	class:BSRegistration	signature:(std::function<void(bool ret)> doResult)
BSRegistration::load	worker/BSRegistration.cpp	/^void BSRegistration::load(PreparedQueryResult baseinfo)$/;"	f	class:BSRegistration	signature:(PreparedQueryResult baseinfo)
BSRegistration::load	worker/BSRegistration.cpp	/^void BSRegistration::load(Variable_object &vobj) {$/;"	f	class:BSRegistration	signature:(Variable_object &vobj)
BSRegistration::load	worker/BSRegistration.cpp	/^void BSRegistration::load(u8 version, DataStream &stream) {$/;"	f	class:BSRegistration	signature:(u8 version, DataStream &stream)
BSRegistration::reset	worker/BSRegistration.cpp	/^void BSRegistration::reset() {$/;"	f	class:BSRegistration	signature:()
BSRegistration::save	worker/BSRegistration.cpp	/^void BSRegistration::save(DataStream &stream) const{$/;"	f	class:BSRegistration	signature:(DataStream &stream) const
BSRegistration::save	worker/BSRegistration.cpp	/^void BSRegistration::save(Variable_object &vobj) const {$/;"	f	class:BSRegistration	signature:(Variable_object &vobj) const
BSRegistrationManager::dayInYear	manager/BSRegistrationManager.cpp	/^u32 BSRegistrationManager::dayInYear(Date date)$/;"	f	class:BSRegistrationManager	signature:(Date date)
BSRegistrationManager::daysBetween2Date	manager/BSRegistrationManager.cpp	/^u32 BSRegistrationManager::daysBetween2Date(Date date1, Date date2) {$/;"	f	class:BSRegistrationManager	signature:(Date date1, Date date2)
BSRegistrationManager::initData	manager/BSRegistrationManager.cpp	/^void BSRegistrationManager::initData(const tbl::Table_Registration &table) {$/;"	f	class:BSRegistrationManager	signature:(const tbl::Table_Registration &table)
BSRegistrationManager::isBetween2Time	manager/BSRegistrationManager.cpp	/^bool BSRegistrationManager::isBetween2Time(DateTime date1,DateTime date2,DateTime date3) {$/;"	f	class:BSRegistrationManager	signature:(DateTime date1,DateTime date2,DateTime date3)
BSRegistrationManager::isLeap	manager/BSRegistrationManager.cpp	/^bool BSRegistrationManager::isLeap(u32 year) {$/;"	f	class:BSRegistrationManager	signature:(u32 year)
BSRmbShopManager::find_product	manager/BSRmbShopManager.cpp	/^BSRmbShopManager::Product * BSRmbShopManager::find_product(u32 id)$/;"	f	class:BSRmbShopManager	signature:(u32 id)
BSRmbShopManager::init	manager/BSRmbShopManager.cpp	/^bool BSRmbShopManager::init(u32 fsId, const str8 &path)$/;"	f	class:BSRmbShopManager	signature:(u32 fsId, const str8 &path)
BSRmbShopManager::productMap	manager/BSRmbShopManager.cpp	/^const std::map<u32, BSRmbShopManager::Product> & BSRmbShopManager::productMap()$/;"	f	class:BSRmbShopManager	signature:()
BSTechManager::getTechItem	manager/BSTechManager.cpp	/^const BSTechManager::TechItem * BSTechManager::getTechItem(u32 slot, u32 rank)$/;"	f	class:BSTechManager	signature:(u32 slot, u32 rank)
BSTechManager::initData	manager/BSTechManager.cpp	/^void BSTechManager::initData(const tbl::Table_tech &table)$/;"	f	class:BSTechManager	signature:(const tbl::Table_tech &table)
BSTechManager::~BSTechManager	manager/BSTechManager.cpp	/^BSTechManager::~BSTechManager()$/;"	f	class:BSTechManager	signature:()
BSTechUpgrade	worker/BSTechUpgrade.cpp	/^BSTechUpgrade::BSTechUpgrade(LoggedUser *user)$/;"	f	class:BSTechUpgrade	signature:(LoggedUser *user)
BSTechUpgrade::Asyncsave	worker/BSTechUpgrade.cpp	/^void BSTechUpgrade::Asyncsave(u32 idx,std::function<void(bool ret)> doResult)$/;"	f	class:BSTechUpgrade	signature:(u32 idx,std::function<void(bool ret)> doResult)
BSTechUpgrade::Asyncupgrade_tech	worker/BSTechUpgrade.cpp	/^void BSTechUpgrade::Asyncupgrade_tech(u32 idx,std::function<void(int ret)> doResult)$/;"	f	class:BSTechUpgrade	signature:(u32 idx,std::function<void(int ret)> doResult)
BSTechUpgrade::BSTechUpgrade	worker/BSTechUpgrade.cpp	/^BSTechUpgrade::BSTechUpgrade(LoggedUser *user)$/;"	f	class:BSTechUpgrade	signature:(LoggedUser *user)
BSTechUpgrade::init	worker/BSTechUpgrade.cpp	/^void BSTechUpgrade::init()$/;"	f	class:BSTechUpgrade	signature:()
BSTechUpgrade::load	worker/BSTechUpgrade.cpp	/^void BSTechUpgrade::load(PreparedQueryResult result)$/;"	f	class:BSTechUpgrade	signature:(PreparedQueryResult result)
BSTechUpgrade::load	worker/BSTechUpgrade.cpp	/^void BSTechUpgrade::load(Variable_object &vobj) {$/;"	f	class:BSTechUpgrade	signature:(Variable_object &vobj)
BSTechUpgrade::load	worker/BSTechUpgrade.cpp	/^void BSTechUpgrade::load(u32 version, DataStream &stream)$/;"	f	class:BSTechUpgrade	signature:(u32 version, DataStream &stream)
BSTechUpgrade::save	worker/BSTechUpgrade.cpp	/^void BSTechUpgrade::save(DataStream &stream) const$/;"	f	class:BSTechUpgrade	signature:(DataStream &stream) const
BSTechUpgrade::save	worker/BSTechUpgrade.cpp	/^void BSTechUpgrade::save(Variable_object &vobj) const {$/;"	f	class:BSTechUpgrade	signature:(Variable_object &vobj) const
BSTechUpgrade::techList	worker/BSTechUpgrade.cpp	/^ std::vector<u32> & BSTechUpgrade::techList()$/;"	f	class:BSTechUpgrade	signature:()
BSTechUpgrade::upgrade_tech	worker/BSTechUpgrade.cpp	/^bool BSTechUpgrade::upgrade_tech(u32 idx,vn::s32 *diamondPay)$/;"	f	class:BSTechUpgrade	signature:(u32 idx,vn::s32 *diamondPay)
BSTechUpgrade::~BSTechUpgrade	worker/BSTechUpgrade.cpp	/^BSTechUpgrade::~BSTechUpgrade()$/;"	f	class:BSTechUpgrade	signature:()
BSTowerManager::getTrainingInfo	manager/BSTowerManager.cpp	/^const BSTowerManager::TrainingInfo * BSTowerManager::getTrainingInfo(u32 index, u32 num, u32 count)$/;"	f	class:BSTowerManager	signature:(u32 index, u32 num, u32 count)
BSTowerManager::initData	manager/BSTowerManager.cpp	/^void BSTowerManager::initData(const tbl::Table_training &table)$/;"	f	class:BSTowerManager	signature:(const tbl::Table_training &table)
BSTowerUpgrade	worker/BSTowerUpgrade.cpp	/^BSTowerUpgrade::BSTowerUpgrade(LoggedUser *user)$/;"	f	class:BSTowerUpgrade	signature:(LoggedUser *user)
BSTowerUpgrade::Asyncsave	worker/BSTowerUpgrade.cpp	/^void	BSTowerUpgrade::Asyncsave(u32 idx, u32 num,std::function<void(bool ret)> doResult)$/;"	f	class:BSTowerUpgrade	signature:(u32 idx, u32 num,std::function<void(bool ret)> doResult)
BSTowerUpgrade::Asyncupgrade_tower	worker/BSTowerUpgrade.cpp	/^void  BSTowerUpgrade::Asyncupgrade_tower(u32 idx, u32 num,std::function<void(int ret)> doResult)$/;"	f	class:BSTowerUpgrade	signature:(u32 idx, u32 num,std::function<void(int ret)> doResult)
BSTowerUpgrade::BSTowerUpgrade	worker/BSTowerUpgrade.cpp	/^BSTowerUpgrade::BSTowerUpgrade(LoggedUser *user)$/;"	f	class:BSTowerUpgrade	signature:(LoggedUser *user)
BSTowerUpgrade::init	worker/BSTowerUpgrade.cpp	/^void BSTowerUpgrade::init()$/;"	f	class:BSTowerUpgrade	signature:()
BSTowerUpgrade::load	worker/BSTowerUpgrade.cpp	/^void BSTowerUpgrade::load(PreparedQueryResult result)$/;"	f	class:BSTowerUpgrade	signature:(PreparedQueryResult result)
BSTowerUpgrade::load	worker/BSTowerUpgrade.cpp	/^void BSTowerUpgrade::load(Variable_object &vobj) {$/;"	f	class:BSTowerUpgrade	signature:(Variable_object &vobj)
BSTowerUpgrade::load	worker/BSTowerUpgrade.cpp	/^void BSTowerUpgrade::load(u32 version, DataStream &stream)$/;"	f	class:BSTowerUpgrade	signature:(u32 version, DataStream &stream)
BSTowerUpgrade::save	worker/BSTowerUpgrade.cpp	/^void BSTowerUpgrade::save(DataStream &stream) const$/;"	f	class:BSTowerUpgrade	signature:(DataStream &stream) const
BSTowerUpgrade::save	worker/BSTowerUpgrade.cpp	/^void BSTowerUpgrade::save(Variable_object &vobj) const {$/;"	f	class:BSTowerUpgrade	signature:(Variable_object &vobj) const
BSTowerUpgrade::towerList	worker/BSTowerUpgrade.cpp	/^const std::vector<std::vector<u32>> & BSTowerUpgrade::towerList()$/;"	f	class:BSTowerUpgrade	signature:()
BSTowerUpgrade::upgrade_tower	worker/BSTowerUpgrade.cpp	/^bool BSTowerUpgrade::upgrade_tower(u32 idx, u32 num,vn::s32 *diamondPay)$/;"	f	class:BSTowerUpgrade	signature:(u32 idx, u32 num,vn::s32 *diamondPay)
BSTowerUpgrade::~BSTowerUpgrade	worker/BSTowerUpgrade.cpp	/^BSTowerUpgrade::~BSTowerUpgrade()$/;"	f	class:BSTowerUpgrade	signature:()
CCPLAY_Secret	Common.h	/^const static std::string CCPLAY_Secret = "14c1e170db824876a5a9248504f9ce67";$/;"	v
COOLYUN_APPID	Common.h	/^const static std::string COOLYUN_APPID = "5000001794";$/;"	v
COOLYUN_APPKEY	Common.h	/^const static std::string COOLYUN_APPKEY = "2802db5f589746e2b1df022df1050cef";$/;"	v
COOLYUN_PlatKey	Common.h	/^const static std::string COOLYUN_PlatKey =$/;"	v
CalculateCoupon	worker/LoggedUser.cpp	/^void LoggedUser::CalculateCoupon(vn::u64 lastTime)$/;"	f	class:LoggedUser	signature:(vn::u64 lastTime)
CalculateLottery	worker/LoggedUser.cpp	/^void LoggedUser::CalculateLottery(vn::u64 lastCouponTime, vn::u64 lastLoginTime)$/;"	f	class:LoggedUser	signature:(vn::u64 lastCouponTime, vn::u64 lastLoginTime)
CalculateSecondDayLogin	worker/LoggedUser.cpp	/^bool LoggedUser::CalculateSecondDayLogin(vn::u64 lastLoginTime)$/;"	f	class:LoggedUser	signature:(vn::u64 lastLoginTime)
Client::_bad_data	clientlisten/Client.cpp	/^void Client::_bad_data()$/;"	f	class:Client	signature:()
Client::_connected	clientlisten/Client.cpp	/^void Client::_connected()$/;"	f	class:Client	signature:()
Client::_destroy	clientlisten/Client.cpp	/^void Client::_destroy() {$/;"	f	class:Client	signature:()
Client::_disconnected	clientlisten/Client.cpp	/^ void Client::_disconnected()$/;"	f	class:Client	signature:()
Client::_init	clientlisten/Client.cpp	/^void Client::_init() {$/;"	f	class:Client	signature:()
Client::_mask	clientlisten/Client.cpp	/^void Client::_mask(const LinkBufferPtr &buffer)$/;"	f	class:Client	signature:(const LinkBufferPtr &buffer)
Client::_received	clientlisten/Client.cpp	/^void Client::_received(vn::LinkBufferPtr buffers)$/;"	f	class:Client	signature:(vn::LinkBufferPtr buffers)
Client::setPacketHandler	clientlisten/Client.cpp	/^void Client::setPacketHandler(PacketHandler *handler) {$/;"	f	class:Client	signature:(PacketHandler *handler)
ClientListen::_accepted	clientlisten/ClientListen.cpp	/^Link_TCP_Connection * ClientListen::_accepted(const NetAddress &peer) {$/;"	f	class:ClientListen	signature:(const NetAddress &peer)
ClientListen::_destroy	clientlisten/ClientListen.cpp	/^void ClientListen::_destroy() {$/;"	f	class:ClientListen	signature:()
ClientListen::create	clientlisten/ClientListen.cpp	/^Link_TCP_Listen * ClientListen::create() {$/;"	f	class:ClientListen	signature:()
ClientPtr	clientlisten/Client.h	/^typedef vn::RefCountedPtr<Client> ClientPtr;$/;"	t
ClientSession::_destroy	clientlisten/ClientSession.cpp	/^void ClientSession::_destroy() {$/;"	f	class:ClientSession	signature:()
ClientSession::_init	clientlisten/ClientSession.cpp	/^void ClientSession::_init() {$/;"	f	class:ClientSession	signature:()
ClientSession::createRequest	clientlisten/ClientSession.cpp	/^vn::PacketPtr ClientSession::createRequest(vn::u32 pid) {$/;"	f	class:ClientSession	signature:(vn::u32 pid)
ClientSession::setPacketHandler	clientlisten/ClientSession.cpp	/^void ClientSession::setPacketHandler(PacketHandler *handler) {$/;"	f	class:ClientSession	signature:(PacketHandler *handler)
ClientSessionPtr	clientlisten/ClientSession.h	/^typedef vn::RefCountedPtr<ClientSession> ClientSessionPtr;$/;"	t
ConvertHeroArrayToString	worker/BSTool.cpp	/^void ConvertHeroArrayToString(std::vector<vn::u32> &sorHero,std::string &strDest)$/;"	f	signature:(std::vector<vn::u32> &sorHero,std::string &strDest)
ConvertPlatformArrayToString	worker/BSTool.cpp	/^void ConvertPlatformArrayToString(std::vector<std::pair<vn::u32, vn::u32>> &sorPlatforms,std::string &strDest)$/;"	f	signature:(std::vector<std::pair<vn::u32, vn::u32>> &sorPlatforms,std::string &strDest)
ConvertPlatformArrayToString	worker/BSTool.h	/^void ConvertPlatformArrayToString(std::vector<std::pair<vn::u32, vn::u32>> &sorPlatforms,std::string &strDest);$/;"	p	signature:(std::vector<std::pair<vn::u32, vn::u32>> &sorPlatforms,std::string &strDest)
ConvertStrToU32	worker/BSTool.cpp	/^vn::u32 ConvertStrToU32(std::string& strSource)$/;"	f	signature:(std::string& strSource)
ConvertStrToU32	worker/BSTool.h	/^vn::u32 ConvertStrToU32(std::string& strSource);$/;"	p	signature:(std::string& strSource)
ConvertToStr	worker/BSTool.h	/^void ConvertToStr(T value,std::string &strDest)$/;"	f	signature:(T value,std::string &strDest)
ConvertU32ToStr	worker/BSTool.cpp	/^void ConvertU32ToStr(vn::u32 number,std::string &strDest)$/;"	f	signature:(vn::u32 number,std::string &strDest)
ConvertU32ToStr	worker/BSTool.h	/^void ConvertU32ToStr(vn::u32 number,std::string &strDest);$/;"	p	signature:(vn::u32 number,std::string &strDest)
DATABASE_DECL_EVENT_LOG	Log/DC_DataBase_EventLog.h	/^	DATABASE_DECL_EVENT_LOG(kTYPE_UserBeginBattle)$/;"	p	struct:DC_DataBase_EventLog_User	access:public
DATABASE_DECL_EVENT_LOG	Log/DC_DataBase_EventLog.h	/^	DATABASE_DECL_EVENT_LOG(kTYPE_UserEndBattle)$/;"	p	struct:DC_DataBase_EventLog_User	access:public
DATABASE_DECL_EVENT_LOG	Log/DC_DataBase_EventLog.h	41;"	d
DC_DataBase::AsyncCreateUser	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncCreateUser(AsyncObjectPtr obj,std::function<void (bool ret,  LoggedUserPtr user)>doResult)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr obj,std::function<void (bool ret, LoggedUserPtr user)>doResult)
DC_DataBase::AsyncInsertForceGuide	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncInsertForceGuide(LoggedUserPtr pUser,u32 guideid,std::function<void(bool)> doResulet)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr pUser,u32 guideid,std::function<void(bool)> doResulet)
DC_DataBase::AsyncInsertLevel	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncInsertLevel(AsyncObjectPtr obj,std::string &strUUId,u32 levelId,bool intrusion,u32 intrusiontimes,u32 starNum,s32 score,bool shovel,bool watch,std::function<void(bool)> doResulet)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr obj,std::string &strUUId,u32 levelId,bool intrusion,u32 intrusiontimes,u32 starNum,s32 score,bool shovel,bool watch,std::function<void(bool)> doResulet)
DC_DataBase::AsyncInsertLevelGroup_Levels	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncInsertLevelGroup_Levels(LoggedUserPtr pUser,u32 groupId,u32 levelId,std::string heros,std::string platforms, bool resolved,bool shovel ,u32 stars,u8 passed,bool watch,std::function<void(bool ret)> doResulet)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr pUser,u32 groupId,u32 levelId,std::string heros,std::string platforms, bool resolved,bool shovel ,u32 stars,u8 passed,bool watch,std::function<void(bool ret)> doResulet)
DC_DataBase::AsyncInsertLevelGroups	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncInsertLevelGroups(LoggedUserPtr pUser,u32 groupId,bool pressed,u32 intrusionCount,u32 rewardsCount,std::function<void(bool)> doResulet)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr pUser,u32 groupId,bool pressed,u32 intrusionCount,u32 rewardsCount,std::function<void(bool)> doResulet)
DC_DataBase::AsyncInsertLog	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncInsertLog(AsyncObjectPtr asyObj,std::string &strUUId,u32 eventType,std::string &strMessage,std::function<void(bool)> doResulet)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr asyObj,std::string &strUUId,u32 eventType,std::string &strMessage,std::function<void(bool)> doResulet)
DC_DataBase::AsyncLoadBaseInfo	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncLoadBaseInfo( std::string &stdUUid,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult result)> doResult)$/;"	f	class:DC_DataBase	signature:( std::string &stdUUid,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult result)> doResult)
DC_DataBase::AsyncLoadForceGuide	manager/DC_DataBase.cpp	/^void  DC_DataBase::AsyncLoadForceGuide(LoggedUserPtr user,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult )> doResult)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult )> doResult)
DC_DataBase::AsyncLoadHeroIdbyUUIdTowerClass	manager/DC_DataBase.cpp	/^void  DC_DataBase::AsyncLoadHeroIdbyUUIdTowerClass(LoggedUserPtr user,u32 towerClass,std::function<void(PreparedQueryResult)> doResulet)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user,u32 towerClass,std::function<void(PreparedQueryResult)> doResulet)
DC_DataBase::AsyncLoadItemStore	manager/DC_DataBase.cpp	/^void  DC_DataBase::AsyncLoadItemStore(LoggedUserPtr user,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult )> doResult)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult )> doResult)
DC_DataBase::AsyncLoadLevelGroup	manager/DC_DataBase.cpp	/^void  DC_DataBase::AsyncLoadLevelGroup(LoggedUserPtr user,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult )> doResult)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult )> doResult)
DC_DataBase::AsyncLoadLevelGroupLevels	manager/DC_DataBase.cpp	/^void  DC_DataBase::AsyncLoadLevelGroupLevels(vn::u32 levelId,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult )> doResult)$/;"	f	class:DC_DataBase	signature:(vn::u32 levelId,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult )> doResult)
DC_DataBase::AsyncLoadLevels	manager/DC_DataBase.cpp	/^void  DC_DataBase::AsyncLoadLevels(LoggedUserPtr user,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult )> doResult)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult )> doResult)
DC_DataBase::AsyncLoadMines	manager/DC_DataBase.cpp	/^void  DC_DataBase::AsyncLoadMines(LoggedUserPtr user,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult )> doResult)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult )> doResult)
DC_DataBase::AsyncLoadMissions	manager/DC_DataBase.cpp	/^void  DC_DataBase::AsyncLoadMissions(LoggedUserPtr user,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult )> doResult)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult )> doResult)
DC_DataBase::AsyncLoadMonsterMap	manager/DC_DataBase.cpp	/^void  DC_DataBase::AsyncLoadMonsterMap(LoggedUserPtr user,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult )> doResult)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult )> doResult)
DC_DataBase::AsyncLoadPlatformStore	manager/DC_DataBase.cpp	/^void  DC_DataBase::AsyncLoadPlatformStore(LoggedUserPtr user,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult )> doResult)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult )> doResult)
DC_DataBase::AsyncLoadTechUpgrade	manager/DC_DataBase.cpp	/^void  DC_DataBase::AsyncLoadTechUpgrade(LoggedUserPtr user,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult )> doResult)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult )> doResult)
DC_DataBase::AsyncLoadTowerUpgrade	manager/DC_DataBase.cpp	/^void  DC_DataBase::AsyncLoadTowerUpgrade(LoggedUserPtr user,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult )> doResult)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user,vn::RefCountedPtr<AsyncObject> asyncObject,std::function<void (PreparedQueryResult )> doResult)
DC_DataBase::AsyncLog	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncLog(AsyncObjectPtr obj,UserEventLogPtr log,std::function<void(bool ret)> doResult)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr obj,UserEventLogPtr log,std::function<void(bool ret)> doResult)
DC_DataBase::AsyncUpdateBaseInfoAll	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncUpdateBaseInfoAll(AsyncObjectPtr asyncObject,LoggedUserPtr pUser,std::function<void(bool)> doResulet)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr asyncObject,LoggedUserPtr pUser,std::function<void(bool)> doResulet)
DC_DataBase::AsyncUpdateBaseInfo_Baseinfo	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncUpdateBaseInfo_Baseinfo(AsyncObjectPtr asyncObject,std::string &strUUid,s32 clip0,s32 clip1,s32 clip2,s32 money,s32 diamond,u32 purchaseDiamond,std::function<void(bool)> doResulet)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr asyncObject,std::string &strUUid,s32 clip0,s32 clip1,s32 clip2,s32 money,s32 diamond,u32 purchaseDiamond,std::function<void(bool)> doResulet)
DC_DataBase::AsyncUpdateBaseInfo_Coupon	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncUpdateBaseInfo_Coupon(AsyncObjectPtr asyPtr,std::string &strUUid,s32 couponId,f32 couponTimer,vn::u64 timeStamp,std::function<void(bool)> doResulet)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr asyPtr,std::string &strUUid,s32 couponId,f32 couponTimer,vn::u64 timeStamp,std::function<void(bool)> doResulet)
DC_DataBase::AsyncUpdateBaseInfo_Hero	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncUpdateBaseInfo_Hero(AsyncObjectPtr asyncObject,std::string &strUUid,s32 shovel0,s32 shovel1,s32 skill0,s32 skill1,s32 watch0,s32 watch1,std::function<void(bool)> doResulet)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr asyncObject,std::string &strUUid,s32 shovel0,s32 shovel1,s32 skill0,s32 skill1,s32 watch0,s32 watch1,std::function<void(bool)> doResulet)
DC_DataBase::AsyncUpdateBaseInfo_Lottery	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncUpdateBaseInfo_Lottery(AsyncObjectPtr asyPtr,std::string &strUUid,u32 lotteryDraw,s32 lotteryState,f32 lotteryTimer,std::string &lotteryPool,vn::u64 timestamp,std::function<void(bool)> doResulet)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr asyPtr,std::string &strUUid,u32 lotteryDraw,s32 lotteryState,f32 lotteryTimer,std::string &lotteryPool,vn::u64 timestamp,std::function<void(bool)> doResulet)
DC_DataBase::AsyncUpdateBaseInfo_Registion	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncUpdateBaseInfo_Registion(AsyncObjectPtr asyncObject,std::string &strUUid,std::string &strfirstDate,std::string &strlastDate,s32 count,s32 group,std::function<void(bool)> doResulet)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr asyncObject,std::string &strUUid,std::string &strfirstDate,std::string &strlastDate,s32 count,s32 group,std::function<void(bool)> doResulet)
DC_DataBase::AsyncUpdateGoldMine	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncUpdateGoldMine(std::string &strUUId,u32 id, u32 num,f32 timer,vn::u64 timeStamp,AsyncObjectPtr asyncObjectPtr,std::function<void(bool)>doResult)$/;"	f	class:DC_DataBase	signature:(std::string &strUUId,u32 id, u32 num,f32 timer,vn::u64 timeStamp,AsyncObjectPtr asyncObjectPtr,std::function<void(bool)>doResult)
DC_DataBase::AsyncUpdateIntrusion	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncUpdateIntrusion(std::string &strUUId,bool running,f32 timer,vn::u64 timestamp,AsyncObjectPtr asyncObject,std::function<void(bool)> doResulet)$/;"	f	class:DC_DataBase	signature:(std::string &strUUId,bool running,f32 timer,vn::u64 timestamp,AsyncObjectPtr asyncObject,std::function<void(bool)> doResulet)
DC_DataBase::AsyncUpdateItemStore	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncUpdateItemStore(LoggedUserPtr pUser,u32 itemId,u32 itemNum,std::function<void(bool)> doResulet)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr pUser,u32 itemId,u32 itemNum,std::function<void(bool)> doResulet)
DC_DataBase::AsyncUpdateLevel	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncUpdateLevel(AsyncObjectPtr asyncObjPtr,std::string &strUUId,u32 levelId,bool intrusion,u32 intrusiontimes,u32 starNum,s32 score,bool shovel,bool watch,std::function<void(bool)> doResulet)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr asyncObjPtr,std::string &strUUId,u32 levelId,bool intrusion,u32 intrusiontimes,u32 starNum,s32 score,bool shovel,bool watch,std::function<void(bool)> doResulet)
DC_DataBase::AsyncUpdateLevelGroup_Levels	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncUpdateLevelGroup_Levels(AsyncObjectPtr asyncObjPtr,LoggedUserPtr user,u32 groupId,u32 levelId,std::string heros,std::string platforms, bool resolved,bool shovel ,u32 stars,u8 passed,bool watch,std::function<void(bool ret)> doResulet)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr asyncObjPtr,LoggedUserPtr user,u32 groupId,u32 levelId,std::string heros,std::string platforms, bool resolved,bool shovel ,u32 stars,u8 passed,bool watch,std::function<void(bool ret)> doResulet)
DC_DataBase::AsyncUpdateLevelGroups	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncUpdateLevelGroups(AsyncObjectPtr asyncObjPtr,LoggedUserPtr user,u32 groupId,bool pressed,u32 intrusionCount,u32 rewardsCount,std::function<void(bool)> doResulet)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr asyncObjPtr,LoggedUserPtr user,u32 groupId,bool pressed,u32 intrusionCount,u32 rewardsCount,std::function<void(bool)> doResulet)
DC_DataBase::AsyncUpdateLoginInfo	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncUpdateLoginInfo(AsyncObjectPtr asyPtr,LoggedUserPtr pUser,std::function<void(bool)> doResulet)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr asyPtr,LoggedUserPtr pUser,std::function<void(bool)> doResulet)
DC_DataBase::AsyncUpdateMission	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncUpdateMission(AsyncObjectPtr asyObj,std::string &strUUId,u32 missionId,bool missionStatus,std::function<void(bool)> doResulet)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr asyObj,std::string &strUUId,u32 missionId,bool missionStatus,std::function<void(bool)> doResulet)
DC_DataBase::AsyncUpdateMonsterMap	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncUpdateMonsterMap(LoggedUserPtr pUser,u32 monsterid,bool monsterStatus,std::function<void(bool)> doResulet)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr pUser,u32 monsterid,bool monsterStatus,std::function<void(bool)> doResulet)
DC_DataBase::AsyncUpdatePlatform	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncUpdatePlatform(AsyncObjectPtr asyObj,std::string &strUUId,u32 category,u32 level,std::function<void(bool)> doResulet)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr asyObj,std::string &strUUId,u32 category,u32 level,std::function<void(bool)> doResulet)
DC_DataBase::AsyncUpdateRunesStatus	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncUpdateRunesStatus(u32 runId,s32 runstatus,LoggedUserPtr pUser,std::string &heroId,std::function<void(bool)>doResult)$/;"	f	class:DC_DataBase	signature:(u32 runId,s32 runstatus,LoggedUserPtr pUser,std::string &heroId,std::function<void(bool)>doResult)
DC_DataBase::AsyncUpdateTech	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncUpdateTech(LoggedUserPtr pUser,u32 techIndex,u32 techStatus,std::function<void(bool)> doResulet)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr pUser,u32 techIndex,u32 techStatus,std::function<void(bool)> doResulet)
DC_DataBase::AsyncUpdateTimeStamp	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncUpdateTimeStamp(AsyncObjectPtr asyncObject,std::string &strUUId,u32 stamp,std::function<void(bool)> doResulet)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr asyncObject,std::string &strUUId,u32 stamp,std::function<void(bool)> doResulet)
DC_DataBase::AsyncUpdateTower	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncUpdateTower(LoggedUserPtr pUser,u32 classIndex,u32 inclassIndex,u32 upgradeValue,std::function<void(bool)> doResulet)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr pUser,u32 classIndex,u32 inclassIndex,u32 upgradeValue,std::function<void(bool)> doResulet)
DC_DataBase::Async_InsertHero	manager/DC_DataBase.cpp	/^void DC_DataBase::Async_InsertHero(AsyncObjectPtr obj,LoggedUserPtr user,std::function<void(bool ret)>doResult)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr obj,LoggedUserPtr user,std::function<void(bool ret)>doResult)
DC_DataBase::Async_InsertItemStore	manager/DC_DataBase.cpp	/^void DC_DataBase::Async_InsertItemStore(AsyncObjectPtr obj,LoggedUserPtr user,std::function<void(bool ret)>doResult)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr obj,LoggedUserPtr user,std::function<void(bool ret)>doResult)
DC_DataBase::Async_InsertLevels	manager/DC_DataBase.cpp	/^void DC_DataBase::Async_InsertLevels(AsyncObjectPtr obj,LoggedUserPtr user,std::function<void(bool ret)>doResult)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr obj,LoggedUserPtr user,std::function<void(bool ret)>doResult)
DC_DataBase::Async_InsertMines	manager/DC_DataBase.cpp	/^void DC_DataBase::Async_InsertMines(AsyncObjectPtr obj,LoggedUserPtr user,std::function<void(bool ret)>doResult)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr obj,LoggedUserPtr user,std::function<void(bool ret)>doResult)
DC_DataBase::Async_InsertMissions	manager/DC_DataBase.cpp	/^void DC_DataBase::Async_InsertMissions(AsyncObjectPtr obj,LoggedUserPtr user,std::function<void(bool ret)>doResult)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr obj,LoggedUserPtr user,std::function<void(bool ret)>doResult)
DC_DataBase::Async_InsertMonsterMap	manager/DC_DataBase.cpp	/^void DC_DataBase::Async_InsertMonsterMap(AsyncObjectPtr obj,LoggedUserPtr user,std::function<void(bool ret)>doResult)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr obj,LoggedUserPtr user,std::function<void(bool ret)>doResult)
DC_DataBase::Async_InsertPlatformStore	manager/DC_DataBase.cpp	/^void DC_DataBase::Async_InsertPlatformStore(AsyncObjectPtr obj,LoggedUserPtr user,std::function<void(bool ret)>doResult)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr obj,LoggedUserPtr user,std::function<void(bool ret)>doResult)
DC_DataBase::Async_InsertTechUpgrade	manager/DC_DataBase.cpp	/^void  DC_DataBase::Async_InsertTechUpgrade(AsyncObjectPtr obj,LoggedUserPtr user,std::function<void(bool ret)>doResult)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr obj,LoggedUserPtr user,std::function<void(bool ret)>doResult)
DC_DataBase::Async_InsertTowerUpgrade	manager/DC_DataBase.cpp	/^void DC_DataBase::Async_InsertTowerUpgrade(AsyncObjectPtr obj,LoggedUserPtr user,std::function<void(bool ret)>doResult)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr obj,LoggedUserPtr user,std::function<void(bool ret)>doResult)
DC_DataBase::AsyncupgradeHero	manager/DC_DataBase.cpp	/^void DC_DataBase::AsyncupgradeHero(AsyncObjectPtr ptr,std::string &strUUId,u32 id,s32 status,u32 towerclass,std::function<void(bool)> doResulet)$/;"	f	class:DC_DataBase	signature:(AsyncObjectPtr ptr,std::string &strUUId,u32 id,s32 status,u32 towerclass,std::function<void(bool)> doResulet)
DC_DataBase::InsertItemStore	manager/DC_DataBase.cpp	/^bool DC_DataBase::InsertItemStore(std::string &strUUId,u32 itemId,u32 itemNum)$/;"	f	class:DC_DataBase	signature:(std::string &strUUId,u32 itemId,u32 itemNum)
DC_DataBase::LoadHero	manager/DC_DataBase.cpp	/^bool DC_DataBase::LoadHero(LoggedUserPtr user)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user)
DC_DataBase::LoadHeroIdbyUUIdTowerClass	manager/DC_DataBase.cpp	/^PreparedQueryResult DC_DataBase::LoadHeroIdbyUUIdTowerClass(std::string &strUUId,u32 towerClass)$/;"	f	class:DC_DataBase	signature:(std::string &strUUId,u32 towerClass)
DC_DataBase::LoadLevelGroupLevels	manager/DC_DataBase.cpp	/^PreparedQueryResult  DC_DataBase::LoadLevelGroupLevels(vn::u32 groupId)$/;"	f	class:DC_DataBase	signature:(vn::u32 groupId)
DC_DataBase::SyncUpdateLevel	manager/DC_DataBase.cpp	/^bool DC_DataBase::SyncUpdateLevel(std::string &strUUId,u32 levelId,bool intrusion,u32 intrusiontimes,u32 starNum,s32 score,bool shovel,bool watch)$/;"	f	class:DC_DataBase	signature:(std::string &strUUId,u32 levelId,bool intrusion,u32 intrusiontimes,u32 starNum,s32 score,bool shovel,bool watch)
DC_DataBase::SyncUpdateLevelGroup_Levels	manager/DC_DataBase.cpp	/^bool DC_DataBase::SyncUpdateLevelGroup_Levels(std::string &strUUId,u32 groupId,u32 levelId,std::string &heros,std::string &platforms, bool resolved,bool shovel ,u32 stars,u8 passed,bool watch)$/;"	f	class:DC_DataBase	signature:(std::string &strUUId,u32 groupId,u32 levelId,std::string &heros,std::string &platforms, bool resolved,bool shovel ,u32 stars,u8 passed,bool watch)
DC_DataBase::SyncUpdateLevelGroups	manager/DC_DataBase.cpp	/^bool DC_DataBase::SyncUpdateLevelGroups(std::string &strUUId,u32 groupId,bool pressed,u32 intrusionCount,u32 rewardsCount)$/;"	f	class:DC_DataBase	signature:(std::string &strUUId,u32 groupId,bool pressed,u32 intrusionCount,u32 rewardsCount)
DC_DataBase::UpdateClip	manager/DC_DataBase.cpp	/^bool DC_DataBase::UpdateClip(std::string &strUUId,s32 clip0,s32 clip1,s32 clip2)$/;"	f	class:DC_DataBase	signature:(std::string &strUUId,s32 clip0,s32 clip1,s32 clip2)
DC_DataBase::UpdateDiamond	manager/DC_DataBase.cpp	/^bool DC_DataBase::UpdateDiamond(std::string &strUUId,s32 diamond)$/;"	f	class:DC_DataBase	signature:(std::string &strUUId,s32 diamond)
DC_DataBase::UpdateHeroStatus	manager/DC_DataBase.cpp	/^bool DC_DataBase::UpdateHeroStatus(u32 status,LoggedUserPtr user,u32 id)$/;"	f	class:DC_DataBase	signature:(u32 status,LoggedUserPtr user,u32 id)
DC_DataBase::UpdateItemStore	manager/DC_DataBase.cpp	/^bool DC_DataBase::UpdateItemStore(std::string &strUUId,u32 itemId,u32 itemNum)$/;"	f	class:DC_DataBase	signature:(std::string &strUUId,u32 itemId,u32 itemNum)
DC_DataBase::UpdateMoney	manager/DC_DataBase.cpp	/^bool DC_DataBase::UpdateMoney(std::string &strUUId,s32 money)$/;"	f	class:DC_DataBase	signature:(std::string &strUUId,s32 money)
DC_DataBase::UpdateRunesStatus	manager/DC_DataBase.cpp	/^bool DC_DataBase::UpdateRunesStatus(u32 runId,s32 runstatus,std::string &heroId)$/;"	f	class:DC_DataBase	signature:(u32 runId,s32 runstatus,std::string &heroId)
DC_DataBase::_AsyncInsertbaseinfo	manager/DC_DataBase.cpp	/^void  DC_DataBase::_AsyncInsertbaseinfo(std::string &strUUid,AsyncObjectPtr obj,std::function<void(bool ret)>doResult)$/;"	f	class:DC_DataBase	signature:(std::string &strUUid,AsyncObjectPtr obj,std::function<void(bool ret)>doResult)
DC_DataBase::_HandlAsyncCreateUser	manager/DC_DataBase.cpp	/^void DC_DataBase::_HandlAsyncCreateUser(bool ret,AsyncTaskPtr createUserTask, LoggedUserPtr user,std::function<void (bool ret,  LoggedUserPtr user)>doResult)$/;"	f	class:DC_DataBase	signature:(bool ret,AsyncTaskPtr createUserTask, LoggedUserPtr user,std::function<void (bool ret, LoggedUserPtr user)>doResult)
DC_DataBase::_InsertForceGuide	manager/DC_DataBase.cpp	/^bool DC_DataBase::_InsertForceGuide(LoggedUserPtr user)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user)
DC_DataBase::_InsertHero	manager/DC_DataBase.cpp	/^bool DC_DataBase::_InsertHero(LoggedUserPtr user)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user)
DC_DataBase::_InsertItemStore	manager/DC_DataBase.cpp	/^bool DC_DataBase::_InsertItemStore(LoggedUserPtr user)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user)
DC_DataBase::_InsertLevels	manager/DC_DataBase.cpp	/^bool DC_DataBase::_InsertLevels(LoggedUserPtr user)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user)
DC_DataBase::_InsertMines	manager/DC_DataBase.cpp	/^bool DC_DataBase::_InsertMines(LoggedUserPtr user)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user)
DC_DataBase::_InsertMissions	manager/DC_DataBase.cpp	/^bool DC_DataBase::_InsertMissions(LoggedUserPtr user)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user)
DC_DataBase::_InsertMonsterMap	manager/DC_DataBase.cpp	/^bool DC_DataBase::_InsertMonsterMap(LoggedUserPtr user)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user)
DC_DataBase::_InsertPlatformStore	manager/DC_DataBase.cpp	/^bool	DC_DataBase::_InsertPlatformStore(LoggedUserPtr user)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user)
DC_DataBase::_InsertTechUpgrade	manager/DC_DataBase.cpp	/^bool DC_DataBase::_InsertTechUpgrade(LoggedUserPtr user)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user)
DC_DataBase::_InsertTowerUpgrade	manager/DC_DataBase.cpp	/^bool DC_DataBase::_InsertTowerUpgrade(LoggedUserPtr user)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user)
DC_DataBase::_Insertbaseinfo	manager/DC_DataBase.cpp	/^bool DC_DataBase::_Insertbaseinfo(std::string &strUUid)$/;"	f	class:DC_DataBase	signature:(std::string &strUUid)
DC_DataBase::_LoadForceGuide	manager/DC_DataBase.cpp	/^bool DC_DataBase::_LoadForceGuide(LoggedUserPtr user)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user)
DC_DataBase::_LoadHero	manager/DC_DataBase.cpp	/^bool DC_DataBase::_LoadHero(std::string &strUUId,BSHero &hero)$/;"	f	class:DC_DataBase	signature:(std::string &strUUId,BSHero &hero)
DC_DataBase::_LoadItemStore	manager/DC_DataBase.cpp	/^bool DC_DataBase::_LoadItemStore(std::string &strUUId,BSItemStore &itemStore)$/;"	f	class:DC_DataBase	signature:(std::string &strUUId,BSItemStore &itemStore)
DC_DataBase::_LoadLevels	manager/DC_DataBase.cpp	/^bool DC_DataBase::_LoadLevels(LoggedUserPtr user)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user)
DC_DataBase::_LoadMines	manager/DC_DataBase.cpp	/^bool DC_DataBase::_LoadMines(std::string &strUUId,BSGoldMine &goldMine)$/;"	f	class:DC_DataBase	signature:(std::string &strUUId,BSGoldMine &goldMine)
DC_DataBase::_LoadMissions	manager/DC_DataBase.cpp	/^bool DC_DataBase::_LoadMissions(std::string &strUUId,BSMission &bsMission)$/;"	f	class:DC_DataBase	signature:(std::string &strUUId,BSMission &bsMission)
DC_DataBase::_LoadMonsterMap	manager/DC_DataBase.cpp	/^bool DC_DataBase::_LoadMonsterMap(std::string &strUUId,BSMonsterMap &monsterMap)$/;"	f	class:DC_DataBase	signature:(std::string &strUUId,BSMonsterMap &monsterMap)
DC_DataBase::_LoadPlatformStore	manager/DC_DataBase.cpp	/^bool DC_DataBase::_LoadPlatformStore(std::string &strUUId ,BSPlatformStore &platStore)$/;"	f	class:DC_DataBase	signature:(std::string &strUUId ,BSPlatformStore &platStore)
DC_DataBase::_LoadTechUpgrade	manager/DC_DataBase.cpp	/^bool DC_DataBase::_LoadTechUpgrade(std::string &strUUId,BSTechUpgrade &bsTech)$/;"	f	class:DC_DataBase	signature:(std::string &strUUId,BSTechUpgrade &bsTech)
DC_DataBase::_LoadTowerUpgrade	manager/DC_DataBase.cpp	/^bool DC_DataBase::_LoadTowerUpgrade(std::string &strUUId,BSTowerUpgrade &bstowergrade)$/;"	f	class:DC_DataBase	signature:(std::string &strUUId,BSTowerUpgrade &bstowergrade)
DC_DataBase::_flush	manager/DC_DataBase.cpp	/^void DC_DataBase::_flush() {$/;"	f	class:DC_DataBase	signature:()
DC_DataBase::_flush_log	manager/DC_DataBase.cpp	/^void DC_DataBase::_flush_log() {$/;"	f	class:DC_DataBase	signature:()
DC_DataBase::_flush_redeem_packets	manager/DC_DataBase.cpp	/^void DC_DataBase::_flush_redeem_packets() {$/;"	f	class:DC_DataBase	signature:()
DC_DataBase::_init_redeem_packets	manager/DC_DataBase.cpp	/^void DC_DataBase::_init_redeem_packets() {$/;"	f	class:DC_DataBase	signature:()
DC_DataBase::_log	manager/DC_DataBase.cpp	/^void DC_DataBase::_log(DC_File_EventLog *el) {$/;"	f	class:DC_DataBase	signature:(DC_File_EventLog *el)
DC_DataBase::_log	manager/DC_DataBase.cpp	/^void DC_DataBase::_log(DC_File_EventLog_User *el, const UUID &uuid) {$/;"	f	class:DC_DataBase	signature:(DC_File_EventLog_User *el, const UUID &uuid)
DC_DataBase::addRedeemPacket	manager/DC_DataBase.cpp	/^bool DC_DataBase::addRedeemPacket(RedeemPacketPtr redeemPacket) {$/;"	f	class:DC_DataBase	signature:(RedeemPacketPtr redeemPacket)
DC_DataBase::create	manager/DC_DataBase.cpp	/^DataCenter * DC_DataBase::create() {$/;"	f	class:DC_DataBase	signature:()
DC_DataBase::createUser	manager/DC_DataBase.cpp	/^LoggedUserPtr DC_DataBase::createUser()$/;"	f	class:DC_DataBase	signature:()
DC_DataBase::destroy	manager/DC_DataBase.cpp	/^void DC_DataBase::destroy(DataCenter *p) {$/;"	f	class:DC_DataBase	signature:(DataCenter *p)
DC_DataBase::fini	manager/DC_DataBase.cpp	/^void DC_DataBase::fini()$/;"	f	class:DC_DataBase	signature:()
DC_DataBase::finishOrder	manager/DC_DataBase.cpp	/^bool DC_DataBase::finishOrder(const vn::str8 &orderId, const UUID &userId, bool confirmed) {$/;"	f	class:DC_DataBase	signature:(const vn::str8 &orderId, const UUID &userId, bool confirmed)
DC_DataBase::generateOrder	manager/DC_DataBase.cpp	/^vn::str8 DC_DataBase::generateOrder(const UUID &uuid, vn::u32 productId, vn::s32 price) {$/;"	f	class:DC_DataBase	signature:(const UUID &uuid, vn::u32 productId, vn::s32 price)
DC_DataBase::init	manager/DC_DataBase.cpp	/^bool DC_DataBase::init()$/;"	f	class:DC_DataBase	signature:()
DC_DataBase::loadServerData	manager/DC_DataBase.cpp	/^bool DC_DataBase::loadServerData(ServerData &data)$/;"	f	class:DC_DataBase	signature:(ServerData &data)
DC_DataBase::loadUser	manager/DC_DataBase.cpp	/^LoggedUserPtr DC_DataBase::loadUser(const UUID &uuid)$/;"	f	class:DC_DataBase	signature:(const UUID &uuid)
DC_DataBase::log_user_beginBattle	manager/DC_DataBase.cpp	/^void DC_DataBase::log_user_beginBattle(const UUID &uuid, u32 levelId, bool intrusion) {$/;"	f	class:DC_DataBase	signature:(const UUID &uuid, u32 levelId, bool intrusion)
DC_DataBase::log_user_endBattle	manager/DC_DataBase.cpp	/^void DC_DataBase::log_user_endBattle(const UUID &uuid, u32 levelId, bool intrusion, u32 stars, bool watch, bool shovel) {$/;"	f	class:DC_DataBase	signature:(const UUID &uuid, u32 levelId, bool intrusion, u32 stars, bool watch, bool shovel)
DC_DataBase::log_user_login	manager/DC_DataBase.cpp	/^void DC_DataBase::log_user_login(const UUID &uuid) {$/;"	f	class:DC_DataBase	signature:(const UUID &uuid)
DC_DataBase::log_user_logout	manager/DC_DataBase.cpp	/^void DC_DataBase::log_user_logout(const UUID &uuid) {$/;"	f	class:DC_DataBase	signature:(const UUID &uuid)
DC_DataBase::log_user_signin	manager/DC_DataBase.cpp	/^void DC_DataBase::log_user_signin(const UUID &uuid) {$/;"	f	class:DC_DataBase	signature:(const UUID &uuid)
DC_DataBase::queryOrder	manager/DC_DataBase.cpp	/^DataCenter::OrderStatus DC_DataBase::queryOrder(const vn::str8 &orderId, UUID &userId, vn::u32 &productId) {$/;"	f	class:DC_DataBase	signature:(const vn::str8 &orderId, UUID &userId, vn::u32 &productId)
DC_DataBase::queryRedeemPacket	manager/DC_DataBase.cpp	/^RedeemPacketPtr DC_DataBase::queryRedeemPacket(u32 codeId) {$/;"	f	class:DC_DataBase	signature:(u32 codeId)
DC_DataBase::queryRedeemPacketCategoryName	manager/DC_DataBase.cpp	/^str8 DC_DataBase::queryRedeemPacketCategoryName(u32 category) {$/;"	f	class:DC_DataBase	signature:(u32 category)
DC_DataBase::removeRedeemPacket	manager/DC_DataBase.cpp	/^void DC_DataBase::removeRedeemPacket(u32 codeId, const UUID &uuid) {$/;"	f	class:DC_DataBase	signature:(u32 codeId, const UUID &uuid)
DC_DataBase::saveServerData	manager/DC_DataBase.cpp	/^void DC_DataBase::saveServerData(const ServerData &data)$/;"	f	class:DC_DataBase	signature:(const ServerData &data)
DC_DataBase::saveUser	manager/DC_DataBase.cpp	/^void DC_DataBase::saveUser(LoggedUserPtr user) {$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user)
DC_DataBase::setRedeemPacketCategory	manager/DC_DataBase.cpp	/^void DC_DataBase::setRedeemPacketCategory(u32 category, const str8 &name) {$/;"	f	class:DC_DataBase	signature:(u32 category, const str8 &name)
DC_DataBase::update	manager/DC_DataBase.cpp	/^void DC_DataBase::update(f32 deltaTime)$/;"	f	class:DC_DataBase	signature:(f32 deltaTime)
DC_DataBase_EventLog	Log/DC_DataBase_EventLog.h	/^struct DC_DataBase_EventLog_User:DC_DataBase_EventLog {$/;"	s
DC_DataBase_EventLog::override	Log/DC_DataBase_EventLog.h	/^    virtual void Asyncsave(AsyncObjectPtr obj,std::function<void(bool ret)>doResult)override;$/;"	m	struct:DC_DataBase_EventLog	access:public
DC_DataBase_EventLog::strMessage	Log/DC_DataBase_EventLog.h	/^    std::string strMessage="";$/;"	m	struct:DC_DataBase_EventLog	access:public
DC_DataBase_EventLog::strUUId	Log/DC_DataBase_EventLog.h	/^    std::string strUUId="";$/;"	m	struct:DC_DataBase_EventLog	access:public
DC_DataBase_EventLog_User	Log/DC_DataBase_EventLog.h	/^struct DC_DataBase_EventLog_User_BeginBattle : DC_DataBase_EventLog_User {$/;"	s
DC_DataBase_EventLog_User	Log/DC_DataBase_EventLog.h	/^struct DC_DataBase_EventLog_User_EndBattle : DC_DataBase_EventLog_User {$/;"	s
DC_DataBase_EventLog_User	Log/DC_DataBase_EventLog.h	/^struct DC_DataBase_EventLog_User_Login : DC_DataBase_EventLog_User {$/;"	s
DC_DataBase_EventLog_User	Log/DC_DataBase_EventLog.h	/^struct DC_DataBase_EventLog_User_Logout : DC_DataBase_EventLog_User {$/;"	s
DC_DataBase_EventLog_User	Log/DC_DataBase_EventLog.h	/^struct DC_DataBase_EventLog_User_Signin : DC_DataBase_EventLog_User {$/;"	s
DC_DataBase_EventLog_User::Asyncsave	Log/DC_DataBase_EventLog.cpp	/^void DC_DataBase_EventLog_User::Asyncsave(AsyncObjectPtr obj,std::function<void(bool ret)> doResult)$/;"	f	class:DC_DataBase_EventLog_User	signature:(AsyncObjectPtr obj,std::function<void(bool ret)> doResult)
DC_DataBase_EventLog_User::DATABASE_DECL_EVENT_LOG	Log/DC_DataBase_EventLog.h	/^	DATABASE_DECL_EVENT_LOG(kTYPE_UserBeginBattle)$/;"	p	struct:DC_DataBase_EventLog_User	access:public
DC_DataBase_EventLog_User::DATABASE_DECL_EVENT_LOG	Log/DC_DataBase_EventLog.h	/^	DATABASE_DECL_EVENT_LOG(kTYPE_UserEndBattle)$/;"	p	struct:DC_DataBase_EventLog_User	access:public
DC_DataBase_EventLog_User::intrusion	Log/DC_DataBase_EventLog.h	/^    bool intrusion = false;$/;"	m	struct:DC_DataBase_EventLog_User	access:public
DC_DataBase_EventLog_User::override	Log/DC_DataBase_EventLog.h	/^    virtual void Asyncsave(AsyncObjectPtr obj,std::function<void(bool ret)>)override;$/;"	m	struct:DC_DataBase_EventLog_User	access:public
DC_DataBase_EventLog_User::shovel	Log/DC_DataBase_EventLog.h	/^    bool shovel = false, watch = false;$/;"	m	struct:DC_DataBase_EventLog_User	access:public
DC_DataBase_EventLog_User::stars	Log/DC_DataBase_EventLog.h	/^    u8 stars = 0;$/;"	m	struct:DC_DataBase_EventLog_User	access:public
DC_DataBase_EventLog_User::watch	Log/DC_DataBase_EventLog.h	/^    bool shovel = false, watch = false;$/;"	m	struct:DC_DataBase_EventLog_User	access:public
DC_DataBase_EventLog_User_BeginBattle::Asyncsave	Log/DC_DataBase_EventLog.cpp	/^void	DC_DataBase_EventLog_User_BeginBattle::Asyncsave(AsyncObjectPtr obj,std::function<void(bool ret)>doResult)$/;"	f	class:DC_DataBase_EventLog_User_BeginBattle	signature:(AsyncObjectPtr obj,std::function<void(bool ret)>doResult)
DC_DataBase_EventLog_User_EndBattle::Asyncsave	Log/DC_DataBase_EventLog.cpp	/^void 	DC_DataBase_EventLog_User_EndBattle::Asyncsave(AsyncObjectPtr obj,std::function<void(bool ret)>doResult)$/;"	f	class:DC_DataBase_EventLog_User_EndBattle	signature:(AsyncObjectPtr obj,std::function<void(bool ret)>doResult)
DC_DataBase_EventLog_User_Login::Asyncsave	Log/DC_DataBase_EventLog.cpp	/^void DC_DataBase_EventLog_User_Login::Asyncsave(AsyncObjectPtr obj,std::function<void(bool ret)> doResult)$/;"	f	class:DC_DataBase_EventLog_User_Login	signature:(AsyncObjectPtr obj,std::function<void(bool ret)> doResult)
DC_DataBase_EventLog_User_Logout::Asyncsave	Log/DC_DataBase_EventLog.cpp	/^void DC_DataBase_EventLog_User_Logout::Asyncsave(AsyncObjectPtr obj,std::function<void(bool ret)> doResult)$/;"	f	class:DC_DataBase_EventLog_User_Logout	signature:(AsyncObjectPtr obj,std::function<void(bool ret)> doResult)
DC_DataBase_EventLog_User_Signin::Asyncsave	Log/DC_DataBase_EventLog.cpp	/^void DC_DataBase_EventLog_User_Signin::Asyncsave(AsyncObjectPtr obj,std::function<void(bool ret)>doResult)$/;"	f	class:DC_DataBase_EventLog_User_Signin	signature:(AsyncObjectPtr obj,std::function<void(bool ret)>doResult)
DC_File::_flush	manager/DC_File.cpp	/^void DC_File::_flush() {$/;"	f	class:DC_File	signature:()
DC_File::_flush_log	manager/DC_File.cpp	/^void DC_File::_flush_log() {$/;"	f	class:DC_File	signature:()
DC_File::_flush_redeem_packets	manager/DC_File.cpp	/^void DC_File::_flush_redeem_packets() {$/;"	f	class:DC_File	signature:()
DC_File::_init_redeem_packets	manager/DC_File.cpp	/^void DC_File::_init_redeem_packets() {$/;"	f	class:DC_File	signature:()
DC_File::_log	manager/DC_File.cpp	/^void DC_File::_log(DC_File_EventLog *el) {$/;"	f	class:DC_File	signature:(DC_File_EventLog *el)
DC_File::_log	manager/DC_File.cpp	/^void DC_File::_log(DC_File_EventLog_User *el, const UUID &uuid) {$/;"	f	class:DC_File	signature:(DC_File_EventLog_User *el, const UUID &uuid)
DC_File::addRedeemPacket	manager/DC_File.cpp	/^bool DC_File::addRedeemPacket(RedeemPacketPtr redeemPacket) {$/;"	f	class:DC_File	signature:(RedeemPacketPtr redeemPacket)
DC_File::create	manager/DC_File.cpp	/^DataCenter * DC_File::create() {$/;"	f	class:DC_File	signature:()
DC_File::createUser	manager/DC_File.cpp	/^LoggedUserPtr DC_File::createUser() {$/;"	f	class:DC_File	signature:()
DC_File::destroy	manager/DC_File.cpp	/^void DC_File::destroy(DataCenter *p) {$/;"	f	class:DC_File	signature:(DataCenter *p)
DC_File::fini	manager/DC_File.cpp	/^void DC_File::fini()$/;"	f	class:DC_File	signature:()
DC_File::finishOrder	manager/DC_File.cpp	/^bool DC_File::finishOrder(const vn::str8 &orderId, const UUID &userId, bool confirmed) {$/;"	f	class:DC_File	signature:(const vn::str8 &orderId, const UUID &userId, bool confirmed)
DC_File::generateOrder	manager/DC_File.cpp	/^vn::str8 DC_File::generateOrder(const UUID &uuid, vn::u32 productId, vn::s32 price) {$/;"	f	class:DC_File	signature:(const UUID &uuid, vn::u32 productId, vn::s32 price)
DC_File::init	manager/DC_File.cpp	/^bool DC_File::init()$/;"	f	class:DC_File	signature:()
DC_File::loadServerData	manager/DC_File.cpp	/^bool DC_File::loadServerData(ServerData &data)$/;"	f	class:DC_File	signature:(ServerData &data)
DC_File::loadUser	manager/DC_File.cpp	/^LoggedUserPtr DC_File::loadUser(const UUID &uuid) {$/;"	f	class:DC_File	signature:(const UUID &uuid)
DC_File::log_user_beginBattle	manager/DC_File.cpp	/^void DC_File::log_user_beginBattle(const UUID &uuid, u32 levelId, bool intrusion) {$/;"	f	class:DC_File	signature:(const UUID &uuid, u32 levelId, bool intrusion)
DC_File::log_user_endBattle	manager/DC_File.cpp	/^void DC_File::log_user_endBattle(const UUID &uuid, u32 levelId, bool intrusion, u32 stars, bool watch, bool shovel) {$/;"	f	class:DC_File	signature:(const UUID &uuid, u32 levelId, bool intrusion, u32 stars, bool watch, bool shovel)
DC_File::log_user_login	manager/DC_File.cpp	/^void DC_File::log_user_login(const UUID &uuid) {$/;"	f	class:DC_File	signature:(const UUID &uuid)
DC_File::log_user_logout	manager/DC_File.cpp	/^void DC_File::log_user_logout(const UUID &uuid) {$/;"	f	class:DC_File	signature:(const UUID &uuid)
DC_File::log_user_signin	manager/DC_File.cpp	/^void DC_File::log_user_signin(const UUID &uuid) {$/;"	f	class:DC_File	signature:(const UUID &uuid)
DC_File::queryOrder	manager/DC_File.cpp	/^DataCenter::OrderStatus DC_File::queryOrder(const vn::str8 &orderId, UUID &userId, vn::u32 &productId) {$/;"	f	class:DC_File	signature:(const vn::str8 &orderId, UUID &userId, vn::u32 &productId)
DC_File::queryRedeemPacket	manager/DC_File.cpp	/^RedeemPacketPtr DC_File::queryRedeemPacket(u32 codeId) {$/;"	f	class:DC_File	signature:(u32 codeId)
DC_File::queryRedeemPacketCategoryName	manager/DC_File.cpp	/^str8 DC_File::queryRedeemPacketCategoryName(u32 category) {$/;"	f	class:DC_File	signature:(u32 category)
DC_File::removeRedeemPacket	manager/DC_File.cpp	/^void DC_File::removeRedeemPacket(u32 codeId, const UUID &uuid) {$/;"	f	class:DC_File	signature:(u32 codeId, const UUID &uuid)
DC_File::saveServerData	manager/DC_File.cpp	/^void DC_File::saveServerData(const ServerData &data)$/;"	f	class:DC_File	signature:(const ServerData &data)
DC_File::saveUser	manager/DC_File.cpp	/^void DC_File::saveUser(LoggedUserPtr user) {$/;"	f	class:DC_File	signature:(LoggedUserPtr user)
DC_File::setRedeemPacketCategory	manager/DC_File.cpp	/^void DC_File::setRedeemPacketCategory(u32 category, const str8 &name) {$/;"	f	class:DC_File	signature:(u32 category, const str8 &name)
DC_File::update	manager/DC_File.cpp	/^void DC_File::update(f32 deltaTime)$/;"	f	class:DC_File	signature:(f32 deltaTime)
DC_File_EventLog	Log/DC_File_EventLog.h	/^struct DC_File_EventLog_User : DC_File_EventLog {$/;"	s
DC_File_EventLog::load	Log/DC_File_EventLog.cpp	/^void DC_File_EventLog::load(DataStream &stream) {$/;"	f	class:DC_File_EventLog	signature:(DataStream &stream)
DC_File_EventLog::load	Log/DC_File_EventLog.h	/^    virtual void load(DataStream &stream);$/;"	p	struct:DC_File_EventLog	access:public	signature:(DataStream &stream)
DC_File_EventLog::s_registry	Log/DC_File_EventLog.cpp	/^std::map<DC_File_EventLog_Type, DC_File_EventLog *(*)()> DC_File_EventLog::s_registry;$/;"	m	class:DC_File_EventLog	file:
DC_File_EventLog::save	Log/DC_File_EventLog.cpp	/^void DC_File_EventLog::save(DataStream &stream) const {$/;"	f	class:DC_File_EventLog	signature:(DataStream &stream) const
DC_File_EventLog::save	Log/DC_File_EventLog.h	/^    virtual void save(DataStream &stream) const;$/;"	p	struct:DC_File_EventLog	access:public	signature:(DataStream &stream) const
DC_File_EventLog::u64	Log/DC_File_EventLog.h	/^    std::pair<u64, u64> userId = {0, 0};$/;"	m	struct:DC_File_EventLog	access:public
DC_File_EventLog::userId	Log/DC_File_EventLog.h	/^    std::pair<u64, u64> userId = {0, 0};$/;"	m	struct:DC_File_EventLog	access:public
DC_File_EventLog_Type	Log/DC_File_EventLog.h	/^    static std::map<DC_File_EventLog_Type, DC_File_EventLog *(*)()> s_registry;$/;"	m	struct:AllocatedObject	access:public
DC_File_EventLog_User	Log/DC_File_EventLog.h	/^struct DC_File_EventLog_User_BeginBattle : DC_File_EventLog_User {$/;"	s
DC_File_EventLog_User	Log/DC_File_EventLog.h	/^struct DC_File_EventLog_User_EndBattle : DC_File_EventLog_User {$/;"	s
DC_File_EventLog_User	Log/DC_File_EventLog.h	/^struct DC_File_EventLog_User_Login : DC_File_EventLog_User {$/;"	s
DC_File_EventLog_User	Log/DC_File_EventLog.h	/^struct DC_File_EventLog_User_Logout : DC_File_EventLog_User {$/;"	s
DC_File_EventLog_User	Log/DC_File_EventLog.h	/^struct DC_File_EventLog_User_Signin : DC_File_EventLog_User {$/;"	s
DC_File_EventLog_User::DECL_EVENT_LOG	Log/DC_File_EventLog.h	/^    DECL_EVENT_LOG(kELT_UserBeginBattle)$/;"	p	struct:DC_File_EventLog_User	access:public
DC_File_EventLog_User::DECL_EVENT_LOG	Log/DC_File_EventLog.h	/^    DECL_EVENT_LOG(kELT_UserEndBattle)$/;"	p	struct:DC_File_EventLog_User	access:public
DC_File_EventLog_User::intrusion	Log/DC_File_EventLog.h	/^    bool intrusion = false;$/;"	m	struct:DC_File_EventLog_User	access:public
DC_File_EventLog_User::load	Log/DC_File_EventLog.cpp	/^void DC_File_EventLog_User::load(DataStream &stream) {$/;"	f	class:DC_File_EventLog_User	signature:(DataStream &stream)
DC_File_EventLog_User::load	Log/DC_File_EventLog.h	/^    virtual void load(DataStream &stream);$/;"	p	struct:DC_File_EventLog_User	access:public	signature:(DataStream &stream)
DC_File_EventLog_User::save	Log/DC_File_EventLog.cpp	/^void DC_File_EventLog_User::save(DataStream &stream) const {$/;"	f	class:DC_File_EventLog_User	signature:(DataStream &stream) const
DC_File_EventLog_User::save	Log/DC_File_EventLog.h	/^    virtual void save(DataStream &stream) const;$/;"	p	struct:DC_File_EventLog_User	access:public	signature:(DataStream &stream) const
DC_File_EventLog_User::shovel	Log/DC_File_EventLog.h	/^    bool shovel = false, watch = false;$/;"	m	struct:DC_File_EventLog_User	access:public
DC_File_EventLog_User::stars	Log/DC_File_EventLog.h	/^    u8 stars = 0;$/;"	m	struct:DC_File_EventLog_User	access:public
DC_File_EventLog_User::watch	Log/DC_File_EventLog.h	/^    bool shovel = false, watch = false;$/;"	m	struct:DC_File_EventLog_User	access:public
DC_File_EventLog_User_BeginBattle::load	Log/DC_File_EventLog.cpp	/^void DC_File_EventLog_User_BeginBattle::load(DataStream &stream) {$/;"	f	class:DC_File_EventLog_User_BeginBattle	signature:(DataStream &stream)
DC_File_EventLog_User_BeginBattle::save	Log/DC_File_EventLog.cpp	/^void DC_File_EventLog_User_BeginBattle::save(DataStream &stream) const {$/;"	f	class:DC_File_EventLog_User_BeginBattle	signature:(DataStream &stream) const
DC_File_EventLog_User_EndBattle::load	Log/DC_File_EventLog.cpp	/^void DC_File_EventLog_User_EndBattle::load(DataStream &stream) {$/;"	f	class:DC_File_EventLog_User_EndBattle	signature:(DataStream &stream)
DC_File_EventLog_User_EndBattle::save	Log/DC_File_EventLog.cpp	/^void DC_File_EventLog_User_EndBattle::save(DataStream &stream) const {$/;"	f	class:DC_File_EventLog_User_EndBattle	signature:(DataStream &stream) const
DECL_EVENT_LOG	Log/DC_File_EventLog.h	/^    DECL_EVENT_LOG(kELT_UserBeginBattle)$/;"	p	struct:DC_File_EventLog_User	access:public
DECL_EVENT_LOG	Log/DC_File_EventLog.h	/^    DECL_EVENT_LOG(kELT_UserEndBattle)$/;"	p	struct:DC_File_EventLog_User	access:public
DECL_EVENT_LOG	Log/DC_File_EventLog.h	46;"	d
DOWNJON_APP_ID	Common.h	/^const static std::string DOWNJON_APP_ID = "4043";$/;"	v
DOWNJON_APP_KEY	Common.h	/^const static std::string DOWNJON_APP_KEY = "Phwa2Iia";$/;"	v
DOWNJON_MERCHANT_ID	Common.h	/^const static std::string DOWNJON_MERCHANT_ID = "1497";$/;"	v
DOWNJON_PAYMENT_Key	Common.h	/^const static std::string DOWNJON_PAYMENT_Key = "1a8ICu0S4A8d";$/;"	v
DataCenter	manager/DataCenter.h	/^class DataCenter : public Singleton<DataCenter, DataCenterCreator> {$/;"	v
DataCenter::_addUser	manager/DataCenter.cpp	/^void DataCenter::_addUser(const LoggedUserPtr &user) {$/;"	f	class:DataCenter	signature:(const LoggedUserPtr &user)
DataCenter::_removeUser	manager/DataCenter.cpp	/^void DataCenter::_removeUser(const LoggedUserPtr &user) {$/;"	f	class:DataCenter	signature:(const LoggedUserPtr &user)
DataCenterCreator	manager/DataCenter.h	/^struct DataCenterCreator {$/;"	s
DataCenterCreator::create	manager/DataCenter.cpp	/^DataCenter * DataCenterCreator::create() {$/;"	f	class:DataCenterCreator	signature:()
DataCenterCreator::create	manager/DataCenter.h	/^    static DataCenter * create();$/;"	p	struct:DataCenterCreator	access:public
DataCenterCreator::destroy	manager/DataCenter.cpp	/^void DataCenterCreator::destroy(DataCenter *p) {$/;"	f	class:DataCenterCreator	signature:(DataCenter *p)
DataCenterCreator::destroy	manager/DataCenter.h	/^    static void destroy(DataCenter *p);$/;"	p	struct:DataCenterCreator	access:public	signature:(DataCenter *p)
Date	DateTime.h	/^    Date() : date(0) {}$/;"	f	struct:Date	access:public
Date	DateTime.h	/^struct Date {$/;"	s
Date	DateTime.h	/^struct DateTime : Time, Date {$/;"	s
Date::Date	DateTime.h	/^    Date() : date(0) {}$/;"	f	struct:Date	access:public
Date::__anon1::__anon2::day	DateTime.h	/^            u32 day : 8;$/;"	m	struct:Date::__anon1::__anon2	access:public
Date::__anon1::__anon2::month	DateTime.h	/^            u32 month : 8;$/;"	m	struct:Date::__anon1::__anon2	access:public
Date::__anon1::__anon2::year	DateTime.h	/^            u32 year : 16;$/;"	m	struct:Date::__anon1::__anon2	access:public
Date::__anon1::date	DateTime.h	/^        u32 date;$/;"	m	union:Date::__anon1	access:public
Date::convertFromString	DateTime.cpp	/^bool Date::convertFromString(const str8 &s) {$/;"	f	class:Date	signature:(const str8 &s)
Date::convertFromString	DateTime.h	/^    bool convertFromString(const str8 &s);$/;"	p	struct:Date	access:public	signature:(const str8 &s)
Date::convertToString	DateTime.cpp	/^str8 Date::convertToString() const {$/;"	f	class:Date	signature:() const
Date::convertToString	DateTime.h	/^    str8 convertToString() const;$/;"	p	struct:Date	access:public
Date::now	DateTime.h	/^    static DateTime now();$/;"	p	struct:Date	access:public
Date::operator	DateTime.h	/^    bool operator !=(const Date &) const;$/;"	p	struct:Date	access:public	signature:(const Date &) const
Date::operator	DateTime.h	/^    bool operator !=(const DateTime &) const;$/;"	p	struct:Date	access:public	signature:(const DateTime &) const
Date::operator	DateTime.h	/^    bool operator <(const Date &) const;$/;"	p	struct:Date	access:public	signature:(const Date &) const
Date::operator	DateTime.h	/^    bool operator <(const DateTime &) const;$/;"	p	struct:Date	access:public	signature:(const DateTime &) const
Date::operator	DateTime.h	/^    bool operator ==(const Date &) const;$/;"	p	struct:Date	access:public	signature:(const Date &) const
Date::operator	DateTime.h	/^    bool operator ==(const DateTime &) const;$/;"	p	struct:Date	access:public	signature:(const DateTime &) const
Date::operator !=	DateTime.cpp	/^bool Date::operator !=(const Date &t) const {$/;"	f	class:Date	signature:(const Date &t) const
Date::operator <	DateTime.cpp	/^bool Date::operator <(const Date &t) const {$/;"	f	class:Date	signature:(const Date &t) const
Date::operator ==	DateTime.cpp	/^bool Date::operator ==(const Date &t) const {$/;"	f	class:Date	signature:(const Date &t) const
Date::today	DateTime.cpp	/^Date Date::today() {$/;"	f	class:Date	signature:()
Date::today	DateTime.h	/^    static Date today();$/;"	p	struct:Date	access:public
DateTime::convertFromString	DateTime.cpp	/^bool DateTime::convertFromString(const str8 &s) {$/;"	f	class:DateTime	signature:(const str8 &s)
DateTime::convertToString	DateTime.cpp	/^str8 DateTime::convertToString() const {$/;"	f	class:DateTime	signature:() const
DateTime::now	DateTime.cpp	/^DateTime DateTime::now() {$/;"	f	class:DateTime	signature:()
DateTime::operator !=	DateTime.cpp	/^bool DateTime::operator !=(const DateTime &t) const {$/;"	f	class:DateTime	signature:(const DateTime &t) const
DateTime::operator <	DateTime.cpp	/^bool DateTime::operator <(const DateTime &t) const {$/;"	f	class:DateTime	signature:(const DateTime &t) const
DateTime::operator ==	DateTime.cpp	/^bool DateTime::operator ==(const DateTime &t) const {$/;"	f	class:DateTime	signature:(const DateTime &t) const
DbOperFailHandl	worker/LoggedUser.cpp	/^void LoggedUser::DbOperFailHandl()$/;"	f	class:LoggedUser	signature:()
DbOperFailHandl	worker/PreLoggingUser.cpp	/^void PreLoggingUser::DbOperFailHandl()$/;"	f	class:PreLoggingUser	signature:()
DoPrepareStatements	database/PassPortDatabaseConnection.cpp	/^void PassPortDatabaseConnection::DoPrepareStatements() {$/;"	f	class:PassPortDatabaseConnection	signature:()
FIND_HEROID	database/PassPortDatabaseConnection.h	/^	FIND_HEROID,$/;"	e	enum:PassPortDatabaseStatements
FLYME_AppID	Common.h	/^const static std::string FLYME_AppID = "2681137";$/;"	v
FLYME_AppKey	Common.h	/^const static std::string FLYME_AppKey = "29b81d3721654c01a1c2e56d67589af0";$/;"	v
FLYME_AppSecret	Common.h	/^const static std::string FLYME_AppSecret = "dVK5wtDskGK6GwhnF8ZfdawWGdsOkdbe";$/;"	v
FLYME_PubKey	Common.h	/^const static std::string FLYME_PubKey = "-----BEGIN PUBLIC KEY-----\\r\\n"$/;"	v
File	File/FileSystemPKG.cpp	/^FileSystemPKG::File::File(FileSystemPKG *fs, vn::u64 offset, vn::u64 size)$/;"	f	class:FileSystemPKG::File	signature:(FileSystemPKG *fs, vn::u64 offset, vn::u64 size)
FileInMemory	File/FileSystemPKG.cpp	/^FileSystemPKG::FileInMemory::FileInMemory(vn::Buffer *context, bool grab)$/;"	f	class:FileSystemPKG::FileInMemory	signature:(vn::Buffer *context, bool grab)
FileSystemPKG	File/FileSystemPKG.cpp	/^FileSystemPKG::FileSystemPKG()$/;"	f	class:FileSystemPKG	signature:()
FileSystemPKG::File::File	File/FileSystemPKG.cpp	/^FileSystemPKG::File::File(FileSystemPKG *fs, vn::u64 offset, vn::u64 size)$/;"	f	class:FileSystemPKG::File	signature:(FileSystemPKG *fs, vn::u64 offset, vn::u64 size)
FileSystemPKG::File::close	File/FileSystemPKG.cpp	/^void FileSystemPKG::File::close() {$/;"	f	class:FileSystemPKG::File	signature:()
FileSystemPKG::File::read	File/FileSystemPKG.cpp	/^size_t FileSystemPKG::File::read(void *buffer, size_t size) {$/;"	f	class:FileSystemPKG::File	signature:(void *buffer, size_t size)
FileSystemPKG::File::seek	File/FileSystemPKG.cpp	/^bool FileSystemPKG::File::seek(vn::s64 offset, SeekDir mode) {$/;"	f	class:FileSystemPKG::File	signature:(vn::s64 offset, SeekDir mode)
FileSystemPKG::File::~File	File/FileSystemPKG.cpp	/^FileSystemPKG::File::~File() {$/;"	f	class:FileSystemPKG::File	signature:()
FileSystemPKG::FileInMemory::FileInMemory	File/FileSystemPKG.cpp	/^FileSystemPKG::FileInMemory::FileInMemory(vn::Buffer *context, bool grab)$/;"	f	class:FileSystemPKG::FileInMemory	signature:(vn::Buffer *context, bool grab)
FileSystemPKG::FileInMemory::close	File/FileSystemPKG.cpp	/^void FileSystemPKG::FileInMemory::close() {$/;"	f	class:FileSystemPKG::FileInMemory	signature:()
FileSystemPKG::FileInMemory::~FileInMemory	File/FileSystemPKG.cpp	/^FileSystemPKG::FileInMemory::~FileInMemory() {$/;"	f	class:FileSystemPKG::FileInMemory	signature:()
FileSystemPKG::FileSystemPKG	File/FileSystemPKG.cpp	/^FileSystemPKG::FileSystemPKG()$/;"	f	class:FileSystemPKG	signature:()
FileSystemPKG::_read	File/FileSystemPKG.cpp	/^size_t FileSystemPKG::_read(vn::u64 offset, void *buffer, size_t size) {$/;"	f	class:FileSystemPKG	signature:(vn::u64 offset, void *buffer, size_t size)
FileSystemPKG::load	File/FileSystemPKG.cpp	/^bool FileSystemPKG::load(vn::FileSystem *base, const vn::str8 &fileName) {$/;"	f	class:FileSystemPKG	signature:(vn::FileSystem *base, const vn::str8 &fileName)
FileSystemPKG::open	File/FileSystemPKG.cpp	/^vn::FileStream * FileSystemPKG::open(const vn::str8 &file, bool readOnly) {$/;"	f	class:FileSystemPKG	signature:(const vn::str8 &file, bool readOnly)
FileSystemPKG::~FileSystemPKG	File/FileSystemPKG.cpp	/^FileSystemPKG::~FileSystemPKG() {$/;"	f	class:FileSystemPKG	signature:()
GAME_ID	Common.h	/^enum GAME_ID {$/;"	g
GAME_ID_ICE_FIRE	Common.h	/^	GAME_ID_ICE_FIRE = 1, \/\/冰与火传说$/;"	e	enum:GAME_ID
GAME_ID_NUM	Common.h	/^	GAME_ID_NUM,$/;"	e	enum:GAME_ID
GFUN_UID	Common.h	/^const static std::string GFUN_UID = "28928685";$/;"	v
GIONEE_APIKey	Common.h	/^const static std::string GIONEE_APIKey = "2BCB4933F92D4954ABB0B86F87736E79";$/;"	v
GIONEE_PublicKey	Common.h	/^const static std::string GIONEE_PublicKey = "-----BEGIN PUBLIC KEY-----\\r\\n"$/;"	v
GIONEE_SecretKey	Common.h	/^const static std::string GIONEE_SecretKey = "B69DC911679A471D8AAFEBEFFAC7DC95";$/;"	v
GUOPAN_APP_ID_AND	Common.h	/^const static std::string GUOPAN_APP_ID_AND = "101966";$/;"	v
GUOPAN_APP_ID_IOS	Common.h	/^const static std::string GUOPAN_APP_ID_IOS = "102191";$/;"	v
GUOPAN_APP_KEY_AND	Common.h	/^const static std::string GUOPAN_APP_KEY_AND = "WN4TNCWS0VJBXUEODUJ9449UD8T9I3W9K0XGB6NXLH97GS7KBPUP5D61X594Z74Z";$/;"	v
GUOPAN_APP_KEY_IOS	Common.h	/^const static std::string GUOPAN_APP_KEY_IOS = "9FJMK8F3J3DCWI89ENVLHNN0S2GHG028788R6F93NK43XJPLGK0CH7VRNP8FR76X";$/;"	v
GetLotteryPool	worker/LoggedUser.cpp	/^void LoggedUser::GetLotteryPool(std::string &strLottery)$/;"	f	class:LoggedUser	signature:(std::string &strLottery)
HMW_AND_APPID	Common.h	/^const static std::string HMW_AND_APPID = "4256bca9de25e96d43a277f2a91a41b0";$/;"	v
HMW_AND_APPKEY	Common.h	/^const static std::string HMW_AND_APPKEY = "60d30b1e38da8d52fe74f37ca1078adf";$/;"	v
HMW_IOS_APPID	Common.h	/^const static std::string HMW_IOS_APPID = "7d77ab105daa333aa4a63ac681cdbd67";$/;"	v
HMW_IOS_APPKEY	Common.h	/^const static std::string HMW_IOS_APPKEY = "bc9f08b475dcdf9803c01962abc423a3";$/;"	v
HUAWEI_AppID	Common.h	/^const static std::string HUAWEI_AppID = "10327193";$/;"	v
HUAWEI_AppKey	Common.h	/^const static std::string HUAWEI_AppKey = "";$/;"	v
HUAWEI_AppSecret	Common.h	/^const static std::string HUAWEI_AppSecret = "oxhzzpl8m7pfi5oeuxz6iwxi2ovanea9";$/;"	v
HUAWEI_PubKey	Common.h	/^const static std::string HUAWEI_PubKey = "-----BEGIN PUBLIC KEY-----\\r\\n"$/;"	v
HUAWEI_PubKey_TEST	Common.h	/^const static std::string HUAWEI_PubKey_TEST = "-----BEGIN PUBLIC KEY-----\\r\\n"$/;"	v
I4_PubKey	Common.h	/^const static std::string I4_PubKey = "-----BEGIN PUBLIC KEY-----\\r\\n"$/;"	v
IAPPLE_GAMEKEY	Common.h	/^const static std::string IAPPLE_GAMEKEY = "85e654e73178e05003c09eeae003cb92";$/;"	v
IAPPLE_SECRETKEY	Common.h	/^const static std::string IAPPLE_SECRETKEY = "07c779ad9bf80e4132afd78bdf3f51f9";$/;"	v
IMPL_EVENT_LOG	Log/DC_File_EventLog.cpp	31;"	d	file:
INSERT_BASEINFO	database/PassPortDatabaseConnection.h	/^	INSERT_BASEINFO,$/;"	e	enum:PassPortDatabaseStatements
INSERT_BASEINFOFORCEGUIDE	database/PassPortDatabaseConnection.h	/^	INSERT_BASEINFOFORCEGUIDE,$/;"	e	enum:PassPortDatabaseStatements
INSERT_BASEINFOHERO	database/PassPortDatabaseConnection.h	/^	INSERT_BASEINFOHERO,$/;"	e	enum:PassPortDatabaseStatements
INSERT_BASEINFOITEMSTORE	database/PassPortDatabaseConnection.h	/^	INSERT_BASEINFOITEMSTORE,$/;"	e	enum:PassPortDatabaseStatements
INSERT_BASEINFOLEVELGROUPS	database/PassPortDatabaseConnection.h	/^	INSERT_BASEINFOLEVELGROUPS,$/;"	e	enum:PassPortDatabaseStatements
INSERT_BASEINFOLEVELS	database/PassPortDatabaseConnection.h	/^	INSERT_BASEINFOLEVELS,$/;"	e	enum:PassPortDatabaseStatements
INSERT_BASEINFOMINES	database/PassPortDatabaseConnection.h	/^	INSERT_BASEINFOMINES,$/;"	e	enum:PassPortDatabaseStatements
INSERT_BASEINFOMISSION	database/PassPortDatabaseConnection.h	/^	INSERT_BASEINFOMISSION,$/;"	e	enum:PassPortDatabaseStatements
INSERT_BASEINFOMONSTERMAP	database/PassPortDatabaseConnection.h	/^	INSERT_BASEINFOMONSTERMAP,$/;"	e	enum:PassPortDatabaseStatements
INSERT_BASEINFOTECHUPGRADE	database/PassPortDatabaseConnection.h	/^	INSERT_BASEINFOTECHUPGRADE,$/;"	e	enum:PassPortDatabaseStatements
INSERT_BASEINFOTOWERUPGRADE	database/PassPortDatabaseConnection.h	/^	INSERT_BASEINFOTOWERUPGRADE,$/;"	e	enum:PassPortDatabaseStatements
INSERT_BASEINFPLATFORMSTORE	database/PassPortDatabaseConnection.h	/^	INSERT_BASEINFPLATFORMSTORE,$/;"	e	enum:PassPortDatabaseStatements
INSERT_HERORUNES	database/PassPortDatabaseConnection.h	/^	INSERT_HERORUNES,$/;"	e	enum:PassPortDatabaseStatements
INSERT_LEVELGROUPS_LEVELS	database/PassPortDatabaseConnection.h	/^	INSERT_LEVELGROUPS_LEVELS,$/;"	e	enum:PassPortDatabaseStatements
INSERT_NETLOG	database/PassPortDatabaseConnection.h	/^	INSERT_NETLOG,$/;"	e	enum:PassPortDatabaseStatements
InsertItemStore	manager/DC_DataBase.cpp	/^bool DC_DataBase::InsertItemStore(std::string &strUUId,u32 itemId,u32 itemNum)$/;"	f	class:DC_DataBase	signature:(std::string &strUUId,u32 itemId,u32 itemNum)
KUAIYONG_AppKey	Common.h	/^const static std::string KUAIYONG_AppKey = "69644641fa9b8f309b7d55a61befac5a";$/;"	v
KUAIYONG_PublicKey	Common.h	/^const static std::string KUAIYONG_PublicKey = "-----BEGIN PUBLIC KEY-----\\r\\n"$/;"	v
LENOVO_AppID	Common.h	/^const static std::string LENOVO_AppID = "1508140542842.app.ln";$/;"	v
LENOVO_AppKey	Common.h	/^const static std::string LENOVO_AppKey =$/;"	v
Link_TCP_Listen	clientlisten/ClientListen.h	/^class ClientListen : public Link_TCP_Listen, public AllocatedObject {$/;"	v
LoadHero	manager/DC_DataBase.cpp	/^bool DC_DataBase::LoadHero(LoggedUserPtr user)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user)
LoadHeroIdbyUUIdTowerClass	manager/DC_DataBase.cpp	/^PreparedQueryResult DC_DataBase::LoadHeroIdbyUUIdTowerClass(std::string &strUUId,u32 towerClass)$/;"	f	class:DC_DataBase	signature:(std::string &strUUId,u32 towerClass)
LoadLevelGroupLevels	manager/DC_DataBase.cpp	/^PreparedQueryResult  DC_DataBase::LoadLevelGroupLevels(vn::u32 groupId)$/;"	f	class:DC_DataBase	signature:(vn::u32 groupId)
LoggedUser	manager/BSCouponManager.h	/^class LoggedUser;$/;"	v
LoggedUser	worker/BSForceGuide.h	/^class LoggedUser;$/;"	v
LoggedUser	worker/BSGoldMine.h	/^class LoggedUser;$/;"	v
LoggedUser	worker/BSHero.h	/^class LoggedUser;$/;"	v
LoggedUser	worker/BSIntrusion.h	/^class LoggedUser;$/;"	v
LoggedUser	worker/BSItemStore.h	/^class LoggedUser;$/;"	v
LoggedUser	worker/BSLevel.h	/^class LoggedUser;$/;"	v
LoggedUser	worker/BSLevelGroup.h	/^class LoggedUser;$/;"	v
LoggedUser	worker/BSMission.h	/^class LoggedUser;$/;"	v
LoggedUser	worker/BSMonsterMap.h	/^class LoggedUser;$/;"	v
LoggedUser	worker/BSPlatformStore.h	/^class LoggedUser;$/;"	v
LoggedUser	worker/BSPlayerBaseInfo.h	/^class LoggedUser;$/;"	v
LoggedUser	worker/BSRegistration.h	/^class LoggedUser;$/;"	v
LoggedUser	worker/BSTechUpgrade.h	/^class LoggedUser;$/;"	v
LoggedUser	worker/BSTowerUpgrade.h	/^class LoggedUser;$/;"	v
LoggedUser	worker/LoggedUser.cpp	/^LoggedUser::LoggedUser(const UUID &uuid) :$/;"	f	class:LoggedUser	signature:(const UUID &uuid)
LoggedUser	worker/LoggedUser.cpp	/^LoggedUser::LoggedUser(const std::string &uuid) :$/;"	f	class:LoggedUser	signature:(const std::string &uuid)
LoggedUser::Asyncorder_ok	worker/LoggedUser.cpp	/^void LoggedUser::Asyncorder_ok(const str8 &cooOrderSerial,$/;"	f	class:LoggedUser	signature:(const str8 &cooOrderSerial, std::function<void(bool ret)> doResult)
LoggedUser::CalculateCoupon	worker/LoggedUser.cpp	/^void LoggedUser::CalculateCoupon(vn::u64 lastTime)$/;"	f	class:LoggedUser	signature:(vn::u64 lastTime)
LoggedUser::CalculateLottery	worker/LoggedUser.cpp	/^void LoggedUser::CalculateLottery(vn::u64 lastCouponTime, vn::u64 lastLoginTime)$/;"	f	class:LoggedUser	signature:(vn::u64 lastCouponTime, vn::u64 lastLoginTime)
LoggedUser::CalculateSecondDayLogin	worker/LoggedUser.cpp	/^bool LoggedUser::CalculateSecondDayLogin(vn::u64 lastLoginTime)$/;"	f	class:LoggedUser	signature:(vn::u64 lastLoginTime)
LoggedUser::DbOperFailHandl	worker/LoggedUser.cpp	/^void LoggedUser::DbOperFailHandl()$/;"	f	class:LoggedUser	signature:()
LoggedUser::GetLotteryPool	worker/LoggedUser.cpp	/^void LoggedUser::GetLotteryPool(std::string &strLottery)$/;"	f	class:LoggedUser	signature:(std::string &strLottery)
LoggedUser::LoggedUser	worker/LoggedUser.cpp	/^LoggedUser::LoggedUser(const UUID &uuid) :$/;"	f	class:LoggedUser	signature:(const UUID &uuid)
LoggedUser::LoggedUser	worker/LoggedUser.cpp	/^LoggedUser::LoggedUser(const std::string &uuid) :$/;"	f	class:LoggedUser	signature:(const std::string &uuid)
LoggedUser::OtherLogin	worker/LoggedUser.cpp	/^void LoggedUser::OtherLogin(const ClientPtr &client)$/;"	f	class:LoggedUser	signature:(const ClientPtr &client)
LoggedUser::_ConvertStrToLotteryPool	worker/LoggedUser.cpp	/^void LoggedUser::_ConvertStrToLotteryPool(std::string &strPool)$/;"	f	class:LoggedUser	signature:(std::string &strPool)
LoggedUser::_HandlClose	worker/LoggedUser.cpp	/^void LoggedUser::_HandlClose(AsyncTaskPtr task)$/;"	f	class:LoggedUser	signature:(AsyncTaskPtr task)
LoggedUser::_HandlTaskFinish	worker/LoggedUser.cpp	/^void LoggedUser::_HandlTaskFinish(AsyncTaskPtr task)$/;"	f	class:LoggedUser	signature:(AsyncTaskPtr task)
LoggedUser::_buildPlayerData	worker/LoggedUser.cpp	/^void LoggedUser::_buildPlayerData(pkt::Msg_PlayerData &data)$/;"	f	class:LoggedUser	signature:(pkt::Msg_PlayerData &data)
LoggedUser::_buildTimedData	worker/LoggedUser.cpp	/^void LoggedUser::_buildTimedData(pkt::Msg_TimedData &data)$/;"	f	class:LoggedUser	signature:(pkt::Msg_TimedData &data)
LoggedUser::_checkLottery	worker/LoggedUser.cpp	/^void LoggedUser::_checkLottery(u32 levelId)$/;"	f	class:LoggedUser	signature:(u32 levelId)
LoggedUser::_closed	worker/LoggedUser.cpp	/^void LoggedUser::_closed()$/;"	f	class:LoggedUser	signature:()
LoggedUser::_generateCoupon	worker/LoggedUser.cpp	/^bool LoggedUser::_generateCoupon()$/;"	f	class:LoggedUser	signature:()
LoggedUser::_invalid_operation	worker/LoggedUser.cpp	/^void LoggedUser::_invalid_operation()$/;"	f	class:LoggedUser	signature:()
LoggedUser::_notify_couponUsed	worker/LoggedUser.cpp	/^void LoggedUser::_notify_couponUsed()$/;"	f	class:LoggedUser	signature:()
LoggedUser::_notify_heroUnlocked	worker/LoggedUser.cpp	/^void LoggedUser::_notify_heroUnlocked(u32 heroClassId)$/;"	f	class:LoggedUser	signature:(u32 heroClassId)
LoggedUser::_notify_levelPassed	worker/LoggedUser.cpp	/^void LoggedUser::_notify_levelPassed(const BSLevel::LevelInfo &info)$/;"	f	class:LoggedUser	signature:(const BSLevel::LevelInfo &info)
LoggedUser::_openLottery	worker/LoggedUser.cpp	/^bool LoggedUser::_openLottery()$/;"	f	class:LoggedUser	signature:()
LoggedUser::_sendAnnouncementId	worker/LoggedUser.cpp	/^void LoggedUser::_sendAnnouncementId()	\/\/下发通告id$/;"	f	class:LoggedUser	signature:()
LoggedUser::_sendCouponInfo	worker/LoggedUser.cpp	/^void LoggedUser::_sendCouponInfo()	\/\/下发优惠券消息$/;"	f	class:LoggedUser	signature:()
LoggedUser::_sendLotteryInfo	worker/LoggedUser.cpp	/^void LoggedUser::_sendLotteryInfo() \/\/下发彩票$/;"	f	class:LoggedUser	signature:()
LoggedUser::_sendRegistrationInfo	worker/LoggedUser.cpp	/^void LoggedUser::_sendRegistrationInfo()$/;"	f	class:LoggedUser	signature:()
LoggedUser::_updateCoupon	worker/LoggedUser.cpp	/^void LoggedUser::_updateCoupon(f32 deltaTime)$/;"	f	class:LoggedUser	signature:(f32 deltaTime)
LoggedUser::_updateLottery	worker/LoggedUser.cpp	/^void LoggedUser::_updateLottery(f32 deltaTime)$/;"	f	class:LoggedUser	signature:(f32 deltaTime)
LoggedUser::_updateStamp	worker/LoggedUser.cpp	/^void LoggedUser::_updateStamp()$/;"	f	class:LoggedUser	signature:()
LoggedUser::bsForceGuide	worker/LoggedUser.cpp	/^BSForceGuide & LoggedUser::bsForceGuide()$/;"	f	class:LoggedUser	signature:()
LoggedUser::bsGoldMine	worker/LoggedUser.cpp	/^BSGoldMine & LoggedUser::bsGoldMine()$/;"	f	class:LoggedUser	signature:()
LoggedUser::bsHero	worker/LoggedUser.cpp	/^BSHero & LoggedUser::bsHero()$/;"	f	class:LoggedUser	signature:()
LoggedUser::bsItemStore	worker/LoggedUser.cpp	/^BSItemStore & LoggedUser::bsItemStore()$/;"	f	class:LoggedUser	signature:()
LoggedUser::bsLevel	worker/LoggedUser.cpp	/^BSLevel & LoggedUser::bsLevel()$/;"	f	class:LoggedUser	signature:()
LoggedUser::bsLevelGroupMgr	worker/LoggedUser.cpp	/^BSLevelGroupManager & LoggedUser::bsLevelGroupMgr()$/;"	f	class:LoggedUser	signature:()
LoggedUser::bsMission	worker/LoggedUser.cpp	/^BSMission & LoggedUser::bsMission()$/;"	f	class:LoggedUser	signature:()
LoggedUser::bsMonsterMap	worker/LoggedUser.cpp	/^BSMonsterMap & LoggedUser::bsMonsterMap()$/;"	f	class:LoggedUser	signature:()
LoggedUser::bsPlatformStore	worker/LoggedUser.cpp	/^BSPlatformStore & LoggedUser::bsPlatformStore()$/;"	f	class:LoggedUser	signature:()
LoggedUser::bsPlayerBaseInfo	worker/LoggedUser.cpp	/^BSPlayerBaseInfo & LoggedUser::bsPlayerBaseInfo()$/;"	f	class:LoggedUser	signature:()
LoggedUser::bsRegistration	worker/LoggedUser.cpp	/^BSRegistration & LoggedUser::bsRegistration()$/;"	f	class:LoggedUser	signature:()
LoggedUser::bsTechUpgrade	worker/LoggedUser.cpp	/^BSTechUpgrade & LoggedUser::bsTechUpgrade()$/;"	f	class:LoggedUser	signature:()
LoggedUser::bsTowerUpgrade	worker/LoggedUser.cpp	/^BSTowerUpgrade & LoggedUser::bsTowerUpgrade()$/;"	f	class:LoggedUser	signature:()
LoggedUser::createRequest	worker/LoggedUser.cpp	/^PacketPtr LoggedUser::createRequest(u32 pid)$/;"	f	class:LoggedUser	signature:(u32 pid)
LoggedUser::load	worker/LoggedUser.cpp	/^void LoggedUser::load(PreparedQueryResult baseinfo, vn::s32 balance)$/;"	f	class:LoggedUser	signature:(PreparedQueryResult baseinfo, vn::s32 balance)
LoggedUser::load	worker/LoggedUser.cpp	/^void LoggedUser::load(Variable_object &vobj)$/;"	f	class:LoggedUser	signature:(Variable_object &vobj)
LoggedUser::login	worker/LoggedUser.cpp	/^void LoggedUser::login(const ClientPtr &client)$/;"	f	class:LoggedUser	signature:(const ClientPtr &client)
LoggedUser::order_failed	worker/LoggedUser.cpp	/^void LoggedUser::order_failed(const str8 &cooOrderSerial)$/;"	f	class:LoggedUser	signature:(const str8 &cooOrderSerial)
LoggedUser::order_ok	worker/LoggedUser.cpp	/^void LoggedUser::order_ok(const str8 &cooOrderSerial, s32 *addDiamond)$/;"	f	class:LoggedUser	signature:(const str8 &cooOrderSerial, s32 *addDiamond)
LoggedUser::reset_data	worker/LoggedUser.cpp	/^void LoggedUser::reset_data(vn::s32 diamond)$/;"	f	class:LoggedUser	signature:(vn::s32 diamond)
LoggedUser::save	worker/LoggedUser.cpp	/^void LoggedUser::save(Variable_object &vobj) const$/;"	f	class:LoggedUser	signature:(Variable_object &vobj) const
LoggedUser::send_intrusion	worker/LoggedUser.cpp	/^void LoggedUser::send_intrusion(u32 levelId, bool group)$/;"	f	class:LoggedUser	signature:(u32 levelId, bool group)
LoggedUser::shutdown	worker/LoggedUser.cpp	/^void LoggedUser::shutdown()$/;"	f	class:LoggedUser	signature:()
LoggedUser::signin	worker/LoggedUser.cpp	/^void LoggedUser::signin(const ClientPtr &client)$/;"	f	class:LoggedUser	signature:(const ClientPtr &client)
LoggedUser::update	worker/LoggedUser.cpp	/^void LoggedUser::update(f32 deltaTime)$/;"	f	class:LoggedUser	signature:(f32 deltaTime)
LoggedUser::~LoggedUser	worker/LoggedUser.cpp	/^LoggedUser::~LoggedUser()$/;"	f	class:LoggedUser	signature:()
LoggedUserManager::addUser	manager/LoggedUserManager.cpp	/^void LoggedUserManager::addUser(LoggedUserPtr user) {$/;"	f	class:LoggedUserManager	signature:(LoggedUserPtr user)
LoggedUserManager::broadcast	manager/LoggedUserManager.cpp	/^void LoggedUserManager::broadcast(const std::function<void (LoggedUser *)> &func) {$/;"	f	class:LoggedUserManager	signature:(const std::function<void (LoggedUser *)> &func)
LoggedUserManager::findUser	manager/LoggedUserManager.cpp	/^LoggedUserPtr LoggedUserManager::findUser(const std::string &strUUId) {$/;"	f	class:LoggedUserManager	signature:(const std::string &strUUId)
LoggedUserManager::fini	manager/LoggedUserManager.cpp	/^void LoggedUserManager::fini() {$/;"	f	class:LoggedUserManager	signature:()
LoggedUserManager::removeUser	manager/LoggedUserManager.cpp	/^void LoggedUserManager::removeUser(const std::string &strUUId) {$/;"	f	class:LoggedUserManager	signature:(const std::string &strUUId)
LoggedUserManager::reportLevel	manager/LoggedUserManager.cpp	/^void LoggedUserManager::reportLevel() {$/;"	f	class:LoggedUserManager	signature:()
LoggedUserPtr	worker/LoggedUser.h	/^typedef vn::RefCountedPtr<LoggedUser> LoggedUserPtr;$/;"	t
MAX_PASSPORTDATABASE_STATEMENTS	database/PassPortDatabaseConnection.h	/^	MAX_PASSPORTDATABASE_STATEMENTS,$/;"	e	enum:PassPortDatabaseStatements
MSDKKEY	Common.h	/^const static std::string MSDKKEY = "e001a244da1e2662da99245e93a858ca";$/;"	v
MUZHIWAN_KEY	Common.h	/^const static std::string MUZHIWAN_KEY = "85e3dceed9502985bbe2f277bbfc6973";$/;"	v
MUZHIWAN_PAYMENT_KEY	Common.h	/^const static std::string MUZHIWAN_PAYMENT_KEY = "55dc020d1ae8a";$/;"	v
OPEN_HERO	database/PassPortDatabaseConnection.h	/^	OPEN_HERO,$/;"	e	enum:PassPortDatabaseStatements
OPPO_AppId	Common.h	/^const static std::string OPPO_AppId = "4102";$/;"	v
OPPO_AppKey	Common.h	/^const static std::string OPPO_AppKey = "25ht032cI934SCWo000Sk0k0S";$/;"	v
OPPO_AppSecret	Common.h	/^const static std::string OPPO_AppSecret = "bA95b2207f4805408D794e93DF986122";$/;"	v
OPPO_PubKey	Common.h	/^const static std::string OPPO_PubKey = "-----BEGIN PUBLIC KEY-----\\r\\n"$/;"	v
OPTDServer::_console_command	OPTDServer.cpp	/^bool OPTDServer::_console_command(RefCountedPtr<Variable_object> cmds) {$/;"	f	class:OPTDServer	signature:(RefCountedPtr<Variable_object> cmds)
OPTDServer::_startDB	OPTDServer.cpp	/^bool OPTDServer::_startDB(){$/;"	f	class:OPTDServer	signature:()
OPTDServer::_stopDB	OPTDServer.cpp	/^bool OPTDServer::_stopDB(){$/;"	f	class:OPTDServer	signature:()
OPTDServer::finalize	OPTDServer.cpp	/^void OPTDServer::finalize() {$/;"	f	class:OPTDServer	signature:()
OPTDServer::initialize	OPTDServer.cpp	/^bool OPTDServer::initialize(int argc, const char *argv[])$/;"	f	class:OPTDServer	signature:(int argc, const char *argv[])
OPTDServer::update	OPTDServer.cpp	/^void OPTDServer::update(f32 deltaTime){$/;"	f	class:OPTDServer	signature:(f32 deltaTime)
ORDER_OPT	Common.h	/^enum ORDER_OPT {$/;"	g
ORDER_OPT_CLEAN	Common.h	/^	ORDER_OPT_CLEAN = 1, \/\/取消$/;"	e	enum:ORDER_OPT
ORDER_OPT_DELAY	Common.h	/^	ORDER_OPT_DELAY = 2, \/\/延时$/;"	e	enum:ORDER_OPT
ORDER_STATUS	Common.h	/^enum ORDER_STATUS {$/;"	g
ORDER_STATUS_CONFIRM	Common.h	/^	ORDER_STATUS_CONFIRM, \/\/游戏服发货成功$/;"	e	enum:ORDER_STATUS
ORDER_STATUS_NO_PAY	Common.h	/^	ORDER_STATUS_NO_PAY, \/\/未支付$/;"	e	enum:ORDER_STATUS
ORDER_STATUS_PAY	Common.h	/^	ORDER_STATUS_PAY, \/\/已支付，并验证完成$/;"	e	enum:ORDER_STATUS
OS_ID	Common.h	/^enum OS_ID {$/;"	g
OS_ID_ANDROID	Common.h	/^	OS_ID_IOS = 0, OS_ID_ANDROID = 1, OS_ID_WIN = 2,$/;"	e	enum:OS_ID
OS_ID_IOS	Common.h	/^	OS_ID_IOS = 0, OS_ID_ANDROID = 1, OS_ID_WIN = 2,$/;"	e	enum:OS_ID
OS_ID_WIN	Common.h	/^	OS_ID_IOS = 0, OS_ID_ANDROID = 1, OS_ID_WIN = 2,$/;"	e	enum:OS_ID
OtherLogin	worker/LoggedUser.cpp	/^void LoggedUser::OtherLogin(const ClientPtr &client)$/;"	f	class:LoggedUser	signature:(const ClientPtr &client)
PLATFORM_ID	Common.h	/^enum PLATFORM_ID {$/;"	g
PLATFORM_ID_19196	Common.h	/^	PLATFORM_ID_19196 = 19, \/\/19196*$/;"	e	enum:PLATFORM_ID
PLATFORM_ID_360	Common.h	/^	PLATFORM_ID_360 = 6, \/\/360*$/;"	e	enum:PLATFORM_ID
PLATFORM_ID_4399	Common.h	/^	PLATFORM_ID_4399 = 11, \/\/4399*$/;"	e	enum:PLATFORM_ID
PLATFORM_ID_ANZHI	Common.h	/^	PLATFORM_ID_ANZHI = 7, \/\/安智*$/;"	e	enum:PLATFORM_ID
PLATFORM_ID_APPCHINA	Common.h	/^	PLATFORM_ID_APPCHINA = 16, \/\/应用汇*$/;"	e	enum:PLATFORM_ID
PLATFORM_ID_BAIDU	Common.h	/^	PLATFORM_ID_BAIDU = 10, \/\/百度*$/;"	e	enum:PLATFORM_ID
PLATFORM_ID_CCPLAY	Common.h	/^	PLATFORM_ID_CCPLAY = 24, \/\/虫虫助手*$/;"	e	enum:PLATFORM_ID
PLATFORM_ID_COOLYUN	Common.h	/^	PLATFORM_ID_COOLYUN = 23, \/\/酷派*$/;"	e	enum:PLATFORM_ID
PLATFORM_ID_COUNT	Common.h	/^	PLATFORM_ID_COUNT,$/;"	e	enum:PLATFORM_ID
PLATFORM_ID_DOWNJOY	Common.h	/^	PLATFORM_ID_DOWNJOY = 22, \/\/当乐*$/;"	e	enum:PLATFORM_ID
PLATFORM_ID_ERROR	Common.h	/^	PLATFORM_ID_ERROR = 0, \/\/不存在，用来检测错误$/;"	e	enum:PLATFORM_ID
PLATFORM_ID_FLYME	Common.h	/^	PLATFORM_ID_FLYME = 15, \/\/魅族*$/;"	e	enum:PLATFORM_ID
PLATFORM_ID_GFAN	Common.h	/^	PLATFORM_ID_GFAN = 38, \/\/鸡疯*$/;"	e	enum:PLATFORM_ID
PLATFORM_ID_GIONEE	Common.h	/^	PLATFORM_ID_GIONEE = 14, \/\/金立*$/;"	e	enum:PLATFORM_ID
PLATFORM_ID_GUOPAN_AND	Common.h	/^	PLATFORM_ID_GUOPAN_AND = 40, \/\/果盘（Android）$/;"	e	enum:PLATFORM_ID
PLATFORM_ID_GUOPAN_IOS	Common.h	/^	PLATFORM_ID_GUOPAN_IOS = 41, \/\/果盘（IOS）$/;"	e	enum:PLATFORM_ID
PLATFORM_ID_HAIMA_AND	Common.h	/^	PLATFORM_ID_HAIMA_AND = 29, \/\/海马玩(安卓)*$/;"	e	enum:PLATFORM_ID
PLATFORM_ID_HAIMA_IOS	Common.h	/^	PLATFORM_ID_HAIMA_IOS = 30, \/\/海马玩（ios）*$/;"	e	enum:PLATFORM_ID
PLATFORM_ID_HUAWEI	Common.h	/^	PLATFORM_ID_HUAWEI = 2, \/\/华为*$/;"	e	enum:PLATFORM_ID
PLATFORM_ID_I4	Common.h	/^	PLATFORM_ID_I4 = 17, \/\/爱思*$/;"	e	enum:PLATFORM_ID
PLATFORM_ID_IAPPLE	Common.h	/^	PLATFORM_ID_IAPPLE = 37, \/\/I苹果*$/;"	e	enum:PLATFORM_ID
PLATFORM_ID_ITOOLS	Common.h	/^	PLATFORM_ID_ITOOLS = 32, \/\/itools$/;"	e	enum:PLATFORM_ID
PLATFORM_ID_KUAIYONG	Common.h	/^	PLATFORM_ID_KUAIYONG = 5, \/\/快用苹果助手*$/;"	e	enum:PLATFORM_ID
PLATFORM_ID_LENOVO	Common.h	/^	PLATFORM_ID_LENOVO = 4, \/\/联想*$/;"	e	enum:PLATFORM_ID
PLATFORM_ID_MUZHIWAN	Common.h	/^	PLATFORM_ID_MUZHIWAN = 21, \/\/拇指玩*$/;"	e	enum:PLATFORM_ID
PLATFORM_ID_OPPO	Common.h	/^	PLATFORM_ID_OPPO = 12, \/\/OPPO*$/;"	e	enum:PLATFORM_ID
PLATFORM_ID_PPTV	Common.h	/^	PLATFORM_ID_PPTV = 13, \/\/PPTV*$/;"	e	enum:PLATFORM_ID
PLATFORM_ID_PP_IOS	Common.h	/^	PLATFORM_ID_PP_IOS = 31, \/\/PP助手（IOS）$/;"	e	enum:PLATFORM_ID
PLATFORM_ID_QIYPPS	Common.h	/^	PLATFORM_ID_QIYPPS = 33, \/\/爱其艺PPS*$/;"	e	enum:PLATFORM_ID
PLATFORM_ID_QQ	Common.h	/^	PLATFORM_ID_QQ = 25, \/\/QQ*$/;"	e	enum:PLATFORM_ID
PLATFORM_ID_SINA	Common.h	/^	PLATFORM_ID_SINA = 36, \/\/新浪*$/;"	e	enum:PLATFORM_ID
PLATFORM_ID_SOGOU	Common.h	/^	PLATFORM_ID_SOGOU = 35, \/\/搜狗*$/;"	e	enum:PLATFORM_ID
PLATFORM_ID_TBT	Common.h	/^	PLATFORM_ID_TBT = 27, \/\/同步推*$/;"	e	enum:PLATFORM_ID
PLATFORM_ID_TEST	Common.h	/^	PLATFORM_ID_TEST = 1, \/\/官服*$/;"	e	enum:PLATFORM_ID
PLATFORM_ID_UC	Common.h	/^	PLATFORM_ID_UC = 8, \/\/UC*$/;"	e	enum:PLATFORM_ID
PLATFORM_ID_VISITOR	Common.h	/^	PLATFORM_ID_VISITOR = 9999 \/\/visitor$/;"	e	enum:PLATFORM_ID
PLATFORM_ID_VIVO	Common.h	/^	PLATFORM_ID_VIVO = 28,	\/\/VIVO*$/;"	e	enum:PLATFORM_ID
PLATFORM_ID_WANDOUJIA	Common.h	/^	PLATFORM_ID_WANDOUJIA = 20, \/\/豌豆夹*$/;"	e	enum:PLATFORM_ID
PLATFORM_ID_WX	Common.h	/^	PLATFORM_ID_WX = 26, \/\/微信*$/;"	e	enum:PLATFORM_ID
PLATFORM_ID_XIAOMI	Common.h	/^	PLATFORM_ID_XIAOMI = 3, \/\/小米*$/;"	e	enum:PLATFORM_ID
PLATFORM_ID_XMW	Common.h	/^	PLATFORM_ID_XMW = 9, \/\/熊猫玩*$/;"	e	enum:PLATFORM_ID
PLATFORM_ID_XY	Common.h	/^	PLATFORM_ID_XY = 18, \/\/XY*$/;"	e	enum:PLATFORM_ID
PLATFORM_ID_YOUKU	Common.h	/^	PLATFORM_ID_YOUKU = 34, \/\/优酷土豆*$/;"	e	enum:PLATFORM_ID
PPLinkManger::PassportResponse	PPLink/PPLinkManger.cpp	/^void PPLinkManger::PassportResponse(pkt::res_JsonDate* pkt){$/;"	f	class:PPLinkManger	signature:(pkt::res_JsonDate* pkt)
PPLinkManger::SendGetBalance	PPLink/PPLinkManger.cpp	/^int PPLinkManger::SendGetBalance(AsyncObjectPtr objPtr,CallbackFn&& callbackFn, char* openId,const char* appId )$/;"	f	class:PPLinkManger	signature:(AsyncObjectPtr objPtr,CallbackFn&& callbackFn, char* openId,const char* appId )
PPLinkManger::SendPay	PPLink/PPLinkManger.cpp	/^int PPLinkManger::SendPay(AsyncObjectPtr objPtr,CallbackFn&& callbackFn, char* openId,vn::s32 diamondCount,const char* appId )$/;"	f	class:PPLinkManger	signature:(AsyncObjectPtr objPtr,CallbackFn&& callbackFn, char* openId,vn::s32 diamondCount,const char* appId )
PPLinkManger::SendPresent	PPLink/PPLinkManger.cpp	/^int PPLinkManger::SendPresent(AsyncObjectPtr objPtr,CallbackFn&& callbackFn, char* openId,vn::s32 diamondCount,const char* appId)$/;"	f	class:PPLinkManger	signature:(AsyncObjectPtr objPtr,CallbackFn&& callbackFn, char* openId,vn::s32 diamondCount,const char* appId)
PPLinkManger::SendVerifyReq	PPLink/PPLinkManger.cpp	/^int PPLinkManger::SendVerifyReq(AsyncObjectPtr objPtr,CallbackFn&& callbackFn, vn::u64 timestamp,$/;"	f	class:PPLinkManger	signature:(AsyncObjectPtr objPtr,CallbackFn&& callbackFn, vn::u64 timestamp, const char* appId, const char* sig, char* openId, char* accessToken)
PPLinkManger::SendVerifyReq	PPLink/PPLinkManger.cpp	/^int PPLinkManger::SendVerifyReq(CallbackFn&& callbackFn, vn::u64 timestamp,$/;"	f	class:PPLinkManger	signature:(CallbackFn&& callbackFn, vn::u64 timestamp, const char* appId, const char* sig, char* openId, char* accessToken)
PPLinkManger::SendVerifyReq	PPLink/PPLinkManger.cpp	/^int PPLinkManger::SendVerifyReq(vn::RefCountedPtr<Session> session,CallbackFn&& callbackFn, vn::u64 timestamp,$/;"	f	class:PPLinkManger	signature:(vn::RefCountedPtr<Session> session,CallbackFn&& callbackFn, vn::u64 timestamp, const char* appId, const char* sig, char* openId, char* accessToken)
PPLinkManger::_GetCBId	PPLink/PPLinkManger.cpp	/^vn::s32 PPLinkManger::_GetCBId()$/;"	f	class:PPLinkManger	signature:()
PPLinkManger::finalize	PPLink/PPLinkManger.cpp	/^void PPLinkManger::finalize(){$/;"	f	class:PPLinkManger	signature:()
PPLinkManger::init	PPLink/PPLinkManger.cpp	/^bool PPLinkManger::init(vn::LinkPool * linkPool) {$/;"	f	class:PPLinkManger	signature:(vn::LinkPool * linkPool)
PPLinkManger::update	PPLink/PPLinkManger.cpp	/^void PPLinkManger::update(vn::u64 diff){$/;"	f	class:PPLinkManger	signature:(vn::u64 diff)
PPS_KEY	Common.h	/^const static std::string PPS_KEY = "BYHCS8975af9b3947ae3a802a4d73885e54943937";$/;"	v
PPSession::createRequest	PPLink/PPSession.cpp	/^vn::PacketPtr PPSession::createRequest(vn::u32 pid){$/;"	f	class:PPSession	signature:(vn::u32 pid)
PPTV_Key	Common.h	/^const static std::string PPTV_Key = "9a077b2c072fae2764a22bbace6dfe11";$/;"	v
PP_APP_ID_IOS	Common.h	/^const static std::string PP_APP_ID_IOS = "7049";$/;"	v
PP_APP_KEY_IOS	Common.h	/^const static std::string PP_APP_KEY_IOS = "8e122a50baf625a6a5396a0f7315f959";$/;"	v
PP_PubKey	Common.h	/^const static std::string PP_PubKey = "-----BEGIN PUBLIC KEY-----\\r\\n"$/;"	v
P_19196_PKEY	Common.h	/^const static std::string P_19196_PKEY = "77661613dcf13531716d98c8cf1ae8f1";$/;"	v
P_19196_Pid	Common.h	/^const static std::string P_19196_Pid = "104158";$/;"	v
PacketHandler	clientlisten/Client.h	/^class PacketHandler;$/;"	v
PacketHandler	clientlisten/ClientSession.h	/^class PacketHandler;$/;"	v
PacketHandler::notify_closed	worker/PacketHandler.cpp	/^void PacketHandler::notify_closed() {$/;"	f	class:PacketHandler	signature:()
PacketHandler::postPacket	worker/PacketHandler.cpp	/^void PacketHandler::postPacket(vn::PacketPtr &&packet) {$/;"	f	class:PacketHandler	signature:(vn::PacketPtr &&packet)
ParaseGetResult	worker/BSTool.cpp	/^bool ParaseGetResult(vn::s32 *nResultCode,std::string& context)$/;"	f	signature:(vn::s32 *nResultCode,std::string& context)
ParaseGetResult	worker/BSTool.h	/^bool ParaseGetResult(vn::s32 *nResultCode,std::string& context);$/;"	p	signature:(vn::s32 *nResultCode,std::string& context)
ParseDiamond	worker/BSTool.cpp	/^bool ParseDiamond(int *outDiamond,std::string & context)$/;"	f	signature:(int *outDiamond,std::string & context)
ParseDiamond	worker/BSTool.h	/^bool ParseDiamond(int *outDiamond,std::string & context);$/;"	p	signature:(int *outDiamond,std::string & context)
ParseJson	worker/BSTool.h	/^bool ParseJson(T1 *value,vn::VariableType type,T2 valType ,std::string& context,std::string &key)$/;"	f	signature:(T1 *value,vn::VariableType type,T2 valType ,std::string& context,std::string &key)
ParseResult	worker/BSTool.cpp	/^bool ParseResult(int *outResult,std::string& context)$/;"	f	signature:(int *outResult,std::string& context)
ParseResult	worker/BSTool.h	/^bool ParseResult(int *outResult,std::string& context);$/;"	p	signature:(int *outResult,std::string& context)
PassPortDatabase	OPTDServer.cpp	/^PassPortDatabaseWorkerPool PassPortDatabase;$/;"	v
PassPortDatabaseConnection::DoPrepareStatements	database/PassPortDatabaseConnection.cpp	/^void PassPortDatabaseConnection::DoPrepareStatements() {$/;"	f	class:PassPortDatabaseConnection	signature:()
PassPortDatabaseStatements	database/PassPortDatabaseConnection.h	/^enum PassPortDatabaseStatements$/;"	g
PassPortDatabaseWorkerPool	database/PassPortDatabaseConnection.h	/^typedef DatabaseWorkerPool<PassPortDatabaseConnection> PassPortDatabaseWorkerPool;$/;"	t
PassportResponse	PPLink/PPLinkManger.cpp	/^void PPLinkManger::PassportResponse(pkt::res_JsonDate* pkt){$/;"	f	class:PPLinkManger	signature:(pkt::res_JsonDate* pkt)
PassportSession	OPTDServer.h	/^class PassportSession;$/;"	v
PreLoggingUser::AsyncInsertHero	worker/PreLoggingUser.cpp	/^void PreLoggingUser::AsyncInsertHero(LoggedUserPtr user,std::function<void(bool ret)>doResult)$/;"	f	class:PreLoggingUser	signature:(LoggedUserPtr user,std::function<void(bool ret)>doResult)
PreLoggingUser::AsyncInsertItemStore	worker/PreLoggingUser.cpp	/^void PreLoggingUser::AsyncInsertItemStore(LoggedUserPtr user,std::function<void(bool ret)>doResult)$/;"	f	class:PreLoggingUser	signature:(LoggedUserPtr user,std::function<void(bool ret)>doResult)
PreLoggingUser::AsyncInsertLevels	worker/PreLoggingUser.cpp	/^void PreLoggingUser::AsyncInsertLevels(LoggedUserPtr user,std::function<void(bool ret)>doResult)$/;"	f	class:PreLoggingUser	signature:(LoggedUserPtr user,std::function<void(bool ret)>doResult)
PreLoggingUser::AsyncInsertMines	worker/PreLoggingUser.cpp	/^void PreLoggingUser::AsyncInsertMines(LoggedUserPtr user,std::function<void(bool ret)>doResult)$/;"	f	class:PreLoggingUser	signature:(LoggedUserPtr user,std::function<void(bool ret)>doResult)
PreLoggingUser::AsyncInsertMissions	worker/PreLoggingUser.cpp	/^void PreLoggingUser::AsyncInsertMissions(LoggedUserPtr user,std::function<void(bool ret)>doResult)$/;"	f	class:PreLoggingUser	signature:(LoggedUserPtr user,std::function<void(bool ret)>doResult)
PreLoggingUser::AsyncInsertMonsterMap	worker/PreLoggingUser.cpp	/^void PreLoggingUser::AsyncInsertMonsterMap(LoggedUserPtr user,std::function<void(bool ret)>doResult)$/;"	f	class:PreLoggingUser	signature:(LoggedUserPtr user,std::function<void(bool ret)>doResult)
PreLoggingUser::AsyncInsertPlatformStore	worker/PreLoggingUser.cpp	/^void PreLoggingUser::AsyncInsertPlatformStore(LoggedUserPtr user,std::function<void(bool ret)>doResult)$/;"	f	class:PreLoggingUser	signature:(LoggedUserPtr user,std::function<void(bool ret)>doResult)
PreLoggingUser::AsyncInsertTechUpgrade	worker/PreLoggingUser.cpp	/^void  PreLoggingUser::AsyncInsertTechUpgrade(LoggedUserPtr user,std::function<void(bool ret)>doResult)$/;"	f	class:PreLoggingUser	signature:(LoggedUserPtr user,std::function<void(bool ret)>doResult)
PreLoggingUser::AsyncInsertTowerUpgrade	worker/PreLoggingUser.cpp	/^void PreLoggingUser::AsyncInsertTowerUpgrade(LoggedUserPtr user,std::function<void(bool ret)>doResult)$/;"	f	class:PreLoggingUser	signature:(LoggedUserPtr user,std::function<void(bool ret)>doResult)
PreLoggingUser::AsyncInsertbaseinfo	worker/PreLoggingUser.cpp	/^void PreLoggingUser::AsyncInsertbaseinfo(LoggedUserPtr user,std::function<void(bool ret)>doResult)$/;"	f	class:PreLoggingUser	signature:(LoggedUserPtr user,std::function<void(bool ret)>doResult)
PreLoggingUser::DbOperFailHandl	worker/PreLoggingUser.cpp	/^void PreLoggingUser::DbOperFailHandl()$/;"	f	class:PreLoggingUser	signature:()
PreLoggingUser::_AsyncCalculateIntrusion	worker/PreLoggingUser.cpp	/^void 	PreLoggingUser::_AsyncCalculateIntrusion(LoggedUserPtr user,std::function<void(bool ret)> doResult)$/;"	f	class:PreLoggingUser	signature:(LoggedUserPtr user,std::function<void(bool ret)> doResult)
PreLoggingUser::_AsyncCalculateMines	worker/PreLoggingUser.cpp	/^void 	PreLoggingUser::_AsyncCalculateMines(LoggedUserPtr user,std::function<void(bool ret)> doResult)$/;"	f	class:PreLoggingUser	signature:(LoggedUserPtr user,std::function<void(bool ret)> doResult)
PreLoggingUser::_HandlAsyncCreateUser	worker/PreLoggingUser.cpp	/^void PreLoggingUser::_HandlAsyncCreateUser(bool ret,LoggedUserPtr user,AsyncTaskPtr createUserTask)$/;"	f	class:PreLoggingUser	signature:(bool ret,LoggedUserPtr user,AsyncTaskPtr createUserTask)
PreLoggingUser::_HandlAsyncLoadForceGuide	worker/PreLoggingUser.cpp	/^void PreLoggingUser::_HandlAsyncLoadForceGuide(PreparedQueryResult result,LoggedUserPtr user,AsyncTaskPtr task)$/;"	f	class:PreLoggingUser	signature:(PreparedQueryResult result,LoggedUserPtr user,AsyncTaskPtr task)
PreLoggingUser::_HandlAsyncLoadItemStore	worker/PreLoggingUser.cpp	/^void PreLoggingUser::_HandlAsyncLoadItemStore(PreparedQueryResult result,LoggedUserPtr user,AsyncTaskPtr task)$/;"	f	class:PreLoggingUser	signature:(PreparedQueryResult result,LoggedUserPtr user,AsyncTaskPtr task)
PreLoggingUser::_HandlAsyncLoadLevelGroup	worker/PreLoggingUser.cpp	/^void PreLoggingUser::_HandlAsyncLoadLevelGroup(PreparedQueryResult result,LoggedUserPtr user,AsyncTaskPtr task)$/;"	f	class:PreLoggingUser	signature:(PreparedQueryResult result,LoggedUserPtr user,AsyncTaskPtr task)
PreLoggingUser::_HandlAsyncLoadLevels	worker/PreLoggingUser.cpp	/^void PreLoggingUser::_HandlAsyncLoadLevels(PreparedQueryResult result,LoggedUserPtr user,AsyncTaskPtr task)$/;"	f	class:PreLoggingUser	signature:(PreparedQueryResult result,LoggedUserPtr user,AsyncTaskPtr task)
PreLoggingUser::_HandlAsyncLoadMines	worker/PreLoggingUser.cpp	/^void PreLoggingUser::_HandlAsyncLoadMines(PreparedQueryResult result,LoggedUserPtr user,AsyncTaskPtr task)$/;"	f	class:PreLoggingUser	signature:(PreparedQueryResult result,LoggedUserPtr user,AsyncTaskPtr task)
PreLoggingUser::_HandlAsyncLoadMissions	worker/PreLoggingUser.cpp	/^void PreLoggingUser::_HandlAsyncLoadMissions(PreparedQueryResult result,LoggedUserPtr user,AsyncTaskPtr task)$/;"	f	class:PreLoggingUser	signature:(PreparedQueryResult result,LoggedUserPtr user,AsyncTaskPtr task)
PreLoggingUser::_HandlAsyncLoadMonsterMap	worker/PreLoggingUser.cpp	/^void PreLoggingUser::_HandlAsyncLoadMonsterMap(PreparedQueryResult result,LoggedUserPtr user,AsyncTaskPtr task)$/;"	f	class:PreLoggingUser	signature:(PreparedQueryResult result,LoggedUserPtr user,AsyncTaskPtr task)
PreLoggingUser::_HandlAsyncLoadPlatformStore	worker/PreLoggingUser.cpp	/^void PreLoggingUser::_HandlAsyncLoadPlatformStore(PreparedQueryResult result,LoggedUserPtr user,AsyncTaskPtr task)$/;"	f	class:PreLoggingUser	signature:(PreparedQueryResult result,LoggedUserPtr user,AsyncTaskPtr task)
PreLoggingUser::_HandlAsyncLoadTechUpgrade	worker/PreLoggingUser.cpp	/^void PreLoggingUser::_HandlAsyncLoadTechUpgrade(PreparedQueryResult result,LoggedUserPtr user,AsyncTaskPtr task)$/;"	f	class:PreLoggingUser	signature:(PreparedQueryResult result,LoggedUserPtr user,AsyncTaskPtr task)
PreLoggingUser::_HandlAsyncLoadTowerUpgrade	worker/PreLoggingUser.cpp	/^void PreLoggingUser::_HandlAsyncLoadTowerUpgrade(PreparedQueryResult result,LoggedUserPtr user,AsyncTaskPtr task)$/;"	f	class:PreLoggingUser	signature:(PreparedQueryResult result,LoggedUserPtr user,AsyncTaskPtr task)
PreLoggingUser::_HandlGetBalance	worker/PreLoggingUser.cpp	/^void PreLoggingUser::_HandlGetBalance(vn::s32 result,std::string& context,vn::RefCountedPtr<pkt::req_login_PPID> 	pktPtr)$/;"	f	class:PreLoggingUser	signature:(vn::s32 result,std::string& context,vn::RefCountedPtr<pkt::req_login_PPID> pktPtr)
PreLoggingUser::_HandlSignIn	worker/PreLoggingUser.cpp	/^void	PreLoggingUser::_HandlSignIn(const std::string &strUUId,vn::s32 diamond)$/;"	f	class:PreLoggingUser	signature:(const std::string &strUUId,vn::s32 diamond)
PreLoggingUser::_HandlTaskFinish	worker/PreLoggingUser.cpp	/^void PreLoggingUser::_HandlTaskFinish(AsyncTaskPtr task,LoggedUserPtr user)$/;"	f	class:PreLoggingUser	signature:(AsyncTaskPtr task,LoggedUserPtr user)
PreLoggingUser::_HandlmineTask	worker/PreLoggingUser.cpp	/^void	PreLoggingUser::_HandlmineTask(AsyncTaskPtr mineTask,std::function<void(bool ret)> doResult)$/;"	f	class:PreLoggingUser	signature:(AsyncTaskPtr mineTask,std::function<void(bool ret)> doResult)
PreLoggingUser::_closed	worker/PreLoggingUser.cpp	/^void PreLoggingUser::_closed() {$/;"	f	class:PreLoggingUser	signature:()
PreLoggingUser::_updateInitial	worker/PreLoggingUser.cpp	/^void PreLoggingUser::_updateInitial(f32 deltaTime) {$/;"	f	class:PreLoggingUser	signature:(f32 deltaTime)
PreLoggingUser::createRequest	worker/PreLoggingUser.cpp	/^PacketPtr PreLoggingUser::createRequest(u32 pid) {$/;"	f	class:PreLoggingUser	signature:(u32 pid)
PreLoggingUser::update	worker/PreLoggingUser.cpp	/^void PreLoggingUser::update(f32 deltaTime) {$/;"	f	class:PreLoggingUser	signature:(f32 deltaTime)
PreLoggingUser::~PreLoggingUser	worker/PreLoggingUser.cpp	/^PreLoggingUser::~PreLoggingUser() {$/;"	f	class:PreLoggingUser	signature:()
QQ_APPID	Common.h	/^const static std::string QQ_APPID = "1104792347";$/;"	v
QQ_APPKEY	Common.h	/^const static std::string QQ_APPKEY = "mf0h1q7xGBroD6US";$/;"	v
QQ_APPKEY_PAY	Common.h	/^const static std::string QQ_APPKEY_PAY ="BFdn8b3GzKWmfOh05fCc5eN94Mx0rdoj";\/\/"mf0h1q7xGBroD6US" ;$/;"	v
RedeemPacketPtr	RedeemPacket.h	/^typedef RefCountedPtr<RedeemPacket> RedeemPacketPtr;$/;"	t
RefCounted	Log/DC_DataBase_EventLog.h	/^struct DC_DataBase_EventLog: RefCounted {$/;"	s
RefCounted	RedeemPacket.h	/^struct RedeemPacket : RefCounted {$/;"	s
RefCounted::Asyncsave	Log/DC_DataBase_EventLog.h	/^    virtual void Asyncsave(AsyncObjectPtr obj,std::function<void(bool ret)>)=0;$/;"	p	struct:RefCounted	access:public	signature:(AsyncObjectPtr obj,std::function<void(bool ret)>)
RefCounted::_lock	RedeemPacket.h	/^    SpinLock _lock;$/;"	m	struct:RefCounted	access:public
RefCounted::_valid	RedeemPacket.h	/^    bool _valid = true;$/;"	m	struct:RefCounted	access:public
RefCounted::category	RedeemPacket.h	/^    u32 category = 0;$/;"	m	struct:RefCounted	access:public
RefCounted::codeId	RedeemPacket.h	/^    u32 codeId = 0;$/;"	m	struct:RefCounted	access:public
RefCounted::diamonds	RedeemPacket.h	/^    u32 diamonds = 0;$/;"	m	struct:RefCounted	access:public
RefCounted::money	RedeemPacket.h	/^    u32 money = 0;$/;"	m	struct:RefCounted	access:public
RefCounted::type	Log/DC_DataBase_EventLog.h	/^    virtual DC_DataBase_EventLog_Type type() const = 0;$/;"	p	struct:RefCounted	access:public
SEL_BASEINFO	database/PassPortDatabaseConnection.h	/^	SEL_BASEINFO,$/;"	e	enum:PassPortDatabaseStatements
SEL_BASEINFOFORCEGUIDE	database/PassPortDatabaseConnection.h	/^	SEL_BASEINFOFORCEGUIDE,$/;"	e	enum:PassPortDatabaseStatements
SEL_BASEINFOHERO	database/PassPortDatabaseConnection.h	/^	SEL_BASEINFOHERO,$/;"	e	enum:PassPortDatabaseStatements
SEL_BASEINFOITEMSTORE	database/PassPortDatabaseConnection.h	/^	SEL_BASEINFOITEMSTORE,$/;"	e	enum:PassPortDatabaseStatements
SEL_BASEINFOLEVELGROUPS	database/PassPortDatabaseConnection.h	/^	SEL_BASEINFOLEVELGROUPS,$/;"	e	enum:PassPortDatabaseStatements
SEL_BASEINFOLEVELS	database/PassPortDatabaseConnection.h	/^	SEL_BASEINFOLEVELS,$/;"	e	enum:PassPortDatabaseStatements
SEL_BASEINFOMINES	database/PassPortDatabaseConnection.h	/^	SEL_BASEINFOMINES,$/;"	e	enum:PassPortDatabaseStatements
SEL_BASEINFOMISSION	database/PassPortDatabaseConnection.h	/^	SEL_BASEINFOMISSION,$/;"	e	enum:PassPortDatabaseStatements
SEL_BASEINFOMONSTERMAP	database/PassPortDatabaseConnection.h	/^	SEL_BASEINFOMONSTERMAP,$/;"	e	enum:PassPortDatabaseStatements
SEL_BASEINFOTECHUPGRADE	database/PassPortDatabaseConnection.h	/^	SEL_BASEINFOTECHUPGRADE,$/;"	e	enum:PassPortDatabaseStatements
SEL_BASEINFOTOWERUPGRADE	database/PassPortDatabaseConnection.h	/^	SEL_BASEINFOTOWERUPGRADE,$/;"	e	enum:PassPortDatabaseStatements
SEL_BASEINFPLATFORMSTORE	database/PassPortDatabaseConnection.h	/^	SEL_BASEINFPLATFORMSTORE,$/;"	e	enum:PassPortDatabaseStatements
SEL_HERORUNES	database/PassPortDatabaseConnection.h	/^	SEL_HERORUNES,$/;"	e	enum:PassPortDatabaseStatements
SEL_LEVELGROUPSLEVELS	database/PassPortDatabaseConnection.h	/^	SEL_LEVELGROUPSLEVELS,$/;"	e	enum:PassPortDatabaseStatements
SINA_APPID	Common.h	/^const static std::string SINA_APPID = "4236082600";$/;"	v
SINA_APPSECRET	Common.h	/^const static std::string SINA_APPSECRET = "53f33fba8cffbb14957bbbdc14a23cf2";$/;"	v
SINA_SIGNKEY	Common.h	/^const static std::string SINA_SIGNKEY = "ba3c2b2f0c290af830ad3b2a1ca19a5d";$/;"	v
SOGOU_APPKEY	Common.h	/^const static std::string SOGOU_APPKEY =$/;"	v
SOGOU_APPSECRET	Common.h	/^const static std::string SOGOU_APPSECRET =$/;"	v
SOGOU_GID	Common.h	/^const static std::string SOGOU_GID = "1170";$/;"	v
SOGOU_PAYKEY	Common.h	/^const static std::string SOGOU_PAYKEY = "{0006C303-1EB4-45F7-A489-F0A3CF0C1EBB}";$/;"	v
SRC_DB_PASSPORTDATABASECONNECTION_H_	database/PassPortDatabaseConnection.h	9;"	d
SRC_OPTDSVR_PPLINK_PPLINKMANGER_H_	PPLink/PPLinkManger.h	9;"	d
SRC_OPTDSVR_PPLINK_PPSESSION_H_	PPLink/PPSession.h	9;"	d
SRC_OPTDSVR_WORLDMANAGER_H_	WorldManager.h	9;"	d
SRC_PASSPORTSVR_COMMON_H_	Common.h	9;"	d
SendGetBalance	PPLink/PPLinkManger.cpp	/^int PPLinkManger::SendGetBalance(AsyncObjectPtr objPtr,CallbackFn&& callbackFn, char* openId,const char* appId )$/;"	f	class:PPLinkManger	signature:(AsyncObjectPtr objPtr,CallbackFn&& callbackFn, char* openId,const char* appId )
SendPay	PPLink/PPLinkManger.cpp	/^int PPLinkManger::SendPay(AsyncObjectPtr objPtr,CallbackFn&& callbackFn, char* openId,vn::s32 diamondCount,const char* appId )$/;"	f	class:PPLinkManger	signature:(AsyncObjectPtr objPtr,CallbackFn&& callbackFn, char* openId,vn::s32 diamondCount,const char* appId )
SendPresent	PPLink/PPLinkManger.cpp	/^int PPLinkManger::SendPresent(AsyncObjectPtr objPtr,CallbackFn&& callbackFn, char* openId,vn::s32 diamondCount,const char* appId)$/;"	f	class:PPLinkManger	signature:(AsyncObjectPtr objPtr,CallbackFn&& callbackFn, char* openId,vn::s32 diamondCount,const char* appId)
SendVerifyReq	PPLink/PPLinkManger.cpp	/^int PPLinkManger::SendVerifyReq(AsyncObjectPtr objPtr,CallbackFn&& callbackFn, vn::u64 timestamp,$/;"	f	class:PPLinkManger	signature:(AsyncObjectPtr objPtr,CallbackFn&& callbackFn, vn::u64 timestamp, const char* appId, const char* sig, char* openId, char* accessToken)
SendVerifyReq	PPLink/PPLinkManger.cpp	/^int PPLinkManger::SendVerifyReq(CallbackFn&& callbackFn, vn::u64 timestamp,$/;"	f	class:PPLinkManger	signature:(CallbackFn&& callbackFn, vn::u64 timestamp, const char* appId, const char* sig, char* openId, char* accessToken)
SendVerifyReq	PPLink/PPLinkManger.cpp	/^int PPLinkManger::SendVerifyReq(vn::RefCountedPtr<Session> session,CallbackFn&& callbackFn, vn::u64 timestamp,$/;"	f	class:PPLinkManger	signature:(vn::RefCountedPtr<Session> session,CallbackFn&& callbackFn, vn::u64 timestamp, const char* appId, const char* sig, char* openId, char* accessToken)
ServerData::load	ServerData.cpp	/^void ServerData::load(vn::DataStream &s) {$/;"	f	class:ServerData	signature:(vn::DataStream &s)
ServerData::load	ServerData.cpp	/^void ServerData::load(vn::Variable_object &obj) {$/;"	f	class:ServerData	signature:(vn::Variable_object &obj)
ServerData::save	ServerData.cpp	/^void ServerData::save(vn::DataStream &s) const {$/;"	f	class:ServerData	signature:(vn::DataStream &s) const
ServerData::save	ServerData.cpp	/^void ServerData::save(vn::Variable_object &obj) const {$/;"	f	class:ServerData	signature:(vn::Variable_object &obj) const
SetDiamond	worker/BSPlayerBaseInfo.cpp	/^void BSPlayerBaseInfo::SetDiamond(s32 diamond)$/;"	f	class:BSPlayerBaseInfo	signature:(s32 diamond)
StrSplit	worker/BSTool.cpp	/^void StrSplit(const std::string& src, const std::string& separator, std::vector<std::string>& dest)$/;"	f	signature:(const std::string& src, const std::string& separator, std::vector<std::string>& dest)
StrSplit	worker/BSTool.h	/^void StrSplit(const std::string& src, const std::string& separator, std::vector<std::string>& dest);$/;"	p	signature:(const std::string& src, const std::string& separator, std::vector<std::string>& dest)
SyncOpenHero	worker/BSHero.cpp	/^bool  BSHero::SyncOpenHero()$/;"	f	class:BSHero	signature:()
SyncOpenRune	worker/BSHero.cpp	/^bool BSHero::SyncOpenRune(std::vector<Rune> &runeList, u32 towerClass, u32 lv)$/;"	f	class:BSHero	signature:(std::vector<Rune> &runeList, u32 towerClass, u32 lv)
SyncUpdateLevel	manager/DC_DataBase.cpp	/^bool DC_DataBase::SyncUpdateLevel(std::string &strUUId,u32 levelId,bool intrusion,u32 intrusiontimes,u32 starNum,s32 score,bool shovel,bool watch)$/;"	f	class:DC_DataBase	signature:(std::string &strUUId,u32 levelId,bool intrusion,u32 intrusiontimes,u32 starNum,s32 score,bool shovel,bool watch)
SyncUpdateLevelGroup_Levels	manager/DC_DataBase.cpp	/^bool DC_DataBase::SyncUpdateLevelGroup_Levels(std::string &strUUId,u32 groupId,u32 levelId,std::string &heros,std::string &platforms, bool resolved,bool shovel ,u32 stars,u8 passed,bool watch)$/;"	f	class:DC_DataBase	signature:(std::string &strUUId,u32 groupId,u32 levelId,std::string &heros,std::string &platforms, bool resolved,bool shovel ,u32 stars,u8 passed,bool watch)
SyncUpdateLevelGroups	manager/DC_DataBase.cpp	/^bool DC_DataBase::SyncUpdateLevelGroups(std::string &strUUId,u32 groupId,bool pressed,u32 intrusionCount,u32 rewardsCount)$/;"	f	class:DC_DataBase	signature:(std::string &strUUId,u32 groupId,bool pressed,u32 intrusionCount,u32 rewardsCount)
Sync_intrusion	worker/BSIntrusion.cpp	/^bool BSIntrusion::Sync_intrusion()$/;"	f	class:BSIntrusion	signature:()
Syncintrude	worker/BSLevel.cpp	/^bool BSLevel::Syncintrude(u32 levelId)$/;"	f	class:BSLevel	signature:(u32 levelId)
Syncintrude	worker/BSLevelGroup.cpp	/^bool BSLevelGroupManager::Syncintrude(u32 groupId)$/;"	f	class:BSLevelGroupManager	signature:(u32 groupId)
T1	worker/BSTool.h	/^template <typename T1,typename T2>$/;"	v
TBT_APPID	Common.h	/^const static std::string TBT_APPID = "150973";$/;"	v
TBT_APPKEY	Common.h	/^const static std::string TBT_APPKEY = "9SH3rC5mby#VLivF9Hf3r5Ombo#ViXvF";$/;"	v
TEST_PbuKey	Common.h	/^const static std::string TEST_PbuKey = "-----BEGIN PUBLIC KEY-----\\r\\n"$/;"	v
Table_Registration	table/Table_Registration.cpp	/^Table_Registration::Table_Registration()$/;"	f	class:tbl::Table_Registration	signature:()
Table_award	table/Table_award.cpp	/^Table_award::Table_award()$/;"	f	class:tbl::Table_award	signature:()
Table_buff	table/Table_buff.cpp	/^Table_buff::Table_buff()$/;"	f	class:tbl::Table_buff	signature:()
Table_cage	table/Table_cage.cpp	/^Table_cage::Table_cage()$/;"	f	class:tbl::Table_cage	signature:()
Table_coupon	table/Table_coupon.cpp	/^Table_coupon::Table_coupon()$/;"	f	class:tbl::Table_coupon	signature:()
Table_dialog	table/Table_dialog.cpp	/^Table_dialog::Table_dialog()$/;"	f	class:tbl::Table_dialog	signature:()
Table_diamond_shop	table/Table_diamond_shop.cpp	/^Table_diamond_shop::Table_diamond_shop()$/;"	f	class:tbl::Table_diamond_shop	signature:()
Table_force_guide	table/Table_force_guide.cpp	/^Table_force_guide::Table_force_guide()$/;"	f	class:tbl::Table_force_guide	signature:()
Table_gold_mine	table/Table_gold_mine.cpp	/^Table_gold_mine::Table_gold_mine()$/;"	f	class:tbl::Table_gold_mine	signature:()
Table_herorune	table/Table_herorune.cpp	/^Table_herorune::Table_herorune()$/;"	f	class:tbl::Table_herorune	signature:()
Table_hint	table/Table_hint.cpp	/^Table_hint::Table_hint()$/;"	f	class:tbl::Table_hint	signature:()
Table_item_store	table/Table_item_store.cpp	/^Table_item_store::Table_item_store()$/;"	f	class:tbl::Table_item_store	signature:()
Table_level	table/Table_level.cpp	/^Table_level::Table_level()$/;"	f	class:tbl::Table_level	signature:()
Table_levelclass	table/Table_levelclass.cpp	/^Table_levelclass::Table_levelclass()$/;"	f	class:tbl::Table_levelclass	signature:()
Table_mission	table/Table_mission.cpp	/^Table_mission::Table_mission()$/;"	f	class:tbl::Table_mission	signature:()
Table_monster	table/Table_monster.cpp	/^Table_monster::Table_monster()$/;"	f	class:tbl::Table_monster	signature:()
Table_object	table/Table_object.cpp	/^Table_object::Table_object()$/;"	f	class:tbl::Table_object	signature:()
Table_platform	table/Table_platform.cpp	/^Table_platform::Table_platform()$/;"	f	class:tbl::Table_platform	signature:()
Table_progress	table/Table_progress.cpp	/^Table_progress::Table_progress()$/;"	f	class:tbl::Table_progress	signature:()
Table_spell	table/Table_spell.cpp	/^Table_spell::Table_spell()$/;"	f	class:tbl::Table_spell	signature:()
Table_sub_wave	table/Table_sub_wave.cpp	/^Table_sub_wave::Table_sub_wave()$/;"	f	class:tbl::Table_sub_wave	signature:()
Table_tech	table/Table_tech.cpp	/^Table_tech::Table_tech()$/;"	f	class:tbl::Table_tech	signature:()
Table_tower	table/Table_tower.cpp	/^Table_tower::Table_tower()$/;"	f	class:tbl::Table_tower	signature:()
Table_training	table/Table_training.cpp	/^Table_training::Table_training()$/;"	f	class:tbl::Table_training	signature:()
Table_wave	table/Table_wave.cpp	/^Table_wave::Table_wave()$/;"	f	class:tbl::Table_wave	signature:()
Time	DateTime.h	/^    Time() : time(0) {}$/;"	f	struct:Time	access:public
Time	DateTime.h	/^struct DateTime : Time, Date {$/;"	v	typeref:struct:DateTime
Time	DateTime.h	/^struct Time {$/;"	s
Time::Time	DateTime.h	/^    Time() : time(0) {}$/;"	f	struct:Time	access:public
Time::__anon3::__anon4::hour	DateTime.h	/^            u32 hour : 8;$/;"	m	struct:Time::__anon3::__anon4	access:public
Time::__anon3::__anon4::minute	DateTime.h	/^            u32 minute : 8;$/;"	m	struct:Time::__anon3::__anon4	access:public
Time::__anon3::__anon4::second	DateTime.h	/^            u32 second : 8;$/;"	m	struct:Time::__anon3::__anon4	access:public
Time::__anon3::time	DateTime.h	/^        u32 time;$/;"	m	union:Time::__anon3	access:public
Time::convertFromString	DateTime.cpp	/^bool Time::convertFromString(const str8 &s) {$/;"	f	class:Time	signature:(const str8 &s)
Time::convertFromString	DateTime.h	/^    bool convertFromString(const str8 &s);$/;"	p	struct:Time	access:public	signature:(const str8 &s)
Time::convertToString	DateTime.cpp	/^str8 Time::convertToString() const {$/;"	f	class:Time	signature:() const
Time::convertToString	DateTime.h	/^    str8 convertToString() const;$/;"	p	struct:Time	access:public
Time::now	DateTime.cpp	/^Time Time::now() {$/;"	f	class:Time	signature:()
Time::now	DateTime.h	/^    static Time now();$/;"	p	struct:Time	access:public
Time::operator	DateTime.h	/^    bool operator !=(const Time &) const;$/;"	p	struct:Time	access:public	signature:(const Time &) const
Time::operator	DateTime.h	/^    bool operator <(const Time &) const;$/;"	p	struct:Time	access:public	signature:(const Time &) const
Time::operator	DateTime.h	/^    bool operator ==(const Time &) const;$/;"	p	struct:Time	access:public	signature:(const Time &) const
Time::operator !=	DateTime.cpp	/^bool Time::operator !=(const Time &t) const {$/;"	f	class:Time	signature:(const Time &t) const
Time::operator <	DateTime.cpp	/^bool Time::operator <(const Time &t) const {$/;"	f	class:Time	signature:(const Time &t) const
Time::operator ==	DateTime.cpp	/^bool Time::operator ==(const Time &t) const {$/;"	f	class:Time	signature:(const Time &t) const
Type	manager/BSCouponManager.h	/^    enum Type {$/;"	g	struct:AllocatedObject	access:public
UC_ApiKey	Common.h	/^const static std::string UC_ApiKey = "c52ab699f6736197fd343693b4240817";$/;"	v
UC_CPID	Common.h	/^const static std::string UC_CPID = "57362";$/;"	v
UC_GameID	Common.h	/^const static std::string UC_GameID = "576587";$/;"	v
UP_ADDDIAMOND	database/PassPortDatabaseConnection.h	/^	UP_ADDDIAMOND,$/;"	e	enum:PassPortDatabaseStatements
UP_ADDMONEY	database/PassPortDatabaseConnection.h	/^	UP_ADDMONEY,$/;"	e	enum:PassPortDatabaseStatements
UP_BASEINFOFORCEGUIDE	database/PassPortDatabaseConnection.h	/^	UP_BASEINFOFORCEGUIDE,$/;"	e	enum:PassPortDatabaseStatements
UP_BASEINFOITEMSTORE	database/PassPortDatabaseConnection.h	/^	UP_BASEINFOITEMSTORE,$/;"	e	enum:PassPortDatabaseStatements
UP_BASEINFOLEVELGROUPS	database/PassPortDatabaseConnection.h	/^	UP_BASEINFOLEVELGROUPS,$/;"	e	enum:PassPortDatabaseStatements
UP_BASEINFOLEVELS	database/PassPortDatabaseConnection.h	/^	UP_BASEINFOLEVELS,$/;"	e	enum:PassPortDatabaseStatements
UP_BASEINFOMINES	database/PassPortDatabaseConnection.h	/^	UP_BASEINFOMINES,$/;"	e	enum:PassPortDatabaseStatements
UP_BASEINFOMISSION	database/PassPortDatabaseConnection.h	/^	UP_BASEINFOMISSION,$/;"	e	enum:PassPortDatabaseStatements
UP_BASEINFOMONSTERMAP	database/PassPortDatabaseConnection.h	/^	UP_BASEINFOMONSTERMAP,$/;"	e	enum:PassPortDatabaseStatements
UP_BASEINFOTECHUPGRADE	database/PassPortDatabaseConnection.h	/^	UP_BASEINFOTECHUPGRADE,$/;"	e	enum:PassPortDatabaseStatements
UP_BASEINFOTOWERUPGRADE	database/PassPortDatabaseConnection.h	/^	UP_BASEINFOTOWERUPGRADE,$/;"	e	enum:PassPortDatabaseStatements
UP_BASEINFO_ALL	database/PassPortDatabaseConnection.h	/^	UP_BASEINFO_ALL,$/;"	e	enum:PassPortDatabaseStatements
UP_BASEINFO_BASEINFO	database/PassPortDatabaseConnection.h	/^	UP_BASEINFO_BASEINFO,$/;"	e	enum:PassPortDatabaseStatements
UP_BASEINFO_COUPON	database/PassPortDatabaseConnection.h	/^	UP_BASEINFO_COUPON,$/;"	e	enum:PassPortDatabaseStatements
UP_BASEINFO_HERO	database/PassPortDatabaseConnection.h	/^	UP_BASEINFO_HERO,$/;"	e	enum:PassPortDatabaseStatements
UP_BASEINFO_INTRUSION	database/PassPortDatabaseConnection.h	/^	UP_BASEINFO_INTRUSION,$/;"	e	enum:PassPortDatabaseStatements
UP_BASEINFO_LOTTERY	database/PassPortDatabaseConnection.h	/^	UP_BASEINFO_LOTTERY,$/;"	e	enum:PassPortDatabaseStatements
UP_BASEINFO_REGISTRATION	database/PassPortDatabaseConnection.h	/^	UP_BASEINFO_REGISTRATION,$/;"	e	enum:PassPortDatabaseStatements
UP_BASEINFPLATFORMSTORE	database/PassPortDatabaseConnection.h	/^	UP_BASEINFPLATFORMSTORE,$/;"	e	enum:PassPortDatabaseStatements
UP_CLIP	database/PassPortDatabaseConnection.h	/^	UP_CLIP,$/;"	e	enum:PassPortDatabaseStatements
UP_HEROSTATUS	database/PassPortDatabaseConnection.h	/^	UP_HEROSTATUS,$/;"	e	enum:PassPortDatabaseStatements
UP_INTRUSION	database/PassPortDatabaseConnection.h	/^	UP_INTRUSION,$/;"	e	enum:PassPortDatabaseStatements
UP_LEVELGROUPSLEVELS	database/PassPortDatabaseConnection.h	/^	UP_LEVELGROUPSLEVELS,$/;"	e	enum:PassPortDatabaseStatements
UP_LEVELPASSREWARD	database/PassPortDatabaseConnection.h	/^	UP_LEVELPASSREWARD,$/;"	e	enum:PassPortDatabaseStatements
UP_LOGIN	database/PassPortDatabaseConnection.h	/^	UP_LOGIN,$/;"	e	enum:PassPortDatabaseStatements
UP_RUNESTATUS	database/PassPortDatabaseConnection.h	/^	UP_RUNESTATUS,$/;"	e	enum:PassPortDatabaseStatements
UP_TIMESTAMP	database/PassPortDatabaseConnection.h	/^	UP_TIMESTAMP,$/;"	e	enum:PassPortDatabaseStatements
UP_UPGRADEHERO	database/PassPortDatabaseConnection.h	/^	UP_UPGRADEHERO,$/;"	e	enum:PassPortDatabaseStatements
UUID	worker/UUID.cpp	/^UUID::UUID()$/;"	f	class:UUID	signature:()
UUID	worker/UUID.cpp	/^UUID::UUID(const UUID &other)$/;"	f	class:UUID	signature:(const UUID &other)
UUID	worker/UUID.cpp	/^UUID::UUID(const str8 &s)$/;"	f	class:UUID	signature:(const str8 &s)
UUID	worker/UUID.cpp	/^UUID::UUID(u64 low, u64 high)$/;"	f	class:UUID	signature:(u64 low, u64 high)
UUID::UUID	worker/UUID.cpp	/^UUID::UUID()$/;"	f	class:UUID	signature:()
UUID::UUID	worker/UUID.cpp	/^UUID::UUID(const UUID &other)$/;"	f	class:UUID	signature:(const UUID &other)
UUID::UUID	worker/UUID.cpp	/^UUID::UUID(const str8 &s)$/;"	f	class:UUID	signature:(const str8 &s)
UUID::UUID	worker/UUID.cpp	/^UUID::UUID(u64 low, u64 high)$/;"	f	class:UUID	signature:(u64 low, u64 high)
UUID::clear	worker/UUID.cpp	/^void UUID::clear()$/;"	f	class:UUID	signature:()
UUID::compare	worker/UUID.cpp	/^int UUID::compare(const UUID &other) const {$/;"	f	class:UUID	signature:(const UUID &other) const
UUID::generate	worker/UUID.cpp	/^void UUID::generate() {$/;"	f	class:UUID	signature:()
UUID::null	worker/UUID.cpp	/^bool UUID::null() const {$/;"	f	class:UUID	signature:() const
UUID::to_string	worker/UUID.cpp	/^str8 UUID::to_string() const$/;"	f	class:UUID	signature:() const
UpdateClip	manager/DC_DataBase.cpp	/^bool DC_DataBase::UpdateClip(std::string &strUUId,s32 clip0,s32 clip1,s32 clip2)$/;"	f	class:DC_DataBase	signature:(std::string &strUUId,s32 clip0,s32 clip1,s32 clip2)
UpdateDiamond	manager/DC_DataBase.cpp	/^bool DC_DataBase::UpdateDiamond(std::string &strUUId,s32 diamond)$/;"	f	class:DC_DataBase	signature:(std::string &strUUId,s32 diamond)
UpdateHeroStatus	manager/DC_DataBase.cpp	/^bool DC_DataBase::UpdateHeroStatus(u32 status,LoggedUserPtr user,u32 id)$/;"	f	class:DC_DataBase	signature:(u32 status,LoggedUserPtr user,u32 id)
UpdateItemStore	manager/DC_DataBase.cpp	/^bool DC_DataBase::UpdateItemStore(std::string &strUUId,u32 itemId,u32 itemNum)$/;"	f	class:DC_DataBase	signature:(std::string &strUUId,u32 itemId,u32 itemNum)
UpdateMoney	manager/DC_DataBase.cpp	/^bool DC_DataBase::UpdateMoney(std::string &strUUId,s32 money)$/;"	f	class:DC_DataBase	signature:(std::string &strUUId,s32 money)
UpdateRunesStatus	manager/DC_DataBase.cpp	/^bool DC_DataBase::UpdateRunesStatus(u32 runId,s32 runstatus,std::string &heroId)$/;"	f	class:DC_DataBase	signature:(u32 runId,s32 runstatus,std::string &heroId)
UserEventLogPtr	Log/DC_DataBase_EventLog.h	/^typedef vn::RefCountedPtr<DC_DataBase_EventLog_User>  UserEventLogPtr;$/;"	t
VIVO_APPID	Common.h	/^const static std::string VIVO_APPID = "737c91c6dd23adf886aa81fbb9036da1";$/;"	v
VIVO_CPID	Common.h	/^const static std::string VIVO_CPID = "20150825180134399960";$/;"	v
VIVO_CPKEY	Common.h	/^const static std::string VIVO_CPKEY = "be41d5ba76c78e935990b5ed67f3e66e";$/;"	v
VN_IMPL_PACKET_REQUEST2	PPLink/PPSession.cpp	/^VN_IMPL_PACKET_REQUEST2(PPSession, pkt,res_Heart) {$/;"	f	signature:(PPSession, pkt,res_Heart)
VN_IMPL_PACKET_REQUEST2	PPLink/PPSession.cpp	/^VN_IMPL_PACKET_REQUEST2(PPSession,pkt, res_JsonDate) {$/;"	f	signature:(PPSession,pkt, res_JsonDate)
VN_IMPL_PACKET_REQUEST2	worker/LoggedUser.cpp	/^VN_IMPL_PACKET_REQUEST2(LoggedUser, pkt,req_buyHeroWithCoupon)$/;"	f	signature:(LoggedUser, pkt,req_buyHeroWithCoupon)
VN_IMPL_PACKET_REQUEST2	worker/LoggedUser.cpp	/^VN_IMPL_PACKET_REQUEST2(LoggedUser, pkt,req_disableFG)$/;"	f	signature:(LoggedUser, pkt,req_disableFG)
VN_IMPL_PACKET_REQUEST2	worker/LoggedUser.cpp	/^VN_IMPL_PACKET_REQUEST2(LoggedUser, pkt,req_disableFG_AddItems)$/;"	f	signature:(LoggedUser, pkt,req_disableFG_AddItems)
VN_IMPL_PACKET_REQUEST2	worker/LoggedUser.cpp	/^VN_IMPL_PACKET_REQUEST2(LoggedUser, pkt,req_getRegistrationReward)$/;"	f	signature:(LoggedUser, pkt,req_getRegistrationReward)
VN_IMPL_PACKET_REQUEST2	worker/LoggedUser.cpp	/^VN_IMPL_PACKET_REQUEST2(LoggedUser, pkt,req_redeemCode)$/;"	f	signature:(LoggedUser, pkt,req_redeemCode)
VN_IMPL_PACKET_REQUEST2	worker/LoggedUser.cpp	/^VN_IMPL_PACKET_REQUEST2(LoggedUser, pkt,req_towerUpgrade)$/;"	f	signature:(LoggedUser, pkt,req_towerUpgrade)
VN_IMPL_PACKET_REQUEST2	worker/LoggedUser.cpp	/^VN_IMPL_PACKET_REQUEST2(LoggedUser, pkt,req_unlockRune)$/;"	f	signature:(LoggedUser, pkt,req_unlockRune)
VN_IMPL_PACKET_REQUEST2	worker/LoggedUser.cpp	/^VN_IMPL_PACKET_REQUEST2(LoggedUser, pkt,req_useItem)$/;"	f	signature:(LoggedUser, pkt,req_useItem)
VN_IMPL_PACKET_REQUEST2	worker/LoggedUser.cpp	/^VN_IMPL_PACKET_REQUEST2(LoggedUser,pkt, req_battleFailed)$/;"	f	signature:(LoggedUser,pkt, req_battleFailed)
VN_IMPL_PACKET_REQUEST2	worker/LoggedUser.cpp	/^VN_IMPL_PACKET_REQUEST2(LoggedUser,pkt, req_battleVictory)$/;"	f	signature:(LoggedUser,pkt, req_battleVictory)
VN_IMPL_PACKET_REQUEST2	worker/LoggedUser.cpp	/^VN_IMPL_PACKET_REQUEST2(LoggedUser,pkt, req_beginBattle)$/;"	f	signature:(LoggedUser,pkt, req_beginBattle)
VN_IMPL_PACKET_REQUEST2	worker/LoggedUser.cpp	/^VN_IMPL_PACKET_REQUEST2(LoggedUser,pkt, req_buyPlatform)$/;"	f	signature:(LoggedUser,pkt, req_buyPlatform)
VN_IMPL_PACKET_REQUEST2	worker/LoggedUser.cpp	/^VN_IMPL_PACKET_REQUEST2(LoggedUser,pkt, req_collectGoldMine)$/;"	f	signature:(LoggedUser,pkt, req_collectGoldMine)
VN_IMPL_PACKET_REQUEST2	worker/LoggedUser.cpp	/^VN_IMPL_PACKET_REQUEST2(LoggedUser,pkt, req_lotteryDraw)$/;"	f	signature:(LoggedUser,pkt, req_lotteryDraw)
VN_IMPL_PACKET_REQUEST2	worker/LoggedUser.cpp	/^VN_IMPL_PACKET_REQUEST2(LoggedUser,pkt, req_meetMonster)$/;"	f	signature:(LoggedUser,pkt, req_meetMonster)
VN_IMPL_PACKET_REQUEST2	worker/LoggedUser.cpp	/^VN_IMPL_PACKET_REQUEST2(LoggedUser,pkt, req_resetGroupLevel)$/;"	f	signature:(LoggedUser,pkt, req_resetGroupLevel)
VN_IMPL_PACKET_REQUEST2	worker/LoggedUser.cpp	/^VN_IMPL_PACKET_REQUEST2(LoggedUser,pkt, req_techUpgrade)$/;"	f	signature:(LoggedUser,pkt, req_techUpgrade)
VN_IMPL_PACKET_REQUEST2	worker/LoggedUser.cpp	/^VN_IMPL_PACKET_REQUEST2(LoggedUser,pkt, req_upgradeHero)$/;"	f	signature:(LoggedUser,pkt, req_upgradeHero)
VN_IMPL_PACKET_REQUEST2	worker/LoggedUser.cpp	/^VN_IMPL_PACKET_REQUEST2(LoggedUser,pkt,req_add_diamond)$/;"	f	signature:(LoggedUser,pkt,req_add_diamond)
VN_IMPL_PACKET_REQUEST2	worker/LoggedUser.cpp	/^VN_IMPL_PACKET_REQUEST2(LoggedUser,pkt,req_add_money)$/;"	f	signature:(LoggedUser,pkt,req_add_money)
VN_IMPL_PACKET_REQUEST2	worker/LoggedUser.cpp	/^VN_IMPL_PACKET_REQUEST2(LoggedUser,pkt,req_announcement)$/;"	f	signature:(LoggedUser,pkt,req_announcement)
VN_IMPL_PACKET_REQUEST2	worker/LoggedUser.cpp	/^VN_IMPL_PACKET_REQUEST2(LoggedUser,pkt,req_buyItem)$/;"	f	signature:(LoggedUser,pkt,req_buyItem)
VN_IMPL_PACKET_REQUEST2	worker/LoggedUser.cpp	/^VN_IMPL_PACKET_REQUEST2(LoggedUser,pkt,req_buyMoney)$/;"	f	signature:(LoggedUser,pkt,req_buyMoney)
VN_IMPL_PACKET_REQUEST2	worker/LoggedUser.cpp	/^VN_IMPL_PACKET_REQUEST2(LoggedUser,pkt,req_getBalance)$/;"	f	signature:(LoggedUser,pkt,req_getBalance)
VN_IMPL_PACKET_REQUEST2	worker/LoggedUser.cpp	/^VN_IMPL_PACKET_REQUEST2(LoggedUser,pkt,req_getMissionReward)$/;"	f	signature:(LoggedUser,pkt,req_getMissionReward)
VN_IMPL_PACKET_REQUEST2	worker/LoggedUser.cpp	/^VN_IMPL_PACKET_REQUEST2(LoggedUser,pkt,req_groupBattleVictory)$/;"	f	signature:(LoggedUser,pkt,req_groupBattleVictory)
VN_IMPL_PACKET_REQUEST2	worker/LoggedUser.cpp	/^VN_IMPL_PACKET_REQUEST2(LoggedUser,pkt,req_pass_level)$/;"	f	signature:(LoggedUser,pkt,req_pass_level)
VN_IMPL_PACKET_REQUEST2	worker/LoggedUser.cpp	/^VN_IMPL_PACKET_REQUEST2(LoggedUser,pkt,req_playerData)$/;"	f	signature:(LoggedUser,pkt,req_playerData)
VN_IMPL_PACKET_REQUEST2	worker/LoggedUser.cpp	/^VN_IMPL_PACKET_REQUEST2(LoggedUser,pkt,req_reset)$/;"	f	signature:(LoggedUser,pkt,req_reset)
VN_IMPL_PACKET_REQUEST2	worker/LoggedUser.cpp	/^VN_IMPL_PACKET_REQUEST2(LoggedUser,pkt,req_rmbShopInfo)$/;"	f	signature:(LoggedUser,pkt,req_rmbShopInfo)
VN_IMPL_PACKET_REQUEST2	worker/LoggedUser.cpp	/^VN_IMPL_PACKET_REQUEST2(LoggedUser,pkt,req_timedData)$/;"	f	signature:(LoggedUser,pkt,req_timedData)
VN_IMPL_PACKET_REQUEST2	worker/LoggedUser.cpp	/^VN_IMPL_PACKET_REQUEST2(LoggedUser,pkt,req_useCoupon)$/;"	f	signature:(LoggedUser,pkt,req_useCoupon)
VN_IMPL_PACKET_REQUEST2	worker/PreLoggingUser.cpp	/^VN_IMPL_PACKET_REQUEST2(PreLoggingUser,pkt,req_login)$/;"	f	signature:(PreLoggingUser,pkt,req_login)
VN_IMPL_PACKET_REQUEST2	worker/PreLoggingUser.cpp	/^VN_IMPL_PACKET_REQUEST2(PreLoggingUser,pkt,req_login_PPID)$/;"	f	signature:(PreLoggingUser,pkt,req_login_PPID)
VN_IMPL_PACKET_REQUEST2	worker/PreLoggingUser.cpp	/^VN_IMPL_PACKET_REQUEST2(PreLoggingUser,pkt,req_version)$/;"	f	signature:(PreLoggingUser,pkt,req_version)
WANDOUJIA_AppKeyID	Common.h	/^const static std::string WANDOUJIA_AppKeyID = "100035224";$/;"	v
WANDOUJIA_PublicKey	Common.h	/^const static std::string WANDOUJIA_PublicKey =$/;"	v
WANDOUJIA_SecretKey	Common.h	/^const static std::string WANDOUJIA_SecretKey =	"60ada924610086651e9e894e42450028";$/;"	v
WX_APPID	Common.h	/^const static std::string WX_APPID = "wxe5d55c7ddfd4a758";$/;"	v
WX_APPKEY	Common.h	/^const static std::string WX_APPKEY = "8b91661c3894ce8ee52045a0c92b773b";$/;"	v
WorkQueue	worker/WorkQueue.cpp	/^WorkQueue::WorkQueue() {$/;"	f	class:WorkQueue	signature:()
WorkQueue::WorkQueue	worker/WorkQueue.cpp	/^WorkQueue::WorkQueue() {$/;"	f	class:WorkQueue	signature:()
WorkQueue::_work	worker/WorkQueue.cpp	/^void WorkQueue::_work() {$/;"	f	class:WorkQueue	signature:()
WorkQueue::attach	worker/WorkQueue.cpp	/^void WorkQueue::attach(WorkerPtr worker) {$/;"	f	class:WorkQueue	signature:(WorkerPtr worker)
WorkQueue::detach	worker/WorkQueue.cpp	/^void WorkQueue::detach(WorkerPtr worker) {$/;"	f	class:WorkQueue	signature:(WorkerPtr worker)
WorkQueue::~WorkQueue	worker/WorkQueue.cpp	/^WorkQueue::~WorkQueue() {$/;"	f	class:WorkQueue	signature:()
WorkQueueManager::fini	manager/WorkQueueManager.cpp	/^void WorkQueueManager::fini() {$/;"	f	class:WorkQueueManager	signature:()
WorkQueueManager::init	manager/WorkQueueManager.cpp	/^void WorkQueueManager::init(size_t numWorkQueues) {$/;"	f	class:WorkQueueManager	signature:(size_t numWorkQueues)
WorkQueueManager::selectWorkQueue	manager/WorkQueueManager.cpp	/^optd::WorkQueue * WorkQueueManager::selectWorkQueue() {$/;"	f	class:WorkQueueManager	signature:()
WorldManager::announcement	WorldManager.cpp	/^void WorldManager::announcement(vn::u32 &id, vn::str8 *content)$/;"	f	class:WorldManager	signature:(vn::u32 &id, vn::str8 *content)
WorldManager::loadBaseConfig	WorldManager.cpp	/^bool WorldManager::loadBaseConfig() {$/;"	f	class:WorldManager	signature:()
WorldManager::loadTBL	WorldManager.cpp	/^bool WorldManager::loadTBL()$/;"	f	class:WorldManager	signature:()
WorldManager::loadVersionData	WorldManager.cpp	/^bool WorldManager::loadVersionData()$/;"	f	class:WorldManager	signature:()
WorldManager::update	WorldManager.cpp	/^void WorldManager::update(vn::f32 deltaTime)$/;"	f	class:WorldManager	signature:(vn::f32 deltaTime)
WorldManager::updateAnnouncement	WorldManager.cpp	/^void WorldManager::updateAnnouncement(vn::str8 content)$/;"	f	class:WorldManager	signature:(vn::str8 content)
XIAOMI_AppID	Common.h	/^const static std::string XIAOMI_AppID = "2882303761517392454";$/;"	v
XIAOMI_AppKey	Common.h	/^const static std::string XIAOMI_AppKey = "5671739262454";$/;"	v
XIAOMI_AppSecret	Common.h	/^const static std::string XIAOMI_AppSecret = "LK5Cj1+k18FYa9mYiYTyjw==";$/;"	v
XMWAN_ClientSecret	Common.h	/^const static std::string XMWAN_ClientSecret = "5523304a560212e06bdd82706b69f5ee";$/;"	v
XY_AppId	Common.h	/^const static std::string XY_AppId = "100023841";$/;"	v
XY_AppKey	Common.h	/^const static std::string XY_AppKey = "Rgkz1FUmbkzInUAkG9l4JDWTsPZG1aCX";$/;"	v
XY_PayKey	Common.h	/^const static std::string XY_PayKey = "1qoOHgzjpdCD2jbQFvVYsmxFSmElXEAs";$/;"	v
YOUKU_APPID	Common.h	/^const static std::string YOUKU_APPID = "2148";$/;"	v
YOUKU_APPKEY	Common.h	/^const static std::string YOUKU_APPKEY = "77db85b21fe02d0b";$/;"	v
YOUKU_APPSECRET	Common.h	/^const static std::string YOUKU_APPSECRET = "26931cfaed0575551386469249bffcab";$/;"	v
YOUKU_PAYKEY	Common.h	/^const static std::string YOUKU_PAYKEY = "94b6aa5c00ebd6eeb05076f6a97830fb";$/;"	v
_AsyncCalculateIntrusion	worker/PreLoggingUser.cpp	/^void 	PreLoggingUser::_AsyncCalculateIntrusion(LoggedUserPtr user,std::function<void(bool ret)> doResult)$/;"	f	class:PreLoggingUser	signature:(LoggedUserPtr user,std::function<void(bool ret)> doResult)
_AsyncCalculateMines	worker/PreLoggingUser.cpp	/^void 	PreLoggingUser::_AsyncCalculateMines(LoggedUserPtr user,std::function<void(bool ret)> doResult)$/;"	f	class:PreLoggingUser	signature:(LoggedUserPtr user,std::function<void(bool ret)> doResult)
_AsyncInsertLevelToGroupHandl	worker/BSLevelGroup.cpp	/^void	BSLevelGroupManager::_AsyncInsertLevelToGroupHandl(bool ret,u32 groupId,u32 levelId,AsyncTaskPtr task,std::function<void(int ret)> doResult)$/;"	f	class:BSLevelGroupManager	signature:(bool ret,u32 groupId,u32 levelId,AsyncTaskPtr task,std::function<void(int ret)> doResult)
_AsyncInsertbaseinfo	manager/DC_DataBase.cpp	/^void  DC_DataBase::_AsyncInsertbaseinfo(std::string &strUUid,AsyncObjectPtr obj,std::function<void(bool ret)>doResult)$/;"	f	class:DC_DataBase	signature:(std::string &strUUid,AsyncObjectPtr obj,std::function<void(bool ret)>doResult)
_AsyncInsertbaseinfo	manager/DC_DataBase.cpp	/^void  _AsyncInsertbaseinfo(std::string &strUUid,AsyncObjectPtr obj,std::function<void(bool ret)>doResult)$/;"	f	signature:(std::string &strUUid,AsyncObjectPtr obj,std::function<void(bool ret)>doResult)
_AsyncintrudeHandl	worker/BSLevelGroup.cpp	/^void BSLevelGroupManager::_AsyncintrudeHandl(bool ret,AsyncTaskPtr task,std::function<void(bool ret)> doResult,u32 groupId,u32 levelId,u32 mineId)$/;"	f	class:BSLevelGroupManager	signature:(bool ret,AsyncTaskPtr task,std::function<void(bool ret)> doResult,u32 groupId,u32 levelId,u32 mineId)
_AsyncsaveNewHandl	worker/BSLevelGroup.cpp	/^void	BSLevelGroupManager::_AsyncsaveNewHandl(AsyncTaskPtr task,std::function<void(int ret)>doResult)$/;"	f	class:BSLevelGroupManager	signature:(AsyncTaskPtr task,std::function<void(int ret)>doResult)
_ConvertStrToLotteryPool	worker/LoggedUser.cpp	/^void LoggedUser::_ConvertStrToLotteryPool(std::string &strPool)$/;"	f	class:LoggedUser	signature:(std::string &strPool)
_GetCBId	PPLink/PPLinkManger.cpp	/^vn::s32 PPLinkManger::_GetCBId()$/;"	f	class:PPLinkManger	signature:()
_HandlAsyncCreateUser	manager/DC_DataBase.cpp	/^void DC_DataBase::_HandlAsyncCreateUser(bool ret,AsyncTaskPtr createUserTask, LoggedUserPtr user,std::function<void (bool ret,  LoggedUserPtr user)>doResult)$/;"	f	class:DC_DataBase	signature:(bool ret,AsyncTaskPtr createUserTask, LoggedUserPtr user,std::function<void (bool ret, LoggedUserPtr user)>doResult)
_HandlAsyncCreateUser	worker/PreLoggingUser.cpp	/^void PreLoggingUser::_HandlAsyncCreateUser(bool ret,LoggedUserPtr user,AsyncTaskPtr createUserTask)$/;"	f	class:PreLoggingUser	signature:(bool ret,LoggedUserPtr user,AsyncTaskPtr createUserTask)
_HandlAsyncLoadForceGuide	worker/PreLoggingUser.cpp	/^void PreLoggingUser::_HandlAsyncLoadForceGuide(PreparedQueryResult result,LoggedUserPtr user,AsyncTaskPtr task)$/;"	f	class:PreLoggingUser	signature:(PreparedQueryResult result,LoggedUserPtr user,AsyncTaskPtr task)
_HandlAsyncLoadItemStore	worker/PreLoggingUser.cpp	/^void PreLoggingUser::_HandlAsyncLoadItemStore(PreparedQueryResult result,LoggedUserPtr user,AsyncTaskPtr task)$/;"	f	class:PreLoggingUser	signature:(PreparedQueryResult result,LoggedUserPtr user,AsyncTaskPtr task)
_HandlAsyncLoadLevelGroup	worker/PreLoggingUser.cpp	/^void PreLoggingUser::_HandlAsyncLoadLevelGroup(PreparedQueryResult result,LoggedUserPtr user,AsyncTaskPtr task)$/;"	f	class:PreLoggingUser	signature:(PreparedQueryResult result,LoggedUserPtr user,AsyncTaskPtr task)
_HandlAsyncLoadLevels	worker/PreLoggingUser.cpp	/^void PreLoggingUser::_HandlAsyncLoadLevels(PreparedQueryResult result,LoggedUserPtr user,AsyncTaskPtr task)$/;"	f	class:PreLoggingUser	signature:(PreparedQueryResult result,LoggedUserPtr user,AsyncTaskPtr task)
_HandlAsyncLoadMines	worker/PreLoggingUser.cpp	/^void PreLoggingUser::_HandlAsyncLoadMines(PreparedQueryResult result,LoggedUserPtr user,AsyncTaskPtr task)$/;"	f	class:PreLoggingUser	signature:(PreparedQueryResult result,LoggedUserPtr user,AsyncTaskPtr task)
_HandlAsyncLoadMissions	worker/PreLoggingUser.cpp	/^void PreLoggingUser::_HandlAsyncLoadMissions(PreparedQueryResult result,LoggedUserPtr user,AsyncTaskPtr task)$/;"	f	class:PreLoggingUser	signature:(PreparedQueryResult result,LoggedUserPtr user,AsyncTaskPtr task)
_HandlAsyncLoadMonsterMap	worker/PreLoggingUser.cpp	/^void PreLoggingUser::_HandlAsyncLoadMonsterMap(PreparedQueryResult result,LoggedUserPtr user,AsyncTaskPtr task)$/;"	f	class:PreLoggingUser	signature:(PreparedQueryResult result,LoggedUserPtr user,AsyncTaskPtr task)
_HandlAsyncLoadPlatformStore	worker/PreLoggingUser.cpp	/^void PreLoggingUser::_HandlAsyncLoadPlatformStore(PreparedQueryResult result,LoggedUserPtr user,AsyncTaskPtr task)$/;"	f	class:PreLoggingUser	signature:(PreparedQueryResult result,LoggedUserPtr user,AsyncTaskPtr task)
_HandlAsyncLoadTechUpgrade	worker/PreLoggingUser.cpp	/^void PreLoggingUser::_HandlAsyncLoadTechUpgrade(PreparedQueryResult result,LoggedUserPtr user,AsyncTaskPtr task)$/;"	f	class:PreLoggingUser	signature:(PreparedQueryResult result,LoggedUserPtr user,AsyncTaskPtr task)
_HandlAsyncLoadTowerUpgrade	worker/PreLoggingUser.cpp	/^void PreLoggingUser::_HandlAsyncLoadTowerUpgrade(PreparedQueryResult result,LoggedUserPtr user,AsyncTaskPtr task)$/;"	f	class:PreLoggingUser	signature:(PreparedQueryResult result,LoggedUserPtr user,AsyncTaskPtr task)
_HandlClose	worker/LoggedUser.cpp	/^void LoggedUser::_HandlClose(AsyncTaskPtr task)$/;"	f	class:LoggedUser	signature:(AsyncTaskPtr task)
_HandlGetBalance	worker/PreLoggingUser.cpp	/^void PreLoggingUser::_HandlGetBalance(vn::s32 result,std::string& context,vn::RefCountedPtr<pkt::req_login_PPID> 	pktPtr)$/;"	f	class:PreLoggingUser	signature:(vn::s32 result,std::string& context,vn::RefCountedPtr<pkt::req_login_PPID> pktPtr)
_HandlSignIn	worker/PreLoggingUser.cpp	/^void	PreLoggingUser::_HandlSignIn(const std::string &strUUId,vn::s32 diamond)$/;"	f	class:PreLoggingUser	signature:(const std::string &strUUId,vn::s32 diamond)
_HandlTaskFinish	worker/LoggedUser.cpp	/^void LoggedUser::_HandlTaskFinish(AsyncTaskPtr task)$/;"	f	class:LoggedUser	signature:(AsyncTaskPtr task)
_HandlTaskFinish	worker/PreLoggingUser.cpp	/^void PreLoggingUser::_HandlTaskFinish(AsyncTaskPtr task,LoggedUserPtr user)$/;"	f	class:PreLoggingUser	signature:(AsyncTaskPtr task,LoggedUserPtr user)
_HandlmineTask	worker/PreLoggingUser.cpp	/^void	PreLoggingUser::_HandlmineTask(AsyncTaskPtr mineTask,std::function<void(bool ret)> doResult)$/;"	f	class:PreLoggingUser	signature:(AsyncTaskPtr mineTask,std::function<void(bool ret)> doResult)
_InsertForceGuide	manager/DC_DataBase.cpp	/^bool DC_DataBase::_InsertForceGuide(LoggedUserPtr user)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user)
_InsertHero	manager/DC_DataBase.cpp	/^bool DC_DataBase::_InsertHero(LoggedUserPtr user)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user)
_InsertItemStore	manager/DC_DataBase.cpp	/^bool DC_DataBase::_InsertItemStore(LoggedUserPtr user)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user)
_InsertLevels	manager/DC_DataBase.cpp	/^bool DC_DataBase::_InsertLevels(LoggedUserPtr user)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user)
_InsertMines	manager/DC_DataBase.cpp	/^bool DC_DataBase::_InsertMines(LoggedUserPtr user)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user)
_InsertMissions	manager/DC_DataBase.cpp	/^bool DC_DataBase::_InsertMissions(LoggedUserPtr user)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user)
_InsertMonsterMap	manager/DC_DataBase.cpp	/^bool DC_DataBase::_InsertMonsterMap(LoggedUserPtr user)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user)
_InsertPlatformStore	manager/DC_DataBase.cpp	/^bool	DC_DataBase::_InsertPlatformStore(LoggedUserPtr user)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user)
_InsertTechUpgrade	manager/DC_DataBase.cpp	/^bool DC_DataBase::_InsertTechUpgrade(LoggedUserPtr user)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user)
_InsertTowerUpgrade	manager/DC_DataBase.cpp	/^bool DC_DataBase::_InsertTowerUpgrade(LoggedUserPtr user)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user)
_Insertbaseinfo	manager/DC_DataBase.cpp	/^bool DC_DataBase::_Insertbaseinfo(std::string &strUUid)$/;"	f	class:DC_DataBase	signature:(std::string &strUUid)
_LoadForceGuide	manager/DC_DataBase.cpp	/^bool DC_DataBase::_LoadForceGuide(LoggedUserPtr user)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user)
_LoadHero	manager/DC_DataBase.cpp	/^bool DC_DataBase::_LoadHero(std::string &strUUId,BSHero &hero)$/;"	f	class:DC_DataBase	signature:(std::string &strUUId,BSHero &hero)
_LoadItemStore	manager/DC_DataBase.cpp	/^bool DC_DataBase::_LoadItemStore(std::string &strUUId,BSItemStore &itemStore)$/;"	f	class:DC_DataBase	signature:(std::string &strUUId,BSItemStore &itemStore)
_LoadLevels	manager/DC_DataBase.cpp	/^bool DC_DataBase::_LoadLevels(LoggedUserPtr user)$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user)
_LoadMines	manager/DC_DataBase.cpp	/^bool DC_DataBase::_LoadMines(std::string &strUUId,BSGoldMine &goldMine)$/;"	f	class:DC_DataBase	signature:(std::string &strUUId,BSGoldMine &goldMine)
_LoadMissions	manager/DC_DataBase.cpp	/^bool DC_DataBase::_LoadMissions(std::string &strUUId,BSMission &bsMission)$/;"	f	class:DC_DataBase	signature:(std::string &strUUId,BSMission &bsMission)
_LoadMonsterMap	manager/DC_DataBase.cpp	/^bool DC_DataBase::_LoadMonsterMap(std::string &strUUId,BSMonsterMap &monsterMap)$/;"	f	class:DC_DataBase	signature:(std::string &strUUId,BSMonsterMap &monsterMap)
_LoadPlatformStore	manager/DC_DataBase.cpp	/^bool DC_DataBase::_LoadPlatformStore(std::string &strUUId ,BSPlatformStore &platStore)$/;"	f	class:DC_DataBase	signature:(std::string &strUUId ,BSPlatformStore &platStore)
_LoadTechUpgrade	manager/DC_DataBase.cpp	/^bool DC_DataBase::_LoadTechUpgrade(std::string &strUUId,BSTechUpgrade &bsTech)$/;"	f	class:DC_DataBase	signature:(std::string &strUUId,BSTechUpgrade &bsTech)
_LoadTowerUpgrade	manager/DC_DataBase.cpp	/^bool DC_DataBase::_LoadTowerUpgrade(std::string &strUUId,BSTowerUpgrade &bstowergrade)$/;"	f	class:DC_DataBase	signature:(std::string &strUUId,BSTowerUpgrade &bstowergrade)
__LOD__FileSystem__	File/FileSystemPKG.h	10;"	d
__Table_Registration_H__	table/Table_Registration.h	2;"	d
__Table_award_H__	table/Table_award.h	2;"	d
__Table_buff_H__	table/Table_buff.h	2;"	d
__Table_cage_H__	table/Table_cage.h	2;"	d
__Table_coupon_H__	table/Table_coupon.h	2;"	d
__Table_dialog_H__	table/Table_dialog.h	2;"	d
__Table_diamond_shop_H__	table/Table_diamond_shop.h	2;"	d
__Table_force_guide_H__	table/Table_force_guide.h	2;"	d
__Table_gold_mine_H__	table/Table_gold_mine.h	2;"	d
__Table_herorune_H__	table/Table_herorune.h	2;"	d
__Table_hint_H__	table/Table_hint.h	2;"	d
__Table_item_store_H__	table/Table_item_store.h	2;"	d
__Table_level_H__	table/Table_level.h	2;"	d
__Table_levelclass_H__	table/Table_levelclass.h	2;"	d
__Table_mission_H__	table/Table_mission.h	2;"	d
__Table_monster_H__	table/Table_monster.h	2;"	d
__Table_object_H__	table/Table_object.h	2;"	d
__Table_platform_H__	table/Table_platform.h	2;"	d
__Table_progress_H__	table/Table_progress.h	2;"	d
__Table_spell_H__	table/Table_spell.h	2;"	d
__Table_sub_wave_H__	table/Table_sub_wave.h	2;"	d
__Table_tech_H__	table/Table_tech.h	2;"	d
__Table_tower_H__	table/Table_tower.h	2;"	d
__Table_training_H__	table/Table_training.h	2;"	d
__Table_wave_H__	table/Table_wave.h	2;"	d
__optd_srv__AsyncTask	worker/AsyncTask.h	10;"	d
__optd_srv__BSAwardManager__	manager/BSAwardManager.h	10;"	d
__optd_srv__BSCommonFunc__	manager/BSCommonFunc.h	10;"	d
__optd_srv__BSCouponManager__	manager/BSCouponManager.h	10;"	d
__optd_srv__BSDiamondShop__	manager/BSDiamondShop.h	10;"	d
__optd_srv__BSFactory__	manager/BSFactory.h	10;"	d
__optd_srv__BSForceGuide__	worker/BSForceGuide.h	10;"	d
__optd_srv__BSGoldMine__	worker/BSGoldMine.h	10;"	d
__optd_srv__BSHero__	worker/BSHero.h	10;"	d
__optd_srv__BSIntrusion__	worker/BSIntrusion.h	10;"	d
__optd_srv__BSItemStore__	worker/BSItemStore.h	10;"	d
__optd_srv__BSLevelGroupInfoManager__	manager/BSLevelGroupInfoManager.h	10;"	d
__optd_srv__BSLevelGroupInfo__	worker/BSLevelGroupInfo.h	10;"	d
__optd_srv__BSLevelGroup__	worker/BSLevelGroup.h	10;"	d
__optd_srv__BSLevelInfo__	worker/BSLevel.h	10;"	d
__optd_srv__BSMissionManager__	manager/BSMissionManager.h	10;"	d
__optd_srv__BSMission__	worker/BSMission.h	10;"	d
__optd_srv__BSMonsterMap__	worker/BSMonsterMap.h	10;"	d
__optd_srv__BSPlatformStoreInfo__	worker/BSPlatformStoreInfo.h	10;"	d
__optd_srv__BSPlatformStore__	worker/BSPlatformStore.h	10;"	d
__optd_srv__BSPlayerBaseInfo__	worker/BSPlayerBaseInfo.h	10;"	d
__optd_srv__BSRegistration__	worker/BSRegistration.h	10;"	d
__optd_srv__BSShopManager__	manager/BSRmbShopManager.h	10;"	d
__optd_srv__BSTechManager__	manager/BSTechManager.h	10;"	d
__optd_srv__BSTechUpgrade__	worker/BSTechUpgrade.h	10;"	d
__optd_srv__BSTool__	worker/BSTool.h	2;"	d
__optd_srv__BSTowerManager__	manager/BSTowerManager.h	10;"	d
__optd_srv__BSTowerUpgrade__	worker/BSTowerUpgrade.h	10;"	d
__optd_srv__DBTABLE__	database/Dbtable.h	2;"	d
__optd_srv__DC_DataBase_EventLog__	Log/DC_DataBase_EventLog.h	10;"	d
__optd_srv__DC_DataBase__	manager/DC_DataBase.h	2;"	d
__optd_srv__DC_File_EventLog__	Log/DC_File_EventLog.h	10;"	d
__optd_srv__DC_File__	manager/DC_File.h	2;"	d
__optd_srv__DataCenter__	manager/DataCenter.h	10;"	d
__optd_srv__DataTime__	DateTime.h	10;"	d
__optd_srv__LoggedUserManager__	manager/LoggedUserManager.h	10;"	d
__optd_srv__LoggedUser__	worker/LoggedUser.h	2;"	d
__optd_srv__PacketHandler__	worker/PacketHandler.h	10;"	d
__optd_srv__PreLoggingUser__	worker/PreLoggingUser.h	10;"	d
__optd_srv__RedeemPacket__	RedeemPacket.h	10;"	d
__optd_srv__RegistrationManager__	manager/BSRegistrationManager.h	10;"	d
__optd_srv__ServerData__	ServerData.h	10;"	d
__optd_srv__UUID__	worker/UUID.h	10;"	d
__optd_srv__WorkQueueManager__	manager/WorkQueueManager.h	10;"	d
__optd_srv__WorkQueue__	worker/WorkQueue.h	10;"	d
__optd_svr__ClientListen__	clientlisten/ClientListen.h	10;"	d
__optd_svr__ClientSession__	clientlisten/ClientSession.h	10;"	d
__optd_svr__Client__	clientlisten/Client.h	10;"	d
__optd_svr__OPTDServer__	OPTDServer.h	10;"	d
__tblcoder__TableBase__	table/TableBase.h	10;"	d
_accepted	clientlisten/ClientListen.cpp	/^Link_TCP_Connection * ClientListen::_accepted(const NetAddress &peer) {$/;"	f	class:ClientListen	signature:(const NetAddress &peer)
_add	worker/BSItemStore.cpp	/^void BSItemStore::_add(u32 id, u32 count) {$/;"	f	class:BSItemStore	signature:(u32 id, u32 count)
_addUser	manager/DataCenter.cpp	/^void DataCenter::_addUser(const LoggedUserPtr &user) {$/;"	f	class:DataCenter	signature:(const LoggedUserPtr &user)
_bad_data	clientlisten/Client.cpp	/^void Client::_bad_data()$/;"	f	class:Client	signature:()
_buildPlayerData	worker/LoggedUser.cpp	/^void LoggedUser::_buildPlayerData(pkt::Msg_PlayerData &data)$/;"	f	class:LoggedUser	signature:(pkt::Msg_PlayerData &data)
_buildTimedData	worker/LoggedUser.cpp	/^void LoggedUser::_buildTimedData(pkt::Msg_TimedData &data)$/;"	f	class:LoggedUser	signature:(pkt::Msg_TimedData &data)
_calcYield	worker/BSGoldMine.cpp	/^void BSGoldMine::_calcYield()$/;"	f	class:BSGoldMine	signature:()
_checkLottery	worker/LoggedUser.cpp	/^void LoggedUser::_checkLottery(u32 levelId)$/;"	f	class:LoggedUser	signature:(u32 levelId)
_clear	worker/BSLevel.cpp	/^void BSLevel::_clear()$/;"	f	class:BSLevel	signature:()
_closed	worker/LoggedUser.cpp	/^void LoggedUser::_closed()$/;"	f	class:LoggedUser	signature:()
_closed	worker/PreLoggingUser.cpp	/^void PreLoggingUser::_closed() {$/;"	f	class:PreLoggingUser	signature:()
_connected	clientlisten/Client.cpp	/^void Client::_connected()$/;"	f	class:Client	signature:()
_console_command	OPTDServer.cpp	/^bool OPTDServer::_console_command(RefCountedPtr<Variable_object> cmds) {$/;"	f	class:OPTDServer	signature:(RefCountedPtr<Variable_object> cmds)
_destroy	clientlisten/Client.cpp	/^void Client::_destroy() {$/;"	f	class:Client	signature:()
_destroy	clientlisten/ClientListen.cpp	/^void ClientListen::_destroy() {$/;"	f	class:ClientListen	signature:()
_destroy	clientlisten/ClientSession.cpp	/^void ClientSession::_destroy() {$/;"	f	class:ClientSession	signature:()
_disconnected	clientlisten/Client.cpp	/^ void Client::_disconnected()$/;"	f	class:Client	signature:()
_flush	manager/DC_DataBase.cpp	/^void DC_DataBase::_flush() {$/;"	f	class:DC_DataBase	signature:()
_flush	manager/DC_File.cpp	/^void DC_File::_flush() {$/;"	f	class:DC_File	signature:()
_flush_log	manager/DC_DataBase.cpp	/^void DC_DataBase::_flush_log() {$/;"	f	class:DC_DataBase	signature:()
_flush_log	manager/DC_File.cpp	/^void DC_File::_flush_log() {$/;"	f	class:DC_File	signature:()
_flush_redeem_packets	manager/DC_DataBase.cpp	/^void DC_DataBase::_flush_redeem_packets() {$/;"	f	class:DC_DataBase	signature:()
_flush_redeem_packets	manager/DC_File.cpp	/^void DC_File::_flush_redeem_packets() {$/;"	f	class:DC_File	signature:()
_generateCoupon	worker/LoggedUser.cpp	/^bool LoggedUser::_generateCoupon()$/;"	f	class:LoggedUser	signature:()
_getContent	clientlisten/Client.h	/^std::string _getContent(const vn::HttpResponse& _httpResponse);$/;"	p	signature:(const vn::HttpResponse& _httpResponse)
_getContent	clientlisten/ClientSession.h	/^std::string _getContent(const vn::HttpResponse& _httpResponse);$/;"	p	signature:(const vn::HttpResponse& _httpResponse)
_getJsonObj	clientlisten/Client.h	/^vn::RefCountedPtr<vn::Variable_object> _getJsonObj(const vn::HttpResponse& _httpResponse);$/;"	p	signature:(const vn::HttpResponse& _httpResponse)
_getJsonObj	clientlisten/ClientSession.h	/^vn::RefCountedPtr<vn::Variable_object> _getJsonObj(const vn::HttpResponse& _httpResponse);$/;"	p	signature:(const vn::HttpResponse& _httpResponse)
_init	clientlisten/Client.cpp	/^void Client::_init() {$/;"	f	class:Client	signature:()
_init	clientlisten/ClientSession.cpp	/^void ClientSession::_init() {$/;"	f	class:ClientSession	signature:()
_init_redeem_packets	manager/DC_DataBase.cpp	/^void DC_DataBase::_init_redeem_packets() {$/;"	f	class:DC_DataBase	signature:()
_init_redeem_packets	manager/DC_File.cpp	/^void DC_File::_init_redeem_packets() {$/;"	f	class:DC_File	signature:()
_intrusion	worker/BSIntrusion.cpp	/^void BSIntrusion::_intrusion()$/;"	f	class:BSIntrusion	signature:()
_invalid_operation	worker/LoggedUser.cpp	/^void LoggedUser::_invalid_operation()$/;"	f	class:LoggedUser	signature:()
_lock	RedeemPacket.h	/^    SpinLock _lock;$/;"	m	struct:RefCounted	access:public
_log	manager/DC_DataBase.cpp	/^void DC_DataBase::_log(DC_File_EventLog *el) {$/;"	f	class:DC_DataBase	signature:(DC_File_EventLog *el)
_log	manager/DC_DataBase.cpp	/^void DC_DataBase::_log(DC_File_EventLog_User *el, const UUID &uuid) {$/;"	f	class:DC_DataBase	signature:(DC_File_EventLog_User *el, const UUID &uuid)
_log	manager/DC_File.cpp	/^void DC_File::_log(DC_File_EventLog *el) {$/;"	f	class:DC_File	signature:(DC_File_EventLog *el)
_log	manager/DC_File.cpp	/^void DC_File::_log(DC_File_EventLog_User *el, const UUID &uuid) {$/;"	f	class:DC_File	signature:(DC_File_EventLog_User *el, const UUID &uuid)
_mask	clientlisten/Client.cpp	/^void Client::_mask(const LinkBufferPtr &buffer)$/;"	f	class:Client	signature:(const LinkBufferPtr &buffer)
_notify_couponUsed	worker/LoggedUser.cpp	/^void LoggedUser::_notify_couponUsed()$/;"	f	class:LoggedUser	signature:()
_notify_heroUnlocked	worker/LoggedUser.cpp	/^void LoggedUser::_notify_heroUnlocked(u32 heroClassId)$/;"	f	class:LoggedUser	signature:(u32 heroClassId)
_notify_levelPassed	worker/LoggedUser.cpp	/^void LoggedUser::_notify_levelPassed(const BSLevel::LevelInfo &info)$/;"	f	class:LoggedUser	signature:(const BSLevel::LevelInfo &info)
_openLottery	worker/LoggedUser.cpp	/^bool LoggedUser::_openLottery()$/;"	f	class:LoggedUser	signature:()
_open_rune	worker/BSHero.cpp	/^void BSHero::_open_rune(std::vector<Rune> &runeList, u32 towerClass, u32 lv)$/;"	f	class:BSHero	signature:(std::vector<Rune> &runeList, u32 towerClass, u32 lv)
_read	File/FileSystemPKG.cpp	/^size_t FileSystemPKG::_read(vn::u64 offset, void *buffer, size_t size) {$/;"	f	class:FileSystemPKG	signature:(vn::u64 offset, void *buffer, size_t size)
_read_str8	table/TableBase.cpp	/^    void _read_str8(DataStream &stream, str8 &value) {$/;"	f	namespace:tbl	signature:(DataStream &stream, str8 &value)
_read_z_u32	table/TableBase.cpp	/^    u32 _read_z_u32(DataStream &stream) {$/;"	f	namespace:tbl	signature:(DataStream &stream)
_received	clientlisten/Client.cpp	/^void Client::_received(vn::LinkBufferPtr buffers)$/;"	f	class:Client	signature:(vn::LinkBufferPtr buffers)
_removeUser	manager/DataCenter.cpp	/^void DataCenter::_removeUser(const LoggedUserPtr &user) {$/;"	f	class:DataCenter	signature:(const LoggedUserPtr &user)
_sendAnnouncementId	worker/LoggedUser.cpp	/^void LoggedUser::_sendAnnouncementId()	\/\/下发通告id$/;"	f	class:LoggedUser	signature:()
_sendCouponInfo	worker/LoggedUser.cpp	/^void LoggedUser::_sendCouponInfo()	\/\/下发优惠券消息$/;"	f	class:LoggedUser	signature:()
_sendLotteryInfo	worker/LoggedUser.cpp	/^void LoggedUser::_sendLotteryInfo() \/\/下发彩票$/;"	f	class:LoggedUser	signature:()
_sendRegistrationInfo	worker/LoggedUser.cpp	/^void LoggedUser::_sendRegistrationInfo()$/;"	f	class:LoggedUser	signature:()
_setStatus	worker/BSGoldMine.cpp	/^void BSGoldMine::_setStatus(u32 mineId, u32 levelId, bool group, u32 status) {$/;"	f	class:BSGoldMine	signature:(u32 mineId, u32 levelId, bool group, u32 status)
_startDB	OPTDServer.cpp	/^bool OPTDServer::_startDB(){$/;"	f	class:OPTDServer	signature:()
_stopDB	OPTDServer.cpp	/^bool OPTDServer::_stopDB(){$/;"	f	class:OPTDServer	signature:()
_updateCoupon	worker/LoggedUser.cpp	/^void LoggedUser::_updateCoupon(f32 deltaTime)$/;"	f	class:LoggedUser	signature:(f32 deltaTime)
_updateInitial	worker/PreLoggingUser.cpp	/^void PreLoggingUser::_updateInitial(f32 deltaTime) {$/;"	f	class:PreLoggingUser	signature:(f32 deltaTime)
_updateLottery	worker/LoggedUser.cpp	/^void LoggedUser::_updateLottery(f32 deltaTime)$/;"	f	class:LoggedUser	signature:(f32 deltaTime)
_updateStamp	worker/LoggedUser.cpp	/^void LoggedUser::_updateStamp()$/;"	f	class:LoggedUser	signature:()
_update_rune_res	worker/BSHero.cpp	/^void BSHero::_update_rune_res()$/;"	f	class:BSHero	signature:()
_valid	RedeemPacket.h	/^    bool _valid = true;$/;"	m	struct:RefCounted	access:public
_vn_ns	RedeemPacket.h	/^using namespace _vn_ns;$/;"	v
_vn_ns	clientlisten/ClientListen.h	/^using namespace _vn_ns;$/;"	v
_work	worker/WorkQueue.cpp	/^void WorkQueue::_work() {$/;"	f	class:WorkQueue	signature:()
_write_str8	table/TableBase.cpp	/^    void _write_str8(DataStream &stream, const str8 &value) {$/;"	f	namespace:tbl	signature:(DataStream &stream, const str8 &value)
_write_z_u32	table/TableBase.cpp	/^    void _write_z_u32(DataStream &stream, u32 value) {$/;"	f	namespace:tbl	signature:(DataStream &stream, u32 value)
addByType	worker/BSPlayerBaseInfo.cpp	/^void BSPlayerBaseInfo::addByType(u32 type, s32 value,s32 *addDiamond)$/;"	f	class:BSPlayerBaseInfo	signature:(u32 type, s32 value,s32 *addDiamond)
addChip	worker/BSPlayerBaseInfo.cpp	/^void BSPlayerBaseInfo::addChip(u32 index, s32 value)$/;"	f	class:BSPlayerBaseInfo	signature:(u32 index, s32 value)
addChipByType	worker/BSPlayerBaseInfo.cpp	/^void BSPlayerBaseInfo::addChipByType(u32 type,s32 value) {$/;"	f	class:BSPlayerBaseInfo	signature:(u32 type,s32 value)
addDiamond	worker/BSPlayerBaseInfo.cpp	/^void BSPlayerBaseInfo::addDiamond(s32 value)$/;"	f	class:BSPlayerBaseInfo	signature:(s32 value)
addMoney	worker/BSPlayerBaseInfo.cpp	/^void BSPlayerBaseInfo::addMoney(s32 value)$/;"	f	class:BSPlayerBaseInfo	signature:(s32 value)
addRedeemPacket	manager/DC_DataBase.cpp	/^bool DC_DataBase::addRedeemPacket(RedeemPacketPtr redeemPacket) {$/;"	f	class:DC_DataBase	signature:(RedeemPacketPtr redeemPacket)
addRedeemPacket	manager/DC_File.cpp	/^bool DC_File::addRedeemPacket(RedeemPacketPtr redeemPacket) {$/;"	f	class:DC_File	signature:(RedeemPacketPtr redeemPacket)
addUser	manager/LoggedUserManager.cpp	/^void LoggedUserManager::addUser(LoggedUserPtr user) {$/;"	f	class:LoggedUserManager	signature:(LoggedUserPtr user)
afterWin	manager/BSAwardManager.h	/^    std::vector<std::pair<u32, u32>> afterWin; \/\/ <id, weight>$/;"	m	struct:AllocatedObject	access:public
announcement	WorldManager.cpp	/^void WorldManager::announcement(vn::u32 &id, vn::str8 *content)$/;"	f	class:WorldManager	signature:(vn::u32 &id, vn::str8 *content)
announcementContent	ServerData.h	/^    vn::str8 announcementContent;$/;"	m	struct:vn::AllocatedObject	access:public
announcementId	ServerData.h	/^    vn::u32 announcementId = 0;$/;"	m	struct:vn::AllocatedObject	access:public
at	table/Table_Registration.cpp	/^const Record_Registration * Table_Registration::at(size_t index) const{$/;"	f	class:tbl::Table_Registration	signature:(size_t index) const
at	table/Table_award.cpp	/^const Record_award * Table_award::at(size_t index) const{$/;"	f	class:tbl::Table_award	signature:(size_t index) const
at	table/Table_buff.cpp	/^const Record_buff * Table_buff::at(size_t index) const{$/;"	f	class:tbl::Table_buff	signature:(size_t index) const
at	table/Table_cage.cpp	/^const Record_cage * Table_cage::at(size_t index) const{$/;"	f	class:tbl::Table_cage	signature:(size_t index) const
at	table/Table_coupon.cpp	/^const Record_coupon * Table_coupon::at(size_t index) const{$/;"	f	class:tbl::Table_coupon	signature:(size_t index) const
at	table/Table_dialog.cpp	/^const Record_dialog * Table_dialog::at(size_t index) const{$/;"	f	class:tbl::Table_dialog	signature:(size_t index) const
at	table/Table_diamond_shop.cpp	/^const Record_diamond_shop * Table_diamond_shop::at(size_t index) const{$/;"	f	class:tbl::Table_diamond_shop	signature:(size_t index) const
at	table/Table_force_guide.cpp	/^const Record_force_guide * Table_force_guide::at(size_t index) const{$/;"	f	class:tbl::Table_force_guide	signature:(size_t index) const
at	table/Table_gold_mine.cpp	/^const Record_gold_mine * Table_gold_mine::at(size_t index) const{$/;"	f	class:tbl::Table_gold_mine	signature:(size_t index) const
at	table/Table_herorune.cpp	/^const Record_herorune * Table_herorune::at(size_t index) const{$/;"	f	class:tbl::Table_herorune	signature:(size_t index) const
at	table/Table_hint.cpp	/^const Record_hint * Table_hint::at(size_t index) const{$/;"	f	class:tbl::Table_hint	signature:(size_t index) const
at	table/Table_item_store.cpp	/^const Record_item_store * Table_item_store::at(size_t index) const{$/;"	f	class:tbl::Table_item_store	signature:(size_t index) const
at	table/Table_level.cpp	/^const Record_level * Table_level::at(size_t index) const{$/;"	f	class:tbl::Table_level	signature:(size_t index) const
at	table/Table_levelclass.cpp	/^const Record_levelclass * Table_levelclass::at(size_t index) const{$/;"	f	class:tbl::Table_levelclass	signature:(size_t index) const
at	table/Table_mission.cpp	/^const Record_mission * Table_mission::at(size_t index) const{$/;"	f	class:tbl::Table_mission	signature:(size_t index) const
at	table/Table_monster.cpp	/^const Record_monster * Table_monster::at(size_t index) const{$/;"	f	class:tbl::Table_monster	signature:(size_t index) const
at	table/Table_object.cpp	/^const Record_object * Table_object::at(size_t index) const{$/;"	f	class:tbl::Table_object	signature:(size_t index) const
at	table/Table_platform.cpp	/^const Record_platform * Table_platform::at(size_t index) const{$/;"	f	class:tbl::Table_platform	signature:(size_t index) const
at	table/Table_progress.cpp	/^const Record_progress * Table_progress::at(size_t index) const{$/;"	f	class:tbl::Table_progress	signature:(size_t index) const
at	table/Table_spell.cpp	/^const Record_spell * Table_spell::at(size_t index) const{$/;"	f	class:tbl::Table_spell	signature:(size_t index) const
at	table/Table_sub_wave.cpp	/^const Record_sub_wave * Table_sub_wave::at(size_t index) const{$/;"	f	class:tbl::Table_sub_wave	signature:(size_t index) const
at	table/Table_tech.cpp	/^const Record_tech * Table_tech::at(size_t index) const{$/;"	f	class:tbl::Table_tech	signature:(size_t index) const
at	table/Table_tower.cpp	/^const Record_tower * Table_tower::at(size_t index) const{$/;"	f	class:tbl::Table_tower	signature:(size_t index) const
at	table/Table_training.cpp	/^const Record_training * Table_training::at(size_t index) const{$/;"	f	class:tbl::Table_training	signature:(size_t index) const
at	table/Table_wave.cpp	/^const Record_wave * Table_wave::at(size_t index) const{$/;"	f	class:tbl::Table_wave	signature:(size_t index) const
attach	worker/WorkQueue.cpp	/^void WorkQueue::attach(WorkerPtr worker) {$/;"	f	class:WorkQueue	signature:(WorkerPtr worker)
awardId	manager/BSAwardManager.h	/^    u32 awardId = 0;$/;"	m	struct:AllocatedObject	access:public
broadcast	manager/LoggedUserManager.cpp	/^void LoggedUserManager::broadcast(const std::function<void (LoggedUser *)> &func) {$/;"	f	class:LoggedUserManager	signature:(const std::function<void (LoggedUser *)> &func)
bsForceGuide	worker/LoggedUser.cpp	/^BSForceGuide & LoggedUser::bsForceGuide()$/;"	f	class:LoggedUser	signature:()
bsGoldMine	worker/LoggedUser.cpp	/^BSGoldMine & LoggedUser::bsGoldMine()$/;"	f	class:LoggedUser	signature:()
bsHero	worker/LoggedUser.cpp	/^BSHero & LoggedUser::bsHero()$/;"	f	class:LoggedUser	signature:()
bsItemStore	worker/LoggedUser.cpp	/^BSItemStore & LoggedUser::bsItemStore()$/;"	f	class:LoggedUser	signature:()
bsLevel	worker/LoggedUser.cpp	/^BSLevel & LoggedUser::bsLevel()$/;"	f	class:LoggedUser	signature:()
bsLevelGroupMgr	worker/LoggedUser.cpp	/^BSLevelGroupManager & LoggedUser::bsLevelGroupMgr()$/;"	f	class:LoggedUser	signature:()
bsMission	worker/LoggedUser.cpp	/^BSMission & LoggedUser::bsMission()$/;"	f	class:LoggedUser	signature:()
bsMonsterMap	worker/LoggedUser.cpp	/^BSMonsterMap & LoggedUser::bsMonsterMap()$/;"	f	class:LoggedUser	signature:()
bsPlatformStore	worker/LoggedUser.cpp	/^BSPlatformStore & LoggedUser::bsPlatformStore()$/;"	f	class:LoggedUser	signature:()
bsPlayerBaseInfo	worker/LoggedUser.cpp	/^BSPlayerBaseInfo & LoggedUser::bsPlayerBaseInfo()$/;"	f	class:LoggedUser	signature:()
bsRegistration	worker/LoggedUser.cpp	/^BSRegistration & LoggedUser::bsRegistration()$/;"	f	class:LoggedUser	signature:()
bsTechUpgrade	worker/LoggedUser.cpp	/^BSTechUpgrade & LoggedUser::bsTechUpgrade()$/;"	f	class:LoggedUser	signature:()
bsTowerUpgrade	worker/LoggedUser.cpp	/^BSTowerUpgrade & LoggedUser::bsTowerUpgrade()$/;"	f	class:LoggedUser	signature:()
buy	worker/BSItemStore.cpp	/^bool BSItemStore::buy(u32 id,s32 *payDiamond)$/;"	f	class:BSItemStore	signature:(u32 id,s32 *payDiamond)
buy	worker/BSPlatformStore.cpp	/^bool BSPlatformStore::buy(u32 category,s32 *payDiamond) {$/;"	f	class:BSPlatformStore	signature:(u32 category,s32 *payDiamond)
buy	worker/BSPlatformStoreInfo.cpp	/^bool BSPlatformStoreInfo::buy(u32 category, u32 currentNum, BSPlayerBaseInfo &player,s32 *payDiamond) {$/;"	f	class:BSPlatformStoreInfo	signature:(u32 category, u32 currentNum, BSPlayerBaseInfo &player,s32 *payDiamond)
calcYield	worker/BSGoldMine.cpp	/^void BSGoldMine::GoldMine::calcYield() {$/;"	f	class:BSGoldMine::GoldMine	signature:()
calc_diamondByChip	manager/BSCommonFunc.cpp	/^u32 BSCommonFunc::calc_diamondByChip(u32 chip)$/;"	f	class:BSCommonFunc	signature:(u32 chip)
calc_diamondByRes	manager/BSCommonFunc.cpp	/^u32 BSCommonFunc::calc_diamondByRes(u32 res)$/;"	f	class:BSCommonFunc	signature:(u32 res)
category	RedeemPacket.h	/^    u32 category = 0;$/;"	m	struct:RefCounted	access:public
checkGroupStatus	worker/BSLevelGroup.cpp	/^u32 BSLevelGroupManager::checkGroupStatus(u32 groupId) {$/;"	f	class:BSLevelGroupManager	signature:(u32 groupId)
chip	worker/BSPlayerBaseInfo.cpp	/^s32 BSPlayerBaseInfo::chip(u32 index) {$/;"	f	class:BSPlayerBaseInfo	signature:(u32 index)
clear	worker/BSLevelGroup.cpp	/^void BSLevelGroupManager::clear() {$/;"	f	class:BSLevelGroupManager	signature:()
clear	worker/UUID.cpp	/^void UUID::clear()$/;"	f	class:UUID	signature:()
close	File/FileSystemPKG.cpp	/^void FileSystemPKG::File::close() {$/;"	f	class:FileSystemPKG::File	signature:()
close	File/FileSystemPKG.cpp	/^void FileSystemPKG::FileInMemory::close() {$/;"	f	class:FileSystemPKG::FileInMemory	signature:()
codeId	RedeemPacket.h	/^    u32 codeId = 0;$/;"	m	struct:RefCounted	access:public
collect	worker/BSGoldMine.cpp	/^bool BSGoldMine::collect(u32 id, u32 num,s32 *addDiamond)$/;"	f	class:BSGoldMine	signature:(u32 id, u32 num,s32 *addDiamond)
compare	table/TableBase.cpp	/^	int Field_float::compare(const Field_float &other) const {$/;"	f	class:tbl::Field_float	signature:(const Field_float &other) const
compare	table/TableBase.cpp	/^	int Field_int::compare(s32 _value) const {$/;"	f	class:tbl::Field_int	signature:(s32 _value) const
compare	table/TableBase.cpp	/^	int Field_string::compare(const str8 &_value) const {$/;"	f	class:tbl::Field_string	signature:(const str8 &_value) const
compare	table/TableBase.cpp	/^	int Field_uint::compare(const Field_uint &other) const {$/;"	f	class:tbl::Field_uint	signature:(const Field_uint &other) const
compare	table/TableBase.cpp	/^    int Field_float::compare(f32 _value) const {$/;"	f	class:tbl::Field_float	signature:(f32 _value) const
compare	table/TableBase.cpp	/^    int Field_int::compare(const Field_int &other) const {$/;"	f	class:tbl::Field_int	signature:(const Field_int &other) const
compare	table/TableBase.cpp	/^    int Field_string::compare(const Field_string &other) const {$/;"	f	class:tbl::Field_string	signature:(const Field_string &other) const
compare	table/TableBase.cpp	/^    int Field_uint::compare(u32 _value) const {$/;"	f	class:tbl::Field_uint	signature:(u32 _value) const
compare	table/Table_Registration.cpp	/^int Record_Registration::compare(u32 _Id,u32 _StepId) const {$/;"	f	class:tbl::Record_Registration	signature:(u32 _Id,u32 _StepId) const
compare	table/Table_award.cpp	/^int Record_award::compare(u32 _AwardId) const {$/;"	f	class:tbl::Record_award	signature:(u32 _AwardId) const
compare	table/Table_buff.cpp	/^int Record_buff::compare(u32 _BuffID) const {$/;"	f	class:tbl::Record_buff	signature:(u32 _BuffID) const
compare	table/Table_cage.cpp	/^int Record_cage::compare(u32 _Id) const {$/;"	f	class:tbl::Record_cage	signature:(u32 _Id) const
compare	table/Table_coupon.cpp	/^int Record_coupon::compare(u32 _CouponId) const {$/;"	f	class:tbl::Record_coupon	signature:(u32 _CouponId) const
compare	table/Table_dialog.cpp	/^int Record_dialog::compare(u32 _LevelID,u32 _WaveID,u32 _DialogID) const {$/;"	f	class:tbl::Record_dialog	signature:(u32 _LevelID,u32 _WaveID,u32 _DialogID) const
compare	table/Table_diamond_shop.cpp	/^int Record_diamond_shop::compare(u32 _Id) const {$/;"	f	class:tbl::Record_diamond_shop	signature:(u32 _Id) const
compare	table/Table_force_guide.cpp	/^int Record_force_guide::compare(u32 _GroupId,u32 _StepId) const {$/;"	f	class:tbl::Record_force_guide	signature:(u32 _GroupId,u32 _StepId) const
compare	table/Table_gold_mine.cpp	/^int Record_gold_mine::compare(u32 _Id) const {$/;"	f	class:tbl::Record_gold_mine	signature:(u32 _Id) const
compare	table/Table_herorune.cpp	/^int Record_herorune::compare(u32 _RuneClass,u32 _RuneRank) const {$/;"	f	class:tbl::Record_herorune	signature:(u32 _RuneClass,u32 _RuneRank) const
compare	table/Table_item_store.cpp	/^int Record_item_store::compare(u32 _id) const {$/;"	f	class:tbl::Record_item_store	signature:(u32 _id) const
compare	table/Table_level.cpp	/^int Record_level::compare(u32 _LevelId) const {$/;"	f	class:tbl::Record_level	signature:(u32 _LevelId) const
compare	table/Table_levelclass.cpp	/^int Record_levelclass::compare(u32 _ID) const {$/;"	f	class:tbl::Record_levelclass	signature:(u32 _ID) const
compare	table/Table_mission.cpp	/^int Record_mission::compare(u32 _Id) const {$/;"	f	class:tbl::Record_mission	signature:(u32 _Id) const
compare	table/Table_monster.cpp	/^int Record_monster::compare(u32 _MonsterID) const {$/;"	f	class:tbl::Record_monster	signature:(u32 _MonsterID) const
compare	table/Table_object.cpp	/^int Record_object::compare(u32 _ObjectId) const {$/;"	f	class:tbl::Record_object	signature:(u32 _ObjectId) const
compare	table/Table_platform.cpp	/^int Record_platform::compare(u32 _Category) const {$/;"	f	class:tbl::Record_platform	signature:(u32 _Category) const
compare	table/Table_spell.cpp	/^int Record_spell::compare(u32 _SpellId) const {$/;"	f	class:tbl::Record_spell	signature:(u32 _SpellId) const
compare	table/Table_sub_wave.cpp	/^int Record_sub_wave::compare(u32 _SubWaveId) const {$/;"	f	class:tbl::Record_sub_wave	signature:(u32 _SubWaveId) const
compare	table/Table_tech.cpp	/^int Record_tech::compare(u32 _Slot,u32 _Rank) const {$/;"	f	class:tbl::Record_tech	signature:(u32 _Slot,u32 _Rank) const
compare	table/Table_tower.cpp	/^int Record_tower::compare(u32 _TowerID) const {$/;"	f	class:tbl::Record_tower	signature:(u32 _TowerID) const
compare	table/Table_training.cpp	/^int Record_training::compare(u32 _Class,u32 _Slot,u32 _AdvancedTimes) const {$/;"	f	class:tbl::Record_training	signature:(u32 _Class,u32 _Slot,u32 _AdvancedTimes) const
compare	table/Table_wave.cpp	/^int Record_wave::compare(u32 _LevelId,u32 _WaveId) const {$/;"	f	class:tbl::Record_wave	signature:(u32 _LevelId,u32 _WaveId) const
compare	worker/UUID.cpp	/^int UUID::compare(const UUID &other) const {$/;"	f	class:UUID	signature:(const UUID &other) const
convertFromString	DateTime.cpp	/^bool Date::convertFromString(const str8 &s) {$/;"	f	class:Date	signature:(const str8 &s)
convertFromString	DateTime.cpp	/^bool DateTime::convertFromString(const str8 &s) {$/;"	f	class:DateTime	signature:(const str8 &s)
convertFromString	DateTime.cpp	/^bool Time::convertFromString(const str8 &s) {$/;"	f	class:Time	signature:(const str8 &s)
convertFromString	DateTime.h	/^    bool convertFromString(const str8 &s);$/;"	p	struct:Date	access:public	signature:(const str8 &s)
convertFromString	DateTime.h	/^    bool convertFromString(const str8 &s);$/;"	p	struct:Time	access:public	signature:(const str8 &s)
convertToString	DateTime.cpp	/^str8 Date::convertToString() const {$/;"	f	class:Date	signature:() const
convertToString	DateTime.cpp	/^str8 DateTime::convertToString() const {$/;"	f	class:DateTime	signature:() const
convertToString	DateTime.cpp	/^str8 Time::convertToString() const {$/;"	f	class:Time	signature:() const
convertToString	DateTime.h	/^    str8 convertToString() const;$/;"	p	struct:Date	access:public
convertToString	DateTime.h	/^    str8 convertToString() const;$/;"	p	struct:Time	access:public
cost	manager/BSCouponManager.h	/^    vn::u32 cost = 0;$/;"	m	struct:AllocatedObject	access:public
couponId	manager/BSCouponManager.h	/^    vn::u32 couponId = 0;$/;"	m	struct:AllocatedObject	access:public
create	clientlisten/ClientListen.cpp	/^Link_TCP_Listen * ClientListen::create() {$/;"	f	class:ClientListen	signature:()
create	manager/DC_DataBase.cpp	/^DataCenter * DC_DataBase::create() {$/;"	f	class:DC_DataBase	signature:()
create	manager/DC_File.cpp	/^DataCenter * DC_File::create() {$/;"	f	class:DC_File	signature:()
create	manager/DataCenter.cpp	/^DataCenter * DataCenterCreator::create() {$/;"	f	class:DataCenterCreator	signature:()
create	manager/DataCenter.h	/^    static DataCenter * create();$/;"	p	struct:DataCenterCreator	access:public
createRequest	PPLink/PPSession.cpp	/^vn::PacketPtr PPSession::createRequest(vn::u32 pid){$/;"	f	class:PPSession	signature:(vn::u32 pid)
createRequest	clientlisten/ClientSession.cpp	/^vn::PacketPtr ClientSession::createRequest(vn::u32 pid) {$/;"	f	class:ClientSession	signature:(vn::u32 pid)
createRequest	worker/LoggedUser.cpp	/^PacketPtr LoggedUser::createRequest(u32 pid)$/;"	f	class:LoggedUser	signature:(u32 pid)
createRequest	worker/PreLoggingUser.cpp	/^PacketPtr PreLoggingUser::createRequest(u32 pid) {$/;"	f	class:PreLoggingUser	signature:(u32 pid)
createUser	manager/DC_DataBase.cpp	/^LoggedUserPtr DC_DataBase::createUser()$/;"	f	class:DC_DataBase	signature:()
createUser	manager/DC_File.cpp	/^LoggedUserPtr DC_File::createUser() {$/;"	f	class:DC_File	signature:()
date	DateTime.h	/^        u32 date;$/;"	m	union:Date::__anon1	access:public
date	Log/DC_File_EventLog.h	/^    DateTime date;$/;"	m	struct:AllocatedObject	access:public
day	DateTime.h	/^            u32 day : 8;$/;"	m	struct:Date::__anon1::__anon2	access:public
dayInYear	manager/BSRegistrationManager.cpp	/^u32 BSRegistrationManager::dayInYear(Date date)$/;"	f	class:BSRegistrationManager	signature:(Date date)
daysBetween2Date	manager/BSRegistrationManager.cpp	/^u32 BSRegistrationManager::daysBetween2Date(Date date1, Date date2) {$/;"	f	class:BSRegistrationManager	signature:(Date date1, Date date2)
desc	manager/BSAwardManager.h	/^    str8 desc;$/;"	m	struct:AllocatedObject	access:public
desc	manager/BSCouponManager.h	/^    vn::str8 desc;$/;"	m	struct:AllocatedObject	access:public
destroy	manager/DC_DataBase.cpp	/^void DC_DataBase::destroy(DataCenter *p) {$/;"	f	class:DC_DataBase	signature:(DataCenter *p)
destroy	manager/DC_File.cpp	/^void DC_File::destroy(DataCenter *p) {$/;"	f	class:DC_File	signature:(DataCenter *p)
destroy	manager/DataCenter.cpp	/^void DataCenterCreator::destroy(DataCenter *p) {$/;"	f	class:DataCenterCreator	signature:(DataCenter *p)
destroy	manager/DataCenter.h	/^    static void destroy(DataCenter *p);$/;"	p	struct:DataCenterCreator	access:public	signature:(DataCenter *p)
detach	worker/WorkQueue.cpp	/^void WorkQueue::detach(WorkerPtr worker) {$/;"	f	class:WorkQueue	signature:(WorkerPtr worker)
diamond	worker/BSPlayerBaseInfo.cpp	/^s32 BSPlayerBaseInfo::diamond()$/;"	f	class:BSPlayerBaseInfo	signature:()
diamonds	RedeemPacket.h	/^    u32 diamonds = 0;$/;"	m	struct:RefCounted	access:public
diamonds	manager/BSAwardManager.h	/^    s32 diamonds = 0;$/;"	m	struct:AllocatedObject	access:public
disableList	worker/BSForceGuide.cpp	/^const std::set<u32> & BSForceGuide::disableList()$/;"	f	class:BSForceGuide	signature:()
draw	manager/BSAwardManager.cpp	/^u32 BSAwardManager::draw(std::vector<std::pair<const BSAward *, u32>> &pool, const BSAward *&generated) {$/;"	f	class:BSAwardManager	signature:(std::vector<std::pair<const BSAward *, u32>> &pool, const BSAward *&generated)
erase	worker/BSForceGuide.cpp	/^void BSForceGuide::erase(u32 data)$/;"	f	class:BSForceGuide	signature:(u32 data)
extraWeight	manager/BSAwardManager.h	/^    u32 extraWeight = 0;$/;"	m	struct:AllocatedObject	access:public
finalize	OPTDServer.cpp	/^void OPTDServer::finalize() {$/;"	f	class:OPTDServer	signature:()
finalize	PPLink/PPLinkManger.cpp	/^void PPLinkManger::finalize(){$/;"	f	class:PPLinkManger	signature:()
find	manager/BSAwardManager.cpp	/^const BSAward * BSAwardManager::find(u32 awardId) {$/;"	f	class:BSAwardManager	signature:(u32 awardId)
find	manager/BSCouponManager.cpp	/^const BSCoupon * BSCouponManager::find(LoggedUser *user, u32 couponId) {$/;"	f	class:BSCouponManager	signature:(LoggedUser *user, u32 couponId)
find	manager/BSCouponManager.cpp	/^const BSCoupon * BSCouponManager::find(u32 couponId) {$/;"	f	class:BSCouponManager	signature:(u32 couponId)
find	table/Table_Registration.cpp	/^size_t Table_Registration::find(u32 _Id,u32 _StepId) {$/;"	f	class:tbl::Table_Registration	signature:(u32 _Id,u32 _StepId)
find	table/Table_award.cpp	/^size_t Table_award::find(u32 _AwardId) {$/;"	f	class:tbl::Table_award	signature:(u32 _AwardId)
find	table/Table_buff.cpp	/^size_t Table_buff::find(u32 _BuffID) {$/;"	f	class:tbl::Table_buff	signature:(u32 _BuffID)
find	table/Table_cage.cpp	/^size_t Table_cage::find(u32 _Id) {$/;"	f	class:tbl::Table_cage	signature:(u32 _Id)
find	table/Table_coupon.cpp	/^size_t Table_coupon::find(u32 _CouponId) {$/;"	f	class:tbl::Table_coupon	signature:(u32 _CouponId)
find	table/Table_dialog.cpp	/^size_t Table_dialog::find(u32 _LevelID,u32 _WaveID,u32 _DialogID) {$/;"	f	class:tbl::Table_dialog	signature:(u32 _LevelID,u32 _WaveID,u32 _DialogID)
find	table/Table_diamond_shop.cpp	/^size_t Table_diamond_shop::find(u32 _Id) {$/;"	f	class:tbl::Table_diamond_shop	signature:(u32 _Id)
find	table/Table_force_guide.cpp	/^size_t Table_force_guide::find(u32 _GroupId,u32 _StepId) {$/;"	f	class:tbl::Table_force_guide	signature:(u32 _GroupId,u32 _StepId)
find	table/Table_gold_mine.cpp	/^size_t Table_gold_mine::find(u32 _Id) {$/;"	f	class:tbl::Table_gold_mine	signature:(u32 _Id)
find	table/Table_herorune.cpp	/^size_t Table_herorune::find(u32 _RuneClass,u32 _RuneRank) {$/;"	f	class:tbl::Table_herorune	signature:(u32 _RuneClass,u32 _RuneRank)
find	table/Table_item_store.cpp	/^size_t Table_item_store::find(u32 _id) {$/;"	f	class:tbl::Table_item_store	signature:(u32 _id)
find	table/Table_level.cpp	/^size_t Table_level::find(u32 _LevelId) {$/;"	f	class:tbl::Table_level	signature:(u32 _LevelId)
find	table/Table_levelclass.cpp	/^size_t Table_levelclass::find(u32 _ID) {$/;"	f	class:tbl::Table_levelclass	signature:(u32 _ID)
find	table/Table_mission.cpp	/^size_t Table_mission::find(u32 _Id) {$/;"	f	class:tbl::Table_mission	signature:(u32 _Id)
find	table/Table_monster.cpp	/^size_t Table_monster::find(u32 _MonsterID) {$/;"	f	class:tbl::Table_monster	signature:(u32 _MonsterID)
find	table/Table_object.cpp	/^size_t Table_object::find(u32 _ObjectId) {$/;"	f	class:tbl::Table_object	signature:(u32 _ObjectId)
find	table/Table_platform.cpp	/^size_t Table_platform::find(u32 _Category) {$/;"	f	class:tbl::Table_platform	signature:(u32 _Category)
find	table/Table_spell.cpp	/^size_t Table_spell::find(u32 _SpellId) {$/;"	f	class:tbl::Table_spell	signature:(u32 _SpellId)
find	table/Table_sub_wave.cpp	/^size_t Table_sub_wave::find(u32 _SubWaveId) {$/;"	f	class:tbl::Table_sub_wave	signature:(u32 _SubWaveId)
find	table/Table_tech.cpp	/^size_t Table_tech::find(u32 _Slot,u32 _Rank) {$/;"	f	class:tbl::Table_tech	signature:(u32 _Slot,u32 _Rank)
find	table/Table_tower.cpp	/^size_t Table_tower::find(u32 _TowerID) {$/;"	f	class:tbl::Table_tower	signature:(u32 _TowerID)
find	table/Table_training.cpp	/^size_t Table_training::find(u32 _Class,u32 _Slot,u32 _AdvancedTimes) {$/;"	f	class:tbl::Table_training	signature:(u32 _Class,u32 _Slot,u32 _AdvancedTimes)
find	table/Table_wave.cpp	/^size_t Table_wave::find(u32 _LevelId,u32 _WaveId) {$/;"	f	class:tbl::Table_wave	signature:(u32 _LevelId,u32 _WaveId)
find	worker/BSLevel.cpp	/^BSLevel::LevelInfo * BSLevel::find(u32 id) {$/;"	f	class:BSLevel	signature:(u32 id)
findGroup	manager/BSLevelGroupInfoManager.cpp	/^const BSLevelGroupInfo * BSLevelGroupInfoManager::findGroup(u32 groupId) {$/;"	f	class:BSLevelGroupInfoManager	signature:(u32 groupId)
findUser	manager/LoggedUserManager.cpp	/^LoggedUserPtr LoggedUserManager::findUser(const std::string &strUUId) {$/;"	f	class:LoggedUserManager	signature:(const std::string &strUUId)
find_herorune	manager/BSFactory.cpp	/^const tbl::Record_herorune * BSFactory::find_herorune(u32 runeClass, u32 rank)$/;"	f	class:BSFactory	signature:(u32 runeClass, u32 rank)
find_itemStore	manager/BSFactory.cpp	/^const tbl::Record_item_store * BSFactory::find_itemStore(u32 id)$/;"	f	class:BSFactory	signature:(u32 id)
find_level	manager/BSFactory.cpp	/^const tbl::Record_level * BSFactory::find_level(u32 id)$/;"	f	class:BSFactory	signature:(u32 id)
find_mission	manager/BSMissionManager.cpp	/^BSMissionManager::Mission * BSMissionManager::find_mission(u32 id) {$/;"	f	class:BSMissionManager	signature:(u32 id)
find_product	manager/BSDiamondShop.cpp	/^BSDiamondShop::Product * BSDiamondShop::find_product(u32 id) {$/;"	f	class:BSDiamondShop	signature:(u32 id)
find_product	manager/BSRmbShopManager.cpp	/^BSRmbShopManager::Product * BSRmbShopManager::find_product(u32 id)$/;"	f	class:BSRmbShopManager	signature:(u32 id)
find_tower	manager/BSFactory.cpp	/^const tbl::Record_tower * BSFactory::find_tower(u32 id)$/;"	f	class:BSFactory	signature:(u32 id)
fini	manager/DC_DataBase.cpp	/^void DC_DataBase::fini()$/;"	f	class:DC_DataBase	signature:()
fini	manager/DC_File.cpp	/^void DC_File::fini()$/;"	f	class:DC_File	signature:()
fini	manager/LoggedUserManager.cpp	/^void LoggedUserManager::fini() {$/;"	f	class:LoggedUserManager	signature:()
fini	manager/WorkQueueManager.cpp	/^void WorkQueueManager::fini() {$/;"	f	class:WorkQueueManager	signature:()
fini	table/Table_Registration.cpp	/^void Table_Registration::fini() {$/;"	f	class:tbl::Table_Registration	signature:()
fini	table/Table_award.cpp	/^void Table_award::fini() {$/;"	f	class:tbl::Table_award	signature:()
fini	table/Table_buff.cpp	/^void Table_buff::fini() {$/;"	f	class:tbl::Table_buff	signature:()
fini	table/Table_cage.cpp	/^void Table_cage::fini() {$/;"	f	class:tbl::Table_cage	signature:()
fini	table/Table_coupon.cpp	/^void Table_coupon::fini() {$/;"	f	class:tbl::Table_coupon	signature:()
fini	table/Table_dialog.cpp	/^void Table_dialog::fini() {$/;"	f	class:tbl::Table_dialog	signature:()
fini	table/Table_diamond_shop.cpp	/^void Table_diamond_shop::fini() {$/;"	f	class:tbl::Table_diamond_shop	signature:()
fini	table/Table_force_guide.cpp	/^void Table_force_guide::fini() {$/;"	f	class:tbl::Table_force_guide	signature:()
fini	table/Table_gold_mine.cpp	/^void Table_gold_mine::fini() {$/;"	f	class:tbl::Table_gold_mine	signature:()
fini	table/Table_herorune.cpp	/^void Table_herorune::fini() {$/;"	f	class:tbl::Table_herorune	signature:()
fini	table/Table_hint.cpp	/^void Table_hint::fini() {$/;"	f	class:tbl::Table_hint	signature:()
fini	table/Table_item_store.cpp	/^void Table_item_store::fini() {$/;"	f	class:tbl::Table_item_store	signature:()
fini	table/Table_level.cpp	/^void Table_level::fini() {$/;"	f	class:tbl::Table_level	signature:()
fini	table/Table_levelclass.cpp	/^void Table_levelclass::fini() {$/;"	f	class:tbl::Table_levelclass	signature:()
fini	table/Table_mission.cpp	/^void Table_mission::fini() {$/;"	f	class:tbl::Table_mission	signature:()
fini	table/Table_monster.cpp	/^void Table_monster::fini() {$/;"	f	class:tbl::Table_monster	signature:()
fini	table/Table_object.cpp	/^void Table_object::fini() {$/;"	f	class:tbl::Table_object	signature:()
fini	table/Table_platform.cpp	/^void Table_platform::fini() {$/;"	f	class:tbl::Table_platform	signature:()
fini	table/Table_progress.cpp	/^void Table_progress::fini() {$/;"	f	class:tbl::Table_progress	signature:()
fini	table/Table_spell.cpp	/^void Table_spell::fini() {$/;"	f	class:tbl::Table_spell	signature:()
fini	table/Table_sub_wave.cpp	/^void Table_sub_wave::fini() {$/;"	f	class:tbl::Table_sub_wave	signature:()
fini	table/Table_tech.cpp	/^void Table_tech::fini() {$/;"	f	class:tbl::Table_tech	signature:()
fini	table/Table_tower.cpp	/^void Table_tower::fini() {$/;"	f	class:tbl::Table_tower	signature:()
fini	table/Table_training.cpp	/^void Table_training::fini() {$/;"	f	class:tbl::Table_training	signature:()
fini	table/Table_wave.cpp	/^void Table_wave::fini() {$/;"	f	class:tbl::Table_wave	signature:()
finishOrder	manager/DC_DataBase.cpp	/^bool DC_DataBase::finishOrder(const vn::str8 &orderId, const UUID &userId, bool confirmed) {$/;"	f	class:DC_DataBase	signature:(const vn::str8 &orderId, const UUID &userId, bool confirmed)
finishOrder	manager/DC_File.cpp	/^bool DC_File::finishOrder(const vn::str8 &orderId, const UUID &userId, bool confirmed) {$/;"	f	class:DC_File	signature:(const vn::str8 &orderId, const UUID &userId, bool confirmed)
generate	manager/BSAwardManager.cpp	/^std::vector<std::pair<const BSAward *, u32>> BSAwardManager::generate() {$/;"	f	class:BSAwardManager	signature:()
generate	manager/BSCouponManager.cpp	/^const BSCoupon * BSCouponManager::generate(LoggedUser *user) {$/;"	f	class:BSCouponManager	signature:(LoggedUser *user)
generate	worker/UUID.cpp	/^void UUID::generate() {$/;"	f	class:UUID	signature:()
generateOrder	manager/DC_DataBase.cpp	/^vn::str8 DC_DataBase::generateOrder(const UUID &uuid, vn::u32 productId, vn::s32 price) {$/;"	f	class:DC_DataBase	signature:(const UUID &uuid, vn::u32 productId, vn::s32 price)
generateOrder	manager/DC_File.cpp	/^vn::str8 DC_File::generateOrder(const UUID &uuid, vn::u32 productId, vn::s32 price) {$/;"	f	class:DC_File	signature:(const UUID &uuid, vn::u32 productId, vn::s32 price)
getTechItem	manager/BSTechManager.cpp	/^const BSTechManager::TechItem * BSTechManager::getTechItem(u32 slot, u32 rank)$/;"	f	class:BSTechManager	signature:(u32 slot, u32 rank)
getTrainingInfo	manager/BSTowerManager.cpp	/^const BSTowerManager::TrainingInfo * BSTowerManager::getTrainingInfo(u32 index, u32 num, u32 count)$/;"	f	class:BSTowerManager	signature:(u32 index, u32 num, u32 count)
groupId	manager/BSAwardManager.h	/^    u32 groupId = 0;$/;"	m	struct:AllocatedObject	access:public
heroClassId	manager/BSCouponManager.h	/^	vn::u32 heroClassId = 0;$/;"	m	struct:BSCoupon	access:public
heroList	worker/BSHero.cpp	/^const std::vector<BSHero::HeroInfo> & BSHero::heroList()$/;"	f	class:BSHero	signature:()
herorune	manager/BSFactory.cpp	/^tbl::Table_herorune & BSFactory::herorune()$/;"	f	class:BSFactory	signature:()
hour	DateTime.h	/^            u32 hour : 8;$/;"	m	struct:Time::__anon3::__anon4	access:public
imageId	manager/BSAwardManager.h	/^    u32 imageId = 0;$/;"	m	struct:AllocatedObject	access:public
imageId	manager/BSCouponManager.h	/^    vn::u32 imageId = 0;$/;"	m	struct:AllocatedObject	access:public
init	PPLink/PPLinkManger.cpp	/^bool PPLinkManger::init(vn::LinkPool * linkPool) {$/;"	f	class:PPLinkManger	signature:(vn::LinkPool * linkPool)
init	manager/BSRmbShopManager.cpp	/^bool BSRmbShopManager::init(u32 fsId, const str8 &path)$/;"	f	class:BSRmbShopManager	signature:(u32 fsId, const str8 &path)
init	manager/DC_DataBase.cpp	/^bool DC_DataBase::init()$/;"	f	class:DC_DataBase	signature:()
init	manager/DC_File.cpp	/^bool DC_File::init()$/;"	f	class:DC_File	signature:()
init	manager/WorkQueueManager.cpp	/^void WorkQueueManager::init(size_t numWorkQueues) {$/;"	f	class:WorkQueueManager	signature:(size_t numWorkQueues)
init	table/Table_Registration.cpp	/^bool Table_Registration::init(DataStream &stream) {$/;"	f	class:tbl::Table_Registration	signature:(DataStream &stream)
init	table/Table_Registration.cpp	/^bool Table_Registration::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_Registration	signature:(u32 fsId, const str8& path)
init	table/Table_award.cpp	/^bool Table_award::init(DataStream &stream) {$/;"	f	class:tbl::Table_award	signature:(DataStream &stream)
init	table/Table_award.cpp	/^bool Table_award::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_award	signature:(u32 fsId, const str8& path)
init	table/Table_buff.cpp	/^bool Table_buff::init(DataStream &stream) {$/;"	f	class:tbl::Table_buff	signature:(DataStream &stream)
init	table/Table_buff.cpp	/^bool Table_buff::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_buff	signature:(u32 fsId, const str8& path)
init	table/Table_cage.cpp	/^bool Table_cage::init(DataStream &stream) {$/;"	f	class:tbl::Table_cage	signature:(DataStream &stream)
init	table/Table_cage.cpp	/^bool Table_cage::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_cage	signature:(u32 fsId, const str8& path)
init	table/Table_coupon.cpp	/^bool Table_coupon::init(DataStream &stream) {$/;"	f	class:tbl::Table_coupon	signature:(DataStream &stream)
init	table/Table_coupon.cpp	/^bool Table_coupon::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_coupon	signature:(u32 fsId, const str8& path)
init	table/Table_dialog.cpp	/^bool Table_dialog::init(DataStream &stream) {$/;"	f	class:tbl::Table_dialog	signature:(DataStream &stream)
init	table/Table_dialog.cpp	/^bool Table_dialog::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_dialog	signature:(u32 fsId, const str8& path)
init	table/Table_diamond_shop.cpp	/^bool Table_diamond_shop::init(DataStream &stream) {$/;"	f	class:tbl::Table_diamond_shop	signature:(DataStream &stream)
init	table/Table_diamond_shop.cpp	/^bool Table_diamond_shop::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_diamond_shop	signature:(u32 fsId, const str8& path)
init	table/Table_force_guide.cpp	/^bool Table_force_guide::init(DataStream &stream) {$/;"	f	class:tbl::Table_force_guide	signature:(DataStream &stream)
init	table/Table_force_guide.cpp	/^bool Table_force_guide::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_force_guide	signature:(u32 fsId, const str8& path)
init	table/Table_gold_mine.cpp	/^bool Table_gold_mine::init(DataStream &stream) {$/;"	f	class:tbl::Table_gold_mine	signature:(DataStream &stream)
init	table/Table_gold_mine.cpp	/^bool Table_gold_mine::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_gold_mine	signature:(u32 fsId, const str8& path)
init	table/Table_herorune.cpp	/^bool Table_herorune::init(DataStream &stream) {$/;"	f	class:tbl::Table_herorune	signature:(DataStream &stream)
init	table/Table_herorune.cpp	/^bool Table_herorune::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_herorune	signature:(u32 fsId, const str8& path)
init	table/Table_hint.cpp	/^bool Table_hint::init(DataStream &stream) {$/;"	f	class:tbl::Table_hint	signature:(DataStream &stream)
init	table/Table_hint.cpp	/^bool Table_hint::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_hint	signature:(u32 fsId, const str8& path)
init	table/Table_item_store.cpp	/^bool Table_item_store::init(DataStream &stream) {$/;"	f	class:tbl::Table_item_store	signature:(DataStream &stream)
init	table/Table_item_store.cpp	/^bool Table_item_store::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_item_store	signature:(u32 fsId, const str8& path)
init	table/Table_level.cpp	/^bool Table_level::init(DataStream &stream) {$/;"	f	class:tbl::Table_level	signature:(DataStream &stream)
init	table/Table_level.cpp	/^bool Table_level::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_level	signature:(u32 fsId, const str8& path)
init	table/Table_levelclass.cpp	/^bool Table_levelclass::init(DataStream &stream) {$/;"	f	class:tbl::Table_levelclass	signature:(DataStream &stream)
init	table/Table_levelclass.cpp	/^bool Table_levelclass::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_levelclass	signature:(u32 fsId, const str8& path)
init	table/Table_mission.cpp	/^bool Table_mission::init(DataStream &stream) {$/;"	f	class:tbl::Table_mission	signature:(DataStream &stream)
init	table/Table_mission.cpp	/^bool Table_mission::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_mission	signature:(u32 fsId, const str8& path)
init	table/Table_monster.cpp	/^bool Table_monster::init(DataStream &stream) {$/;"	f	class:tbl::Table_monster	signature:(DataStream &stream)
init	table/Table_monster.cpp	/^bool Table_monster::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_monster	signature:(u32 fsId, const str8& path)
init	table/Table_object.cpp	/^bool Table_object::init(DataStream &stream) {$/;"	f	class:tbl::Table_object	signature:(DataStream &stream)
init	table/Table_object.cpp	/^bool Table_object::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_object	signature:(u32 fsId, const str8& path)
init	table/Table_platform.cpp	/^bool Table_platform::init(DataStream &stream) {$/;"	f	class:tbl::Table_platform	signature:(DataStream &stream)
init	table/Table_platform.cpp	/^bool Table_platform::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_platform	signature:(u32 fsId, const str8& path)
init	table/Table_progress.cpp	/^bool Table_progress::init(DataStream &stream) {$/;"	f	class:tbl::Table_progress	signature:(DataStream &stream)
init	table/Table_progress.cpp	/^bool Table_progress::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_progress	signature:(u32 fsId, const str8& path)
init	table/Table_spell.cpp	/^bool Table_spell::init(DataStream &stream) {$/;"	f	class:tbl::Table_spell	signature:(DataStream &stream)
init	table/Table_spell.cpp	/^bool Table_spell::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_spell	signature:(u32 fsId, const str8& path)
init	table/Table_sub_wave.cpp	/^bool Table_sub_wave::init(DataStream &stream) {$/;"	f	class:tbl::Table_sub_wave	signature:(DataStream &stream)
init	table/Table_sub_wave.cpp	/^bool Table_sub_wave::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_sub_wave	signature:(u32 fsId, const str8& path)
init	table/Table_tech.cpp	/^bool Table_tech::init(DataStream &stream) {$/;"	f	class:tbl::Table_tech	signature:(DataStream &stream)
init	table/Table_tech.cpp	/^bool Table_tech::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_tech	signature:(u32 fsId, const str8& path)
init	table/Table_tower.cpp	/^bool Table_tower::init(DataStream &stream) {$/;"	f	class:tbl::Table_tower	signature:(DataStream &stream)
init	table/Table_tower.cpp	/^bool Table_tower::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_tower	signature:(u32 fsId, const str8& path)
init	table/Table_training.cpp	/^bool Table_training::init(DataStream &stream) {$/;"	f	class:tbl::Table_training	signature:(DataStream &stream)
init	table/Table_training.cpp	/^bool Table_training::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_training	signature:(u32 fsId, const str8& path)
init	table/Table_wave.cpp	/^bool Table_wave::init(DataStream &stream) {$/;"	f	class:tbl::Table_wave	signature:(DataStream &stream)
init	table/Table_wave.cpp	/^bool Table_wave::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_wave	signature:(u32 fsId, const str8& path)
init	worker/BSForceGuide.cpp	/^void BSForceGuide::init()$/;"	f	class:BSForceGuide	signature:()
init	worker/BSGoldMine.cpp	/^void BSGoldMine::init()$/;"	f	class:BSGoldMine	signature:()
init	worker/BSHero.cpp	/^void BSHero::init()$/;"	f	class:BSHero	signature:()
init	worker/BSIntrusion.cpp	/^void BSIntrusion::init()$/;"	f	class:BSIntrusion	signature:()
init	worker/BSItemStore.cpp	/^void BSItemStore::init()$/;"	f	class:BSItemStore	signature:()
init	worker/BSLevel.cpp	/^void BSLevel::init()$/;"	f	class:BSLevel	signature:()
init	worker/BSMonsterMap.cpp	/^void BSMonsterMap::init()$/;"	f	class:BSMonsterMap	signature:()
init	worker/BSPlayerBaseInfo.cpp	/^void BSPlayerBaseInfo::init(vn::s32 diamond)$/;"	f	class:BSPlayerBaseInfo	signature:(vn::s32 diamond)
init	worker/BSTechUpgrade.cpp	/^void BSTechUpgrade::init()$/;"	f	class:BSTechUpgrade	signature:()
init	worker/BSTowerUpgrade.cpp	/^void BSTowerUpgrade::init()$/;"	f	class:BSTowerUpgrade	signature:()
initData	manager/BSAwardManager.cpp	/^void BSAwardManager::initData(const tbl::Table_award &table) {$/;"	f	class:BSAwardManager	signature:(const tbl::Table_award &table)
initData	manager/BSCouponManager.cpp	/^void BSCouponManager::initData(const tbl::Table_coupon &table) {$/;"	f	class:BSCouponManager	signature:(const tbl::Table_coupon &table)
initData	manager/BSDiamondShop.cpp	/^void BSDiamondShop::initData(const tbl::Table_diamond_shop &table) {$/;"	f	class:BSDiamondShop	signature:(const tbl::Table_diamond_shop &table)
initData	manager/BSLevelGroupInfoManager.cpp	/^void BSLevelGroupInfoManager::initData(const tbl::Table_levelclass &table) {$/;"	f	class:BSLevelGroupInfoManager	signature:(const tbl::Table_levelclass &table)
initData	manager/BSMissionManager.cpp	/^void BSMissionManager::initData(const tbl::Table_mission &table) {$/;"	f	class:BSMissionManager	signature:(const tbl::Table_mission &table)
initData	manager/BSRegistrationManager.cpp	/^void BSRegistrationManager::initData(const tbl::Table_Registration &table) {$/;"	f	class:BSRegistrationManager	signature:(const tbl::Table_Registration &table)
initData	manager/BSTechManager.cpp	/^void BSTechManager::initData(const tbl::Table_tech &table)$/;"	f	class:BSTechManager	signature:(const tbl::Table_tech &table)
initData	manager/BSTowerManager.cpp	/^void BSTowerManager::initData(const tbl::Table_training &table)$/;"	f	class:BSTowerManager	signature:(const tbl::Table_training &table)
initData	worker/BSPlatformStoreInfo.cpp	/^void BSPlatformStoreInfo::initData(const tbl::Table_platform &table) {$/;"	f	class:BSPlatformStoreInfo	signature:(const tbl::Table_platform &table)
initialize	OPTDServer.cpp	/^bool OPTDServer::initialize(int argc, const char *argv[])$/;"	f	class:OPTDServer	signature:(int argc, const char *argv[])
insert	worker/BSForceGuide.cpp	/^bool BSForceGuide::insert(u32 data) {$/;"	f	class:BSForceGuide	signature:(u32 data)
intrude	worker/BSLevel.cpp	/^void BSLevel::intrude(u32 levelId) {$/;"	f	class:BSLevel	signature:(u32 levelId)
intrude	worker/BSLevelGroup.cpp	/^void BSLevelGroupManager::intrude(u32 groupId) {$/;"	f	class:BSLevelGroupManager	signature:(u32 groupId)
intrusion	Log/DC_DataBase_EventLog.h	/^    bool intrusion = false;$/;"	m	struct:DC_DataBase_EventLog_User	access:public
intrusion	Log/DC_File_EventLog.h	/^    bool intrusion = false;$/;"	m	struct:DC_File_EventLog_User	access:public
intrusion	worker/BSIntrusion.cpp	/^void BSIntrusion::intrusion()$/;"	f	class:BSIntrusion	signature:()
intrusion	worker/BSLevel.cpp	/^bool BSLevel::intrusion(u32 levelId) {$/;"	f	class:BSLevel	signature:(u32 levelId)
intrusion	worker/BSLevelGroup.cpp	/^bool BSLevelGroupManager::intrusion(u32 groupId) {$/;"	f	class:BSLevelGroupManager	signature:(u32 groupId)
isBetween2Time	manager/BSRegistrationManager.cpp	/^bool BSRegistrationManager::isBetween2Time(DateTime date1,DateTime date2,DateTime date3) {$/;"	f	class:BSRegistrationManager	signature:(DateTime date1,DateTime date2,DateTime date3)
isLeap	manager/BSRegistrationManager.cpp	/^bool BSRegistrationManager::isLeap(u32 year) {$/;"	f	class:BSRegistrationManager	signature:(u32 year)
itemMap	worker/BSItemStore.cpp	/^ std::map<u32, u32> & BSItemStore::itemMap()$/;"	f	class:BSItemStore	signature:()
itemStore	manager/BSFactory.cpp	/^tbl::Table_item_store & BSFactory::itemStore()$/;"	f	class:BSFactory	signature:()
items	manager/BSAwardManager.h	/^    std::vector<std::pair<u32, u32>> items; \/\/ <id, count>$/;"	m	struct:AllocatedObject	access:public
items	manager/BSCouponManager.h	/^    std::vector<std::pair<u32, u32>> items; \/\/ <id, count>$/;"	m	struct:BSCoupon	access:public
kCT_Diamonds	manager/BSCouponManager.h	/^        kCT_Diamonds = 2,$/;"	e	enum:AllocatedObject::Type
kCT_Hero	manager/BSCouponManager.h	/^        kCT_Hero = 1,$/;"	e	enum:AllocatedObject::Type
kCT_Items	manager/BSCouponManager.h	/^        kCT_Items = 3$/;"	e	enum:AllocatedObject::Type
kELT_UserBeginBattle	Log/DC_File_EventLog.h	/^    kELT_UserBeginBattle,$/;"	e	enum:u32
kELT_UserEndBattle	Log/DC_File_EventLog.h	/^    kELT_UserEndBattle,$/;"	e	enum:u32
kELT_UserLogin	Log/DC_File_EventLog.h	/^    kELT_UserLogin,$/;"	e	enum:u32
kELT_UserLogout	Log/DC_File_EventLog.h	/^    kELT_UserLogout,$/;"	e	enum:u32
kELT_UserSignin	Log/DC_File_EventLog.h	/^    kELT_UserSignin = 1,$/;"	e	enum:u32
kTYPE_UserBeginBattle	Log/DC_DataBase_EventLog.h	/^    kTYPE_UserBeginBattle,$/;"	e	enum:u32
kTYPE_UserEndBattle	Log/DC_DataBase_EventLog.h	/^    kTYPE_UserEndBattle,$/;"	e	enum:u32
kTYPE_UserLogin	Log/DC_DataBase_EventLog.h	/^    kTYPE_UserLogin,$/;"	e	enum:u32
kTYPE_UserLogout	Log/DC_DataBase_EventLog.h	/^    kTYPE_UserLogout,$/;"	e	enum:u32
kTYPE_UserSignin	Log/DC_DataBase_EventLog.h	/^    kTYPE_UserSignin = 1,$/;"	e	enum:u32
last_registration_date	ServerData.h	/^    Date last_registration_date;$/;"	m	struct:vn::AllocatedObject	access:public
level	manager/BSFactory.cpp	/^tbl::Table_level & BSFactory::level()$/;"	f	class:BSFactory	signature:()
levelList	worker/BSLevel.cpp	/^std::map<u32, BSLevel::LevelInfo *> & BSLevel::levelList() {$/;"	f	class:BSLevel	signature:()
load	File/FileSystemPKG.cpp	/^bool FileSystemPKG::load(vn::FileSystem *base, const vn::str8 &fileName) {$/;"	f	class:FileSystemPKG	signature:(vn::FileSystem *base, const vn::str8 &fileName)
load	Log/DC_File_EventLog.cpp	/^void DC_File_EventLog::load(DataStream &stream) {$/;"	f	class:DC_File_EventLog	signature:(DataStream &stream)
load	Log/DC_File_EventLog.cpp	/^void DC_File_EventLog_User::load(DataStream &stream) {$/;"	f	class:DC_File_EventLog_User	signature:(DataStream &stream)
load	Log/DC_File_EventLog.cpp	/^void DC_File_EventLog_User_BeginBattle::load(DataStream &stream) {$/;"	f	class:DC_File_EventLog_User_BeginBattle	signature:(DataStream &stream)
load	Log/DC_File_EventLog.cpp	/^void DC_File_EventLog_User_EndBattle::load(DataStream &stream) {$/;"	f	class:DC_File_EventLog_User_EndBattle	signature:(DataStream &stream)
load	Log/DC_File_EventLog.h	/^    virtual void load(DataStream &stream);$/;"	p	struct:AllocatedObject	access:public	signature:(DataStream &stream)
load	Log/DC_File_EventLog.h	/^    virtual void load(DataStream &stream);$/;"	p	struct:DC_File_EventLog	access:public	signature:(DataStream &stream)
load	Log/DC_File_EventLog.h	/^    virtual void load(DataStream &stream);$/;"	p	struct:DC_File_EventLog_User	access:public	signature:(DataStream &stream)
load	ServerData.cpp	/^void ServerData::load(vn::DataStream &s) {$/;"	f	class:ServerData	signature:(vn::DataStream &s)
load	ServerData.cpp	/^void ServerData::load(vn::Variable_object &obj) {$/;"	f	class:ServerData	signature:(vn::Variable_object &obj)
load	ServerData.h	/^    void load(vn::DataStream &);$/;"	p	struct:vn::AllocatedObject	access:public	signature:(vn::DataStream &)
load	ServerData.h	/^    void load(vn::Variable_object &obj);$/;"	p	struct:vn::AllocatedObject	access:public	signature:(vn::Variable_object &obj)
load	table/Table_Registration.cpp	/^void Record_Registration::load(DataStream &stream) {$/;"	f	class:tbl::Record_Registration	signature:(DataStream &stream)
load	table/Table_award.cpp	/^void Record_award::load(DataStream &stream) {$/;"	f	class:tbl::Record_award	signature:(DataStream &stream)
load	table/Table_buff.cpp	/^void Record_buff::load(DataStream &stream) {$/;"	f	class:tbl::Record_buff	signature:(DataStream &stream)
load	table/Table_cage.cpp	/^void Record_cage::load(DataStream &stream) {$/;"	f	class:tbl::Record_cage	signature:(DataStream &stream)
load	table/Table_coupon.cpp	/^void Record_coupon::load(DataStream &stream) {$/;"	f	class:tbl::Record_coupon	signature:(DataStream &stream)
load	table/Table_dialog.cpp	/^void Record_dialog::load(DataStream &stream) {$/;"	f	class:tbl::Record_dialog	signature:(DataStream &stream)
load	table/Table_diamond_shop.cpp	/^void Record_diamond_shop::load(DataStream &stream) {$/;"	f	class:tbl::Record_diamond_shop	signature:(DataStream &stream)
load	table/Table_force_guide.cpp	/^void Record_force_guide::load(DataStream &stream) {$/;"	f	class:tbl::Record_force_guide	signature:(DataStream &stream)
load	table/Table_gold_mine.cpp	/^void Record_gold_mine::load(DataStream &stream) {$/;"	f	class:tbl::Record_gold_mine	signature:(DataStream &stream)
load	table/Table_herorune.cpp	/^void Record_herorune::load(DataStream &stream) {$/;"	f	class:tbl::Record_herorune	signature:(DataStream &stream)
load	table/Table_hint.cpp	/^void Record_hint::load(DataStream &stream) {$/;"	f	class:tbl::Record_hint	signature:(DataStream &stream)
load	table/Table_item_store.cpp	/^void Record_item_store::load(DataStream &stream) {$/;"	f	class:tbl::Record_item_store	signature:(DataStream &stream)
load	table/Table_level.cpp	/^void Record_level::load(DataStream &stream) {$/;"	f	class:tbl::Record_level	signature:(DataStream &stream)
load	table/Table_levelclass.cpp	/^void Record_levelclass::load(DataStream &stream) {$/;"	f	class:tbl::Record_levelclass	signature:(DataStream &stream)
load	table/Table_mission.cpp	/^void Record_mission::load(DataStream &stream) {$/;"	f	class:tbl::Record_mission	signature:(DataStream &stream)
load	table/Table_monster.cpp	/^void Record_monster::load(DataStream &stream) {$/;"	f	class:tbl::Record_monster	signature:(DataStream &stream)
load	table/Table_object.cpp	/^void Record_object::load(DataStream &stream) {$/;"	f	class:tbl::Record_object	signature:(DataStream &stream)
load	table/Table_platform.cpp	/^void Record_platform::load(DataStream &stream) {$/;"	f	class:tbl::Record_platform	signature:(DataStream &stream)
load	table/Table_progress.cpp	/^void Record_progress::load(DataStream &stream) {$/;"	f	class:tbl::Record_progress	signature:(DataStream &stream)
load	table/Table_spell.cpp	/^void Record_spell::load(DataStream &stream) {$/;"	f	class:tbl::Record_spell	signature:(DataStream &stream)
load	table/Table_sub_wave.cpp	/^void Record_sub_wave::load(DataStream &stream) {$/;"	f	class:tbl::Record_sub_wave	signature:(DataStream &stream)
load	table/Table_tech.cpp	/^void Record_tech::load(DataStream &stream) {$/;"	f	class:tbl::Record_tech	signature:(DataStream &stream)
load	table/Table_tower.cpp	/^void Record_tower::load(DataStream &stream) {$/;"	f	class:tbl::Record_tower	signature:(DataStream &stream)
load	table/Table_training.cpp	/^void Record_training::load(DataStream &stream) {$/;"	f	class:tbl::Record_training	signature:(DataStream &stream)
load	table/Table_wave.cpp	/^void Record_wave::load(DataStream &stream) {$/;"	f	class:tbl::Record_wave	signature:(DataStream &stream)
load	worker/BSForceGuide.cpp	/^void BSForceGuide::load(PreparedQueryResult result)$/;"	f	class:BSForceGuide	signature:(PreparedQueryResult result)
load	worker/BSForceGuide.cpp	/^void BSForceGuide::load(Variable_object &vobj)$/;"	f	class:BSForceGuide	signature:(Variable_object &vobj)
load	worker/BSForceGuide.cpp	/^void BSForceGuide::load(u32 version, DataStream &stream)$/;"	f	class:BSForceGuide	signature:(u32 version, DataStream &stream)
load	worker/BSGoldMine.cpp	/^void BSGoldMine::load(PreparedQueryResult result)$/;"	f	class:BSGoldMine	signature:(PreparedQueryResult result)
load	worker/BSGoldMine.cpp	/^void BSGoldMine::load(Variable_object &vobj) {$/;"	f	class:BSGoldMine	signature:(Variable_object &vobj)
load	worker/BSGoldMine.cpp	/^void BSGoldMine::load(u32 version, DataStream &stream)$/;"	f	class:BSGoldMine	signature:(u32 version, DataStream &stream)
load	worker/BSHero.cpp	/^void BSHero::load(HeroInfo &heroinfo)$/;"	f	class:BSHero	signature:(HeroInfo &heroinfo)
load	worker/BSHero.cpp	/^void BSHero::load(PreparedQueryResult baseinfo)$/;"	f	class:BSHero	signature:(PreparedQueryResult baseinfo)
load	worker/BSHero.cpp	/^void BSHero::load(Variable_object &vobj) {$/;"	f	class:BSHero	signature:(Variable_object &vobj)
load	worker/BSHero.cpp	/^void BSHero::load(u32 version, DataStream &stream)$/;"	f	class:BSHero	signature:(u32 version, DataStream &stream)
load	worker/BSIntrusion.cpp	/^void BSIntrusion::load(PreparedQueryResult baseinfo)$/;"	f	class:BSIntrusion	signature:(PreparedQueryResult baseinfo)
load	worker/BSIntrusion.cpp	/^void BSIntrusion::load(Variable_object &vobj) {$/;"	f	class:BSIntrusion	signature:(Variable_object &vobj)
load	worker/BSIntrusion.cpp	/^void BSIntrusion::load(u32 version, DataStream &stream)$/;"	f	class:BSIntrusion	signature:(u32 version, DataStream &stream)
load	worker/BSItemStore.cpp	/^void BSItemStore::load(PreparedQueryResult result)$/;"	f	class:BSItemStore	signature:(PreparedQueryResult result)
load	worker/BSItemStore.cpp	/^void BSItemStore::load(Variable_object &vobj) {$/;"	f	class:BSItemStore	signature:(Variable_object &vobj)
load	worker/BSItemStore.cpp	/^void BSItemStore::load(u32 version, DataStream &stream)$/;"	f	class:BSItemStore	signature:(u32 version, DataStream &stream)
load	worker/BSLevel.cpp	/^void BSLevel::load(PreparedQueryResult result)$/;"	f	class:BSLevel	signature:(PreparedQueryResult result)
load	worker/BSLevel.cpp	/^void BSLevel::load(Variable_object &vobj) {$/;"	f	class:BSLevel	signature:(Variable_object &vobj)
load	worker/BSLevel.cpp	/^void BSLevel::load(u32 version, DataStream &stream)$/;"	f	class:BSLevel	signature:(u32 version, DataStream &stream)
load	worker/BSLevelGroup.cpp	/^void	BSLevelGroupManager::load(PreparedQueryResult groupResult)$/;"	f	class:BSLevelGroupManager	signature:(PreparedQueryResult groupResult)
load	worker/BSLevelGroup.cpp	/^void BSLevelGroupManager::load(Variable_object &vobj) {$/;"	f	class:BSLevelGroupManager	signature:(Variable_object &vobj)
load	worker/BSLevelGroup.cpp	/^void BSLevelGroupManager::load(u8 version, DataStream &stream) {$/;"	f	class:BSLevelGroupManager	signature:(u8 version, DataStream &stream)
load	worker/BSMission.cpp	/^void BSMission::load(PreparedQueryResult result )$/;"	f	class:BSMission	signature:(PreparedQueryResult result )
load	worker/BSMission.cpp	/^void BSMission::load(Variable_object &vobj) {$/;"	f	class:BSMission	signature:(Variable_object &vobj)
load	worker/BSMission.cpp	/^void BSMission::load(u8 version, DataStream &stream) {$/;"	f	class:BSMission	signature:(u8 version, DataStream &stream)
load	worker/BSMonsterMap.cpp	/^void BSMonsterMap::load(PreparedQueryResult result )$/;"	f	class:BSMonsterMap	signature:(PreparedQueryResult result )
load	worker/BSMonsterMap.cpp	/^void BSMonsterMap::load(Variable_object &vobj) {$/;"	f	class:BSMonsterMap	signature:(Variable_object &vobj)
load	worker/BSMonsterMap.cpp	/^void BSMonsterMap::load(u32 version, DataStream &stream)$/;"	f	class:BSMonsterMap	signature:(u32 version, DataStream &stream)
load	worker/BSPlatformStore.cpp	/^void BSPlatformStore::load(PreparedQueryResult result )$/;"	f	class:BSPlatformStore	signature:(PreparedQueryResult result )
load	worker/BSPlatformStore.cpp	/^void BSPlatformStore::load(Variable_object &vobj) {$/;"	f	class:BSPlatformStore	signature:(Variable_object &vobj)
load	worker/BSPlatformStore.cpp	/^void BSPlatformStore::load(u8 version, DataStream &stream) {$/;"	f	class:BSPlatformStore	signature:(u8 version, DataStream &stream)
load	worker/BSPlayerBaseInfo.cpp	/^void BSPlayerBaseInfo::load(DBTable_baseinfo &tbaseinfo)$/;"	f	class:BSPlayerBaseInfo	signature:(DBTable_baseinfo &tbaseinfo)
load	worker/BSPlayerBaseInfo.cpp	/^void BSPlayerBaseInfo::load(PreparedQueryResult baseinfo,vn::s32 balance)$/;"	f	class:BSPlayerBaseInfo	signature:(PreparedQueryResult baseinfo,vn::s32 balance)
load	worker/BSPlayerBaseInfo.cpp	/^void BSPlayerBaseInfo::load(Variable_object &vobj) {$/;"	f	class:BSPlayerBaseInfo	signature:(Variable_object &vobj)
load	worker/BSPlayerBaseInfo.cpp	/^void BSPlayerBaseInfo::load(u32 version, DataStream &stream)$/;"	f	class:BSPlayerBaseInfo	signature:(u32 version, DataStream &stream)
load	worker/BSRegistration.cpp	/^void BSRegistration::load(PreparedQueryResult baseinfo)$/;"	f	class:BSRegistration	signature:(PreparedQueryResult baseinfo)
load	worker/BSRegistration.cpp	/^void BSRegistration::load(Variable_object &vobj) {$/;"	f	class:BSRegistration	signature:(Variable_object &vobj)
load	worker/BSRegistration.cpp	/^void BSRegistration::load(u8 version, DataStream &stream) {$/;"	f	class:BSRegistration	signature:(u8 version, DataStream &stream)
load	worker/BSTechUpgrade.cpp	/^void BSTechUpgrade::load(PreparedQueryResult result)$/;"	f	class:BSTechUpgrade	signature:(PreparedQueryResult result)
load	worker/BSTechUpgrade.cpp	/^void BSTechUpgrade::load(Variable_object &vobj) {$/;"	f	class:BSTechUpgrade	signature:(Variable_object &vobj)
load	worker/BSTechUpgrade.cpp	/^void BSTechUpgrade::load(u32 version, DataStream &stream)$/;"	f	class:BSTechUpgrade	signature:(u32 version, DataStream &stream)
load	worker/BSTowerUpgrade.cpp	/^void BSTowerUpgrade::load(PreparedQueryResult result)$/;"	f	class:BSTowerUpgrade	signature:(PreparedQueryResult result)
load	worker/BSTowerUpgrade.cpp	/^void BSTowerUpgrade::load(Variable_object &vobj) {$/;"	f	class:BSTowerUpgrade	signature:(Variable_object &vobj)
load	worker/BSTowerUpgrade.cpp	/^void BSTowerUpgrade::load(u32 version, DataStream &stream)$/;"	f	class:BSTowerUpgrade	signature:(u32 version, DataStream &stream)
load	worker/LoggedUser.cpp	/^void LoggedUser::load(PreparedQueryResult baseinfo, vn::s32 balance)$/;"	f	class:LoggedUser	signature:(PreparedQueryResult baseinfo, vn::s32 balance)
load	worker/LoggedUser.cpp	/^void LoggedUser::load(Variable_object &vobj)$/;"	f	class:LoggedUser	signature:(Variable_object &vobj)
loadBaseConfig	WorldManager.cpp	/^bool WorldManager::loadBaseConfig() {$/;"	f	class:WorldManager	signature:()
loadInitalHeroList	worker/BSHero.cpp	/^bool BSHero::loadInitalHeroList(u32 fsId, const str8 &fileName) {$/;"	f	class:BSHero	signature:(u32 fsId, const str8 &fileName)
loadInitialGoldMineList	worker/BSGoldMine.cpp	/^bool BSGoldMine::loadInitialGoldMineList(u32 fsId, const str8 &path) {$/;"	f	class:BSGoldMine	signature:(u32 fsId, const str8 &path)
loadServerData	manager/DC_DataBase.cpp	/^bool DC_DataBase::loadServerData(ServerData &data)$/;"	f	class:DC_DataBase	signature:(ServerData &data)
loadServerData	manager/DC_File.cpp	/^bool DC_File::loadServerData(ServerData &data)$/;"	f	class:DC_File	signature:(ServerData &data)
loadTBL	WorldManager.cpp	/^bool WorldManager::loadTBL()$/;"	f	class:WorldManager	signature:()
loadUser	manager/DC_DataBase.cpp	/^LoggedUserPtr DC_DataBase::loadUser(const UUID &uuid)$/;"	f	class:DC_DataBase	signature:(const UUID &uuid)
loadUser	manager/DC_File.cpp	/^LoggedUserPtr DC_File::loadUser(const UUID &uuid) {$/;"	f	class:DC_File	signature:(const UUID &uuid)
loadVersionData	WorldManager.cpp	/^bool WorldManager::loadVersionData()$/;"	f	class:WorldManager	signature:()
log_user_beginBattle	manager/DC_DataBase.cpp	/^void DC_DataBase::log_user_beginBattle(const UUID &uuid, u32 levelId, bool intrusion) {$/;"	f	class:DC_DataBase	signature:(const UUID &uuid, u32 levelId, bool intrusion)
log_user_beginBattle	manager/DC_File.cpp	/^void DC_File::log_user_beginBattle(const UUID &uuid, u32 levelId, bool intrusion) {$/;"	f	class:DC_File	signature:(const UUID &uuid, u32 levelId, bool intrusion)
log_user_endBattle	manager/DC_DataBase.cpp	/^void DC_DataBase::log_user_endBattle(const UUID &uuid, u32 levelId, bool intrusion, u32 stars, bool watch, bool shovel) {$/;"	f	class:DC_DataBase	signature:(const UUID &uuid, u32 levelId, bool intrusion, u32 stars, bool watch, bool shovel)
log_user_endBattle	manager/DC_File.cpp	/^void DC_File::log_user_endBattle(const UUID &uuid, u32 levelId, bool intrusion, u32 stars, bool watch, bool shovel) {$/;"	f	class:DC_File	signature:(const UUID &uuid, u32 levelId, bool intrusion, u32 stars, bool watch, bool shovel)
log_user_login	manager/DC_DataBase.cpp	/^void DC_DataBase::log_user_login(const UUID &uuid) {$/;"	f	class:DC_DataBase	signature:(const UUID &uuid)
log_user_login	manager/DC_File.cpp	/^void DC_File::log_user_login(const UUID &uuid) {$/;"	f	class:DC_File	signature:(const UUID &uuid)
log_user_logout	manager/DC_DataBase.cpp	/^void DC_DataBase::log_user_logout(const UUID &uuid) {$/;"	f	class:DC_DataBase	signature:(const UUID &uuid)
log_user_logout	manager/DC_File.cpp	/^void DC_File::log_user_logout(const UUID &uuid) {$/;"	f	class:DC_File	signature:(const UUID &uuid)
log_user_signin	manager/DC_DataBase.cpp	/^void DC_DataBase::log_user_signin(const UUID &uuid) {$/;"	f	class:DC_DataBase	signature:(const UUID &uuid)
log_user_signin	manager/DC_File.cpp	/^void DC_File::log_user_signin(const UUID &uuid) {$/;"	f	class:DC_File	signature:(const UUID &uuid)
login	worker/LoggedUser.cpp	/^void LoggedUser::login(const ClientPtr &client)$/;"	f	class:LoggedUser	signature:(const ClientPtr &client)
maxLevelGroup	manager/BSCouponManager.h	/^    bool maxLevelGroup = false;$/;"	m	struct:AllocatedObject	access:public
maxLevelId	manager/BSCouponManager.h	/^    vn::u32 maxLevelId = 0;$/;"	m	struct:AllocatedObject	access:public
meet_monster	worker/BSMonsterMap.cpp	/^bool BSMonsterMap::meet_monster(u32 id)$/;"	f	class:BSMonsterMap	signature:(u32 id)
minLevelGroup	manager/BSCouponManager.h	/^    bool minLevelGroup = false;$/;"	m	struct:AllocatedObject	access:public
minLevelId	manager/BSCouponManager.h	/^    vn::u32 minLevelId = 0;$/;"	m	struct:AllocatedObject	access:public
minute	DateTime.h	/^            u32 minute : 8;$/;"	m	struct:Time::__anon3::__anon4	access:public
money	RedeemPacket.h	/^    u32 money = 0;$/;"	m	struct:RefCounted	access:public
money	manager/BSAwardManager.h	/^    s32 money = 0;$/;"	m	struct:AllocatedObject	access:public
money	worker/BSPlayerBaseInfo.cpp	/^s32 BSPlayerBaseInfo::money()$/;"	f	class:BSPlayerBaseInfo	signature:()
monster	manager/BSFactory.cpp	/^tbl::Table_monster & BSFactory::monster()$/;"	f	class:BSFactory	signature:()
monsterMap	worker/BSMonsterMap.cpp	/^std::map<u32, bool> & BSMonsterMap::monsterMap() {$/;"	f	class:BSMonsterMap	signature:()
month	DateTime.h	/^            u32 month : 8;$/;"	m	struct:Date::__anon1::__anon2	access:public
notifyIntrusion	worker/BSGoldMine.cpp	/^void BSGoldMine::notifyIntrusion(u32 mineId, u32 levelId, bool group) {$/;"	f	class:BSGoldMine	signature:(u32 mineId, u32 levelId, bool group)
notifyVictory	worker/BSGoldMine.cpp	/^void BSGoldMine::notifyVictory(u32 mineId, u32 levelId, bool group) {$/;"	f	class:BSGoldMine	signature:(u32 mineId, u32 levelId, bool group)
notify_closed	worker/PacketHandler.cpp	/^void PacketHandler::notify_closed() {$/;"	f	class:PacketHandler	signature:()
now	DateTime.cpp	/^DateTime DateTime::now() {$/;"	f	class:DateTime	signature:()
now	DateTime.cpp	/^Time Time::now() {$/;"	f	class:Time	signature:()
now	DateTime.h	/^    static DateTime now();$/;"	p	struct:Date	access:public
now	DateTime.h	/^    static Time now();$/;"	p	struct:Time	access:public
null	worker/UUID.cpp	/^bool UUID::null() const {$/;"	f	class:UUID	signature:() const
open	File/FileSystemPKG.cpp	/^vn::FileStream * FileSystemPKG::open(const vn::str8 &file, bool readOnly) {$/;"	f	class:FileSystemPKG	signature:(const vn::str8 &file, bool readOnly)
open_hero	worker/BSHero.cpp	/^void BSHero::open_hero()$/;"	f	class:BSHero	signature:()
operator	DateTime.h	/^    bool operator !=(const Date &) const;$/;"	p	struct:Date	access:public	signature:(const Date &) const
operator	DateTime.h	/^    bool operator !=(const DateTime &) const;$/;"	p	struct:Date	access:public	signature:(const DateTime &) const
operator	DateTime.h	/^    bool operator !=(const Time &) const;$/;"	p	struct:Time	access:public	signature:(const Time &) const
operator	DateTime.h	/^    bool operator <(const Date &) const;$/;"	p	struct:Date	access:public	signature:(const Date &) const
operator	DateTime.h	/^    bool operator <(const DateTime &) const;$/;"	p	struct:Date	access:public	signature:(const DateTime &) const
operator	DateTime.h	/^    bool operator <(const Time &) const;$/;"	p	struct:Time	access:public	signature:(const Time &) const
operator	DateTime.h	/^    bool operator ==(const Date &) const;$/;"	p	struct:Date	access:public	signature:(const Date &) const
operator	DateTime.h	/^    bool operator ==(const DateTime &) const;$/;"	p	struct:Date	access:public	signature:(const DateTime &) const
operator	DateTime.h	/^    bool operator ==(const Time &) const;$/;"	p	struct:Time	access:public	signature:(const Time &) const
operator !=	DateTime.cpp	/^bool Date::operator !=(const Date &t) const {$/;"	f	class:Date	signature:(const Date &t) const
operator !=	DateTime.cpp	/^bool DateTime::operator !=(const DateTime &t) const {$/;"	f	class:DateTime	signature:(const DateTime &t) const
operator !=	DateTime.cpp	/^bool Time::operator !=(const Time &t) const {$/;"	f	class:Time	signature:(const Time &t) const
operator <	DateTime.cpp	/^bool Date::operator <(const Date &t) const {$/;"	f	class:Date	signature:(const Date &t) const
operator <	DateTime.cpp	/^bool DateTime::operator <(const DateTime &t) const {$/;"	f	class:DateTime	signature:(const DateTime &t) const
operator <	DateTime.cpp	/^bool Time::operator <(const Time &t) const {$/;"	f	class:Time	signature:(const Time &t) const
operator <	manager/BSRegistrationManager.cpp	/^bool operator < (const Date & lhs, const Date &rhs) {$/;"	f	signature:(const Date & lhs, const Date &rhs)
operator <	manager/BSRegistrationManager.cpp	/^bool operator < (const DateTime & lhs, const DateTime &rhs) {$/;"	f	signature:(const DateTime & lhs, const DateTime &rhs)
operator <<	table/TableBase.cpp	/^	DataStream & operator <<(DataStream &stream, const Field_float &field) {$/;"	f	namespace:tbl	signature:(DataStream &stream, const Field_float &field)
operator <<	table/TableBase.cpp	/^	DataStream & operator <<(DataStream &stream, const Field_int &field) {$/;"	f	namespace:tbl	signature:(DataStream &stream, const Field_int &field)
operator <<	table/TableBase.cpp	/^	DataStream & operator <<(DataStream &stream, const Field_string &field) {$/;"	f	namespace:tbl	signature:(DataStream &stream, const Field_string &field)
operator <<	table/TableBase.cpp	/^	DataStream & operator <<(DataStream &stream, const Field_uint &field) {$/;"	f	namespace:tbl	signature:(DataStream &stream, const Field_uint &field)
operator <<	table/TableBase.cpp	/^    DataStream & operator <<(DataStream &stream, const RecordFormat &format) {$/;"	f	namespace:tbl	signature:(DataStream &stream, const RecordFormat &format)
operator ==	DateTime.cpp	/^bool Date::operator ==(const Date &t) const {$/;"	f	class:Date	signature:(const Date &t) const
operator ==	DateTime.cpp	/^bool DateTime::operator ==(const DateTime &t) const {$/;"	f	class:DateTime	signature:(const DateTime &t) const
operator ==	DateTime.cpp	/^bool Time::operator ==(const Time &t) const {$/;"	f	class:Time	signature:(const Time &t) const
operator >>	table/TableBase.cpp	/^    DataStream & operator >>(DataStream &stream, Field_float &field) {$/;"	f	namespace:tbl	signature:(DataStream &stream, Field_float &field)
operator >>	table/TableBase.cpp	/^    DataStream & operator >>(DataStream &stream, Field_int &field) {$/;"	f	namespace:tbl	signature:(DataStream &stream, Field_int &field)
operator >>	table/TableBase.cpp	/^    DataStream & operator >>(DataStream &stream, Field_string &field) {$/;"	f	namespace:tbl	signature:(DataStream &stream, Field_string &field)
operator >>	table/TableBase.cpp	/^    DataStream & operator >>(DataStream &stream, Field_uint &field) {$/;"	f	namespace:tbl	signature:(DataStream &stream, Field_uint &field)
operator >>	table/TableBase.cpp	/^    DataStream & operator >>(DataStream &stream, RecordFormat &format) {$/;"	f	namespace:tbl	signature:(DataStream &stream, RecordFormat &format)
optd_svr_Protocols_h	Protocols.h	10;"	d
order_failed	worker/LoggedUser.cpp	/^void LoggedUser::order_failed(const str8 &cooOrderSerial)$/;"	f	class:LoggedUser	signature:(const str8 &cooOrderSerial)
order_ok	worker/LoggedUser.cpp	/^void LoggedUser::order_ok(const str8 &cooOrderSerial, s32 *addDiamond)$/;"	f	class:LoggedUser	signature:(const str8 &cooOrderSerial, s32 *addDiamond)
originalCost	manager/BSCouponManager.h	/^    vn::u32 originalCost = 0;$/;"	m	struct:AllocatedObject	access:public
override	Log/DC_DataBase_EventLog.h	/^    virtual void Asyncsave(AsyncObjectPtr obj,std::function<void(bool ret)>)override;$/;"	m	struct:DC_DataBase_EventLog_User	access:public
override	Log/DC_DataBase_EventLog.h	/^    virtual void Asyncsave(AsyncObjectPtr obj,std::function<void(bool ret)>doResult)override;$/;"	m	struct:DC_DataBase_EventLog	access:public
pass_level	worker/BSLevel.cpp	/^void BSLevel::pass_level(u32 param) {$/;"	f	class:BSLevel	signature:(u32 param)
passed	worker/BSLevel.cpp	/^bool BSLevel::passed(u32 levelId) {$/;"	f	class:BSLevel	signature:(u32 levelId)
passed	worker/BSLevelGroup.cpp	/^bool BSLevelGroupManager::passed(u32 groupId) {$/;"	f	class:BSLevelGroupManager	signature:(u32 groupId)
poolWeight	manager/BSAwardManager.h	/^    u32 poolWeight = 0;$/;"	m	struct:AllocatedObject	access:public
postPacket	worker/PacketHandler.cpp	/^void PacketHandler::postPacket(vn::PacketPtr &&packet) {$/;"	f	class:PacketHandler	signature:(vn::PacketPtr &&packet)
productId	manager/BSCouponManager.h	/^	vn::u32 productId = 0;$/;"	m	struct:BSCoupon	access:public
productMap	manager/BSDiamondShop.cpp	/^const std::map<u32, BSDiamondShop::Product> & BSDiamondShop::productMap() {$/;"	f	class:BSDiamondShop	signature:()
productMap	manager/BSRmbShopManager.cpp	/^const std::map<u32, BSRmbShopManager::Product> & BSRmbShopManager::productMap()$/;"	f	class:BSRmbShopManager	signature:()
progress	manager/BSFactory.cpp	/^tbl::Table_progress & BSFactory::progress()$/;"	f	class:BSFactory	signature:()
queryOrder	manager/DC_DataBase.cpp	/^DataCenter::OrderStatus DC_DataBase::queryOrder(const vn::str8 &orderId, UUID &userId, vn::u32 &productId) {$/;"	f	class:DC_DataBase	signature:(const vn::str8 &orderId, UUID &userId, vn::u32 &productId)
queryOrder	manager/DC_File.cpp	/^DataCenter::OrderStatus DC_File::queryOrder(const vn::str8 &orderId, UUID &userId, vn::u32 &productId) {$/;"	f	class:DC_File	signature:(const vn::str8 &orderId, UUID &userId, vn::u32 &productId)
queryRedeemPacket	manager/DC_DataBase.cpp	/^RedeemPacketPtr DC_DataBase::queryRedeemPacket(u32 codeId) {$/;"	f	class:DC_DataBase	signature:(u32 codeId)
queryRedeemPacket	manager/DC_File.cpp	/^RedeemPacketPtr DC_File::queryRedeemPacket(u32 codeId) {$/;"	f	class:DC_File	signature:(u32 codeId)
queryRedeemPacketCategoryName	manager/DC_DataBase.cpp	/^str8 DC_DataBase::queryRedeemPacketCategoryName(u32 category) {$/;"	f	class:DC_DataBase	signature:(u32 category)
queryRedeemPacketCategoryName	manager/DC_File.cpp	/^str8 DC_File::queryRedeemPacketCategoryName(u32 category) {$/;"	f	class:DC_File	signature:(u32 category)
rank	manager/BSAwardManager.h	/^    u32 rank = 0;$/;"	m	struct:AllocatedObject	access:public
read	File/FileSystemPKG.cpp	/^size_t FileSystemPKG::File::read(void *buffer, size_t size) {$/;"	f	class:FileSystemPKG::File	signature:(void *buffer, size_t size)
refresh	worker/BSLevelGroup.cpp	/^void BSLevelGroup::refresh() {$/;"	f	class:BSLevelGroup	signature:()
removeRedeemPacket	manager/DC_DataBase.cpp	/^void DC_DataBase::removeRedeemPacket(u32 codeId, const UUID &uuid) {$/;"	f	class:DC_DataBase	signature:(u32 codeId, const UUID &uuid)
removeRedeemPacket	manager/DC_File.cpp	/^void DC_File::removeRedeemPacket(u32 codeId, const UUID &uuid) {$/;"	f	class:DC_File	signature:(u32 codeId, const UUID &uuid)
removeUser	manager/LoggedUserManager.cpp	/^void LoggedUserManager::removeUser(const std::string &strUUId) {$/;"	f	class:LoggedUserManager	signature:(const std::string &strUUId)
reportLevel	manager/LoggedUserManager.cpp	/^void LoggedUserManager::reportLevel() {$/;"	f	class:LoggedUserManager	signature:()
reset	worker/BSLevelGroup.cpp	/^BSLevelGroup::LevelInfo * BSLevelGroup::reset(u32 levelId) {$/;"	f	class:BSLevelGroup	signature:(u32 levelId)
reset	worker/BSLevelGroup.cpp	/^bool BSLevelGroupManager::reset(u32 levelId) {$/;"	f	class:BSLevelGroupManager	signature:(u32 levelId)
reset	worker/BSMission.cpp	/^void BSMission::reset() {$/;"	f	class:BSMission	signature:()
reset	worker/BSPlatformStore.cpp	/^void BSPlatformStore::reset() {$/;"	f	class:BSPlatformStore	signature:()
reset	worker/BSRegistration.cpp	/^void BSRegistration::reset() {$/;"	f	class:BSRegistration	signature:()
reset_data	worker/LoggedUser.cpp	/^void LoggedUser::reset_data(vn::s32 diamond)$/;"	f	class:LoggedUser	signature:(vn::s32 diamond)
sPPLinkMgr	PPLink/PPLinkManger.h	68;"	d
sWorldManager	WorldManager.h	112;"	d
s_initalMines	worker/BSGoldMine.cpp	/^decltype(BSGoldMine::s_initalMines) BSGoldMine::s_initalMines;$/;"	m	class:BSGoldMine	file:
s_initialHeroList	worker/BSHero.cpp	/^decltype(BSHero::m_heroList) BSHero::s_initialHeroList;$/;"	m	class:BSHero	file:
s_registry	Log/DC_File_EventLog.cpp	/^std::map<DC_File_EventLog_Type, DC_File_EventLog *(*)()> DC_File_EventLog::s_registry;$/;"	m	class:DC_File_EventLog	file:
s_registry	Log/DC_File_EventLog.h	/^    static std::map<DC_File_EventLog_Type, DC_File_EventLog *(*)()> s_registry;$/;"	m	struct:AllocatedObject	access:public
save	Log/DC_File_EventLog.cpp	/^void DC_File_EventLog::save(DataStream &stream) const {$/;"	f	class:DC_File_EventLog	signature:(DataStream &stream) const
save	Log/DC_File_EventLog.cpp	/^void DC_File_EventLog_User::save(DataStream &stream) const {$/;"	f	class:DC_File_EventLog_User	signature:(DataStream &stream) const
save	Log/DC_File_EventLog.cpp	/^void DC_File_EventLog_User_BeginBattle::save(DataStream &stream) const {$/;"	f	class:DC_File_EventLog_User_BeginBattle	signature:(DataStream &stream) const
save	Log/DC_File_EventLog.cpp	/^void DC_File_EventLog_User_EndBattle::save(DataStream &stream) const {$/;"	f	class:DC_File_EventLog_User_EndBattle	signature:(DataStream &stream) const
save	Log/DC_File_EventLog.h	/^    virtual void save(DataStream &stream) const;$/;"	p	struct:AllocatedObject	access:public	signature:(DataStream &stream) const
save	Log/DC_File_EventLog.h	/^    virtual void save(DataStream &stream) const;$/;"	p	struct:DC_File_EventLog	access:public	signature:(DataStream &stream) const
save	Log/DC_File_EventLog.h	/^    virtual void save(DataStream &stream) const;$/;"	p	struct:DC_File_EventLog_User	access:public	signature:(DataStream &stream) const
save	ServerData.cpp	/^void ServerData::save(vn::DataStream &s) const {$/;"	f	class:ServerData	signature:(vn::DataStream &s) const
save	ServerData.cpp	/^void ServerData::save(vn::Variable_object &obj) const {$/;"	f	class:ServerData	signature:(vn::Variable_object &obj) const
save	ServerData.h	/^    void save(vn::DataStream &) const;$/;"	p	struct:vn::AllocatedObject	access:public	signature:(vn::DataStream &) const
save	ServerData.h	/^    void save(vn::Variable_object &obj) const;$/;"	p	struct:vn::AllocatedObject	access:public	signature:(vn::Variable_object &obj) const
save	worker/BSForceGuide.cpp	/^void BSForceGuide::save(DataStream &stream) const$/;"	f	class:BSForceGuide	signature:(DataStream &stream) const
save	worker/BSForceGuide.cpp	/^void BSForceGuide::save(Variable_object &vobj) const {$/;"	f	class:BSForceGuide	signature:(Variable_object &vobj) const
save	worker/BSGoldMine.cpp	/^void BSGoldMine::save(DataStream &stream) const$/;"	f	class:BSGoldMine	signature:(DataStream &stream) const
save	worker/BSGoldMine.cpp	/^void BSGoldMine::save(Variable_object &vobj) const {$/;"	f	class:BSGoldMine	signature:(Variable_object &vobj) const
save	worker/BSHero.cpp	/^void BSHero::save(DataStream &stream) const$/;"	f	class:BSHero	signature:(DataStream &stream) const
save	worker/BSHero.cpp	/^void BSHero::save(Variable_object &vobj) const {$/;"	f	class:BSHero	signature:(Variable_object &vobj) const
save	worker/BSIntrusion.cpp	/^void BSIntrusion::save(DataStream &stream) const$/;"	f	class:BSIntrusion	signature:(DataStream &stream) const
save	worker/BSIntrusion.cpp	/^void BSIntrusion::save(Variable_object &vobj) const {$/;"	f	class:BSIntrusion	signature:(Variable_object &vobj) const
save	worker/BSItemStore.cpp	/^void BSItemStore::save(DataStream &stream) const$/;"	f	class:BSItemStore	signature:(DataStream &stream) const
save	worker/BSItemStore.cpp	/^void BSItemStore::save(Variable_object &vobj) const {$/;"	f	class:BSItemStore	signature:(Variable_object &vobj) const
save	worker/BSLevel.cpp	/^void BSLevel::save(DataStream &stream) const$/;"	f	class:BSLevel	signature:(DataStream &stream) const
save	worker/BSLevel.cpp	/^void BSLevel::save(Variable_object &vobj) const {$/;"	f	class:BSLevel	signature:(Variable_object &vobj) const
save	worker/BSLevelGroup.cpp	/^void BSLevelGroupManager::save(DataStream &stream) const {$/;"	f	class:BSLevelGroupManager	signature:(DataStream &stream) const
save	worker/BSLevelGroup.cpp	/^void BSLevelGroupManager::save(Variable_object &vobj) const {$/;"	f	class:BSLevelGroupManager	signature:(Variable_object &vobj) const
save	worker/BSMission.cpp	/^void BSMission::save(DataStream &stream) const {$/;"	f	class:BSMission	signature:(DataStream &stream) const
save	worker/BSMission.cpp	/^void BSMission::save(Variable_object &vobj) const {$/;"	f	class:BSMission	signature:(Variable_object &vobj) const
save	worker/BSMonsterMap.cpp	/^void BSMonsterMap::save(DataStream &stream) const$/;"	f	class:BSMonsterMap	signature:(DataStream &stream) const
save	worker/BSMonsterMap.cpp	/^void BSMonsterMap::save(Variable_object &vobj) const {$/;"	f	class:BSMonsterMap	signature:(Variable_object &vobj) const
save	worker/BSPlatformStore.cpp	/^void BSPlatformStore::save(DataStream &stream) const {$/;"	f	class:BSPlatformStore	signature:(DataStream &stream) const
save	worker/BSPlatformStore.cpp	/^void BSPlatformStore::save(Variable_object &vobj) const {$/;"	f	class:BSPlatformStore	signature:(Variable_object &vobj) const
save	worker/BSPlayerBaseInfo.cpp	/^void BSPlayerBaseInfo::save(DataStream &stream) const$/;"	f	class:BSPlayerBaseInfo	signature:(DataStream &stream) const
save	worker/BSPlayerBaseInfo.cpp	/^void BSPlayerBaseInfo::save(Variable_object &vobj) const {$/;"	f	class:BSPlayerBaseInfo	signature:(Variable_object &vobj) const
save	worker/BSRegistration.cpp	/^void BSRegistration::save(DataStream &stream) const{$/;"	f	class:BSRegistration	signature:(DataStream &stream) const
save	worker/BSRegistration.cpp	/^void BSRegistration::save(Variable_object &vobj) const {$/;"	f	class:BSRegistration	signature:(Variable_object &vobj) const
save	worker/BSTechUpgrade.cpp	/^void BSTechUpgrade::save(DataStream &stream) const$/;"	f	class:BSTechUpgrade	signature:(DataStream &stream) const
save	worker/BSTechUpgrade.cpp	/^void BSTechUpgrade::save(Variable_object &vobj) const {$/;"	f	class:BSTechUpgrade	signature:(Variable_object &vobj) const
save	worker/BSTowerUpgrade.cpp	/^void BSTowerUpgrade::save(DataStream &stream) const$/;"	f	class:BSTowerUpgrade	signature:(DataStream &stream) const
save	worker/BSTowerUpgrade.cpp	/^void BSTowerUpgrade::save(Variable_object &vobj) const {$/;"	f	class:BSTowerUpgrade	signature:(Variable_object &vobj) const
save	worker/LoggedUser.cpp	/^void LoggedUser::save(Variable_object &vobj) const$/;"	f	class:LoggedUser	signature:(Variable_object &vobj) const
saveServerData	manager/DC_DataBase.cpp	/^void DC_DataBase::saveServerData(const ServerData &data)$/;"	f	class:DC_DataBase	signature:(const ServerData &data)
saveServerData	manager/DC_File.cpp	/^void DC_File::saveServerData(const ServerData &data)$/;"	f	class:DC_File	signature:(const ServerData &data)
saveUser	manager/DC_DataBase.cpp	/^void DC_DataBase::saveUser(LoggedUserPtr user) {$/;"	f	class:DC_DataBase	signature:(LoggedUserPtr user)
saveUser	manager/DC_File.cpp	/^void DC_File::saveUser(LoggedUserPtr user) {$/;"	f	class:DC_File	signature:(LoggedUserPtr user)
second	DateTime.h	/^            u32 second : 8;$/;"	m	struct:Time::__anon3::__anon4	access:public
seek	File/FileSystemPKG.cpp	/^bool FileSystemPKG::File::seek(vn::s64 offset, SeekDir mode) {$/;"	f	class:FileSystemPKG::File	signature:(vn::s64 offset, SeekDir mode)
selectWorkQueue	manager/WorkQueueManager.cpp	/^optd::WorkQueue * WorkQueueManager::selectWorkQueue() {$/;"	f	class:WorkQueueManager	signature:()
send_intrusion	worker/LoggedUser.cpp	/^void LoggedUser::send_intrusion(u32 levelId, bool group)$/;"	f	class:LoggedUser	signature:(u32 levelId, bool group)
setPacketHandler	clientlisten/Client.cpp	/^void Client::setPacketHandler(PacketHandler *handler) {$/;"	f	class:Client	signature:(PacketHandler *handler)
setPacketHandler	clientlisten/ClientSession.cpp	/^void ClientSession::setPacketHandler(PacketHandler *handler) {$/;"	f	class:ClientSession	signature:(PacketHandler *handler)
setRedeemPacketCategory	manager/DC_DataBase.cpp	/^void DC_DataBase::setRedeemPacketCategory(u32 category, const str8 &name) {$/;"	f	class:DC_DataBase	signature:(u32 category, const str8 &name)
setRedeemPacketCategory	manager/DC_File.cpp	/^void DC_File::setRedeemPacketCategory(u32 category, const str8 &name) {$/;"	f	class:DC_File	signature:(u32 category, const str8 &name)
setReward	worker/BSMission.cpp	/^void BSMission::setReward(u32 id ,bool b) {$/;"	f	class:BSMission	signature:(u32 id ,bool b)
shovel	Log/DC_DataBase_EventLog.h	/^    bool shovel = false, watch = false;$/;"	m	struct:DC_DataBase_EventLog_User	access:public
shovel	Log/DC_File_EventLog.h	/^    bool shovel = false, watch = false;$/;"	m	struct:DC_File_EventLog_User	access:public
shovel	worker/BSHero.cpp	/^const u32 * BSHero::shovel()$/;"	f	class:BSHero	signature:()
shutdown	worker/LoggedUser.cpp	/^void LoggedUser::shutdown()$/;"	f	class:LoggedUser	signature:()
signin	worker/LoggedUser.cpp	/^void LoggedUser::signin(const ClientPtr &client)$/;"	f	class:LoggedUser	signature:(const ClientPtr &client)
size	table/Table_Registration.cpp	/^size_t Table_Registration::size() const {$/;"	f	class:tbl::Table_Registration	signature:() const
size	table/Table_award.cpp	/^size_t Table_award::size() const {$/;"	f	class:tbl::Table_award	signature:() const
size	table/Table_buff.cpp	/^size_t Table_buff::size() const {$/;"	f	class:tbl::Table_buff	signature:() const
size	table/Table_cage.cpp	/^size_t Table_cage::size() const {$/;"	f	class:tbl::Table_cage	signature:() const
size	table/Table_coupon.cpp	/^size_t Table_coupon::size() const {$/;"	f	class:tbl::Table_coupon	signature:() const
size	table/Table_dialog.cpp	/^size_t Table_dialog::size() const {$/;"	f	class:tbl::Table_dialog	signature:() const
size	table/Table_diamond_shop.cpp	/^size_t Table_diamond_shop::size() const {$/;"	f	class:tbl::Table_diamond_shop	signature:() const
size	table/Table_force_guide.cpp	/^size_t Table_force_guide::size() const {$/;"	f	class:tbl::Table_force_guide	signature:() const
size	table/Table_gold_mine.cpp	/^size_t Table_gold_mine::size() const {$/;"	f	class:tbl::Table_gold_mine	signature:() const
size	table/Table_herorune.cpp	/^size_t Table_herorune::size() const {$/;"	f	class:tbl::Table_herorune	signature:() const
size	table/Table_hint.cpp	/^size_t Table_hint::size() const {$/;"	f	class:tbl::Table_hint	signature:() const
size	table/Table_item_store.cpp	/^size_t Table_item_store::size() const {$/;"	f	class:tbl::Table_item_store	signature:() const
size	table/Table_level.cpp	/^size_t Table_level::size() const {$/;"	f	class:tbl::Table_level	signature:() const
size	table/Table_levelclass.cpp	/^size_t Table_levelclass::size() const {$/;"	f	class:tbl::Table_levelclass	signature:() const
size	table/Table_mission.cpp	/^size_t Table_mission::size() const {$/;"	f	class:tbl::Table_mission	signature:() const
size	table/Table_monster.cpp	/^size_t Table_monster::size() const {$/;"	f	class:tbl::Table_monster	signature:() const
size	table/Table_object.cpp	/^size_t Table_object::size() const {$/;"	f	class:tbl::Table_object	signature:() const
size	table/Table_platform.cpp	/^size_t Table_platform::size() const {$/;"	f	class:tbl::Table_platform	signature:() const
size	table/Table_progress.cpp	/^size_t Table_progress::size() const {$/;"	f	class:tbl::Table_progress	signature:() const
size	table/Table_spell.cpp	/^size_t Table_spell::size() const {$/;"	f	class:tbl::Table_spell	signature:() const
size	table/Table_sub_wave.cpp	/^size_t Table_sub_wave::size() const {$/;"	f	class:tbl::Table_sub_wave	signature:() const
size	table/Table_tech.cpp	/^size_t Table_tech::size() const {$/;"	f	class:tbl::Table_tech	signature:() const
size	table/Table_tower.cpp	/^size_t Table_tower::size() const {$/;"	f	class:tbl::Table_tower	signature:() const
size	table/Table_training.cpp	/^size_t Table_training::size() const {$/;"	f	class:tbl::Table_training	signature:() const
size	table/Table_wave.cpp	/^size_t Table_wave::size() const {$/;"	f	class:tbl::Table_wave	signature:() const
skull	worker/BSHero.cpp	/^const u32 * BSHero::skull()$/;"	f	class:BSHero	signature:()
stars	Log/DC_DataBase_EventLog.h	/^    u8 stars = 0;$/;"	m	struct:DC_DataBase_EventLog_User	access:public
stars	Log/DC_File_EventLog.h	/^    u8 stars = 0;$/;"	m	struct:DC_File_EventLog_User	access:public
strMessage	Log/DC_DataBase_EventLog.h	/^    std::string strMessage="";$/;"	m	struct:DC_DataBase_EventLog	access:public
strUUId	Log/DC_DataBase_EventLog.h	/^    std::string strUUId="";$/;"	m	struct:DC_DataBase_EventLog	access:public
subImageId	manager/BSCouponManager.h	/^    vn::u32 subImageId = 0;$/;"	m	struct:AllocatedObject	access:public
tbl	table/TableBase.cpp	/^namespace tbl {$/;"	n	file:
tbl	table/Table_Registration.cpp	/^namespace tbl {$/;"	n	file:
tbl	table/Table_award.cpp	/^namespace tbl {$/;"	n	file:
tbl	table/Table_buff.cpp	/^namespace tbl {$/;"	n	file:
tbl	table/Table_cage.cpp	/^namespace tbl {$/;"	n	file:
tbl	table/Table_coupon.cpp	/^namespace tbl {$/;"	n	file:
tbl	table/Table_dialog.cpp	/^namespace tbl {$/;"	n	file:
tbl	table/Table_diamond_shop.cpp	/^namespace tbl {$/;"	n	file:
tbl	table/Table_force_guide.cpp	/^namespace tbl {$/;"	n	file:
tbl	table/Table_gold_mine.cpp	/^namespace tbl {$/;"	n	file:
tbl	table/Table_herorune.cpp	/^namespace tbl {$/;"	n	file:
tbl	table/Table_hint.cpp	/^namespace tbl {$/;"	n	file:
tbl	table/Table_item_store.cpp	/^namespace tbl {$/;"	n	file:
tbl	table/Table_level.cpp	/^namespace tbl {$/;"	n	file:
tbl	table/Table_levelclass.cpp	/^namespace tbl {$/;"	n	file:
tbl	table/Table_mission.cpp	/^namespace tbl {$/;"	n	file:
tbl	table/Table_monster.cpp	/^namespace tbl {$/;"	n	file:
tbl	table/Table_object.cpp	/^namespace tbl {$/;"	n	file:
tbl	table/Table_platform.cpp	/^namespace tbl {$/;"	n	file:
tbl	table/Table_progress.cpp	/^namespace tbl {$/;"	n	file:
tbl	table/Table_spell.cpp	/^namespace tbl {$/;"	n	file:
tbl	table/Table_sub_wave.cpp	/^namespace tbl {$/;"	n	file:
tbl	table/Table_tech.cpp	/^namespace tbl {$/;"	n	file:
tbl	table/Table_tower.cpp	/^namespace tbl {$/;"	n	file:
tbl	table/Table_training.cpp	/^namespace tbl {$/;"	n	file:
tbl	table/Table_wave.cpp	/^namespace tbl {$/;"	n	file:
tbl::Field_float::compare	table/TableBase.cpp	/^	int Field_float::compare(const Field_float &other) const {$/;"	f	class:tbl::Field_float	signature:(const Field_float &other) const
tbl::Field_float::compare	table/TableBase.cpp	/^    int Field_float::compare(f32 _value) const {$/;"	f	class:tbl::Field_float	signature:(f32 _value) const
tbl::Field_int::compare	table/TableBase.cpp	/^	int Field_int::compare(s32 _value) const {$/;"	f	class:tbl::Field_int	signature:(s32 _value) const
tbl::Field_int::compare	table/TableBase.cpp	/^    int Field_int::compare(const Field_int &other) const {$/;"	f	class:tbl::Field_int	signature:(const Field_int &other) const
tbl::Field_string::compare	table/TableBase.cpp	/^	int Field_string::compare(const str8 &_value) const {$/;"	f	class:tbl::Field_string	signature:(const str8 &_value) const
tbl::Field_string::compare	table/TableBase.cpp	/^    int Field_string::compare(const Field_string &other) const {$/;"	f	class:tbl::Field_string	signature:(const Field_string &other) const
tbl::Field_uint::compare	table/TableBase.cpp	/^	int Field_uint::compare(const Field_uint &other) const {$/;"	f	class:tbl::Field_uint	signature:(const Field_uint &other) const
tbl::Field_uint::compare	table/TableBase.cpp	/^    int Field_uint::compare(u32 _value) const {$/;"	f	class:tbl::Field_uint	signature:(u32 _value) const
tbl::Record_Registration::compare	table/Table_Registration.cpp	/^int Record_Registration::compare(u32 _Id,u32 _StepId) const {$/;"	f	class:tbl::Record_Registration	signature:(u32 _Id,u32 _StepId) const
tbl::Record_Registration::load	table/Table_Registration.cpp	/^void Record_Registration::load(DataStream &stream) {$/;"	f	class:tbl::Record_Registration	signature:(DataStream &stream)
tbl::Record_award::compare	table/Table_award.cpp	/^int Record_award::compare(u32 _AwardId) const {$/;"	f	class:tbl::Record_award	signature:(u32 _AwardId) const
tbl::Record_award::load	table/Table_award.cpp	/^void Record_award::load(DataStream &stream) {$/;"	f	class:tbl::Record_award	signature:(DataStream &stream)
tbl::Record_buff::compare	table/Table_buff.cpp	/^int Record_buff::compare(u32 _BuffID) const {$/;"	f	class:tbl::Record_buff	signature:(u32 _BuffID) const
tbl::Record_buff::load	table/Table_buff.cpp	/^void Record_buff::load(DataStream &stream) {$/;"	f	class:tbl::Record_buff	signature:(DataStream &stream)
tbl::Record_cage::compare	table/Table_cage.cpp	/^int Record_cage::compare(u32 _Id) const {$/;"	f	class:tbl::Record_cage	signature:(u32 _Id) const
tbl::Record_cage::load	table/Table_cage.cpp	/^void Record_cage::load(DataStream &stream) {$/;"	f	class:tbl::Record_cage	signature:(DataStream &stream)
tbl::Record_coupon::compare	table/Table_coupon.cpp	/^int Record_coupon::compare(u32 _CouponId) const {$/;"	f	class:tbl::Record_coupon	signature:(u32 _CouponId) const
tbl::Record_coupon::load	table/Table_coupon.cpp	/^void Record_coupon::load(DataStream &stream) {$/;"	f	class:tbl::Record_coupon	signature:(DataStream &stream)
tbl::Record_dialog::compare	table/Table_dialog.cpp	/^int Record_dialog::compare(u32 _LevelID,u32 _WaveID,u32 _DialogID) const {$/;"	f	class:tbl::Record_dialog	signature:(u32 _LevelID,u32 _WaveID,u32 _DialogID) const
tbl::Record_dialog::load	table/Table_dialog.cpp	/^void Record_dialog::load(DataStream &stream) {$/;"	f	class:tbl::Record_dialog	signature:(DataStream &stream)
tbl::Record_diamond_shop::compare	table/Table_diamond_shop.cpp	/^int Record_diamond_shop::compare(u32 _Id) const {$/;"	f	class:tbl::Record_diamond_shop	signature:(u32 _Id) const
tbl::Record_diamond_shop::load	table/Table_diamond_shop.cpp	/^void Record_diamond_shop::load(DataStream &stream) {$/;"	f	class:tbl::Record_diamond_shop	signature:(DataStream &stream)
tbl::Record_force_guide::compare	table/Table_force_guide.cpp	/^int Record_force_guide::compare(u32 _GroupId,u32 _StepId) const {$/;"	f	class:tbl::Record_force_guide	signature:(u32 _GroupId,u32 _StepId) const
tbl::Record_force_guide::load	table/Table_force_guide.cpp	/^void Record_force_guide::load(DataStream &stream) {$/;"	f	class:tbl::Record_force_guide	signature:(DataStream &stream)
tbl::Record_gold_mine::compare	table/Table_gold_mine.cpp	/^int Record_gold_mine::compare(u32 _Id) const {$/;"	f	class:tbl::Record_gold_mine	signature:(u32 _Id) const
tbl::Record_gold_mine::load	table/Table_gold_mine.cpp	/^void Record_gold_mine::load(DataStream &stream) {$/;"	f	class:tbl::Record_gold_mine	signature:(DataStream &stream)
tbl::Record_herorune::compare	table/Table_herorune.cpp	/^int Record_herorune::compare(u32 _RuneClass,u32 _RuneRank) const {$/;"	f	class:tbl::Record_herorune	signature:(u32 _RuneClass,u32 _RuneRank) const
tbl::Record_herorune::load	table/Table_herorune.cpp	/^void Record_herorune::load(DataStream &stream) {$/;"	f	class:tbl::Record_herorune	signature:(DataStream &stream)
tbl::Record_hint::load	table/Table_hint.cpp	/^void Record_hint::load(DataStream &stream) {$/;"	f	class:tbl::Record_hint	signature:(DataStream &stream)
tbl::Record_item_store::compare	table/Table_item_store.cpp	/^int Record_item_store::compare(u32 _id) const {$/;"	f	class:tbl::Record_item_store	signature:(u32 _id) const
tbl::Record_item_store::load	table/Table_item_store.cpp	/^void Record_item_store::load(DataStream &stream) {$/;"	f	class:tbl::Record_item_store	signature:(DataStream &stream)
tbl::Record_level::compare	table/Table_level.cpp	/^int Record_level::compare(u32 _LevelId) const {$/;"	f	class:tbl::Record_level	signature:(u32 _LevelId) const
tbl::Record_level::load	table/Table_level.cpp	/^void Record_level::load(DataStream &stream) {$/;"	f	class:tbl::Record_level	signature:(DataStream &stream)
tbl::Record_levelclass::compare	table/Table_levelclass.cpp	/^int Record_levelclass::compare(u32 _ID) const {$/;"	f	class:tbl::Record_levelclass	signature:(u32 _ID) const
tbl::Record_levelclass::load	table/Table_levelclass.cpp	/^void Record_levelclass::load(DataStream &stream) {$/;"	f	class:tbl::Record_levelclass	signature:(DataStream &stream)
tbl::Record_mission::compare	table/Table_mission.cpp	/^int Record_mission::compare(u32 _Id) const {$/;"	f	class:tbl::Record_mission	signature:(u32 _Id) const
tbl::Record_mission::load	table/Table_mission.cpp	/^void Record_mission::load(DataStream &stream) {$/;"	f	class:tbl::Record_mission	signature:(DataStream &stream)
tbl::Record_monster::compare	table/Table_monster.cpp	/^int Record_monster::compare(u32 _MonsterID) const {$/;"	f	class:tbl::Record_monster	signature:(u32 _MonsterID) const
tbl::Record_monster::load	table/Table_monster.cpp	/^void Record_monster::load(DataStream &stream) {$/;"	f	class:tbl::Record_monster	signature:(DataStream &stream)
tbl::Record_object::compare	table/Table_object.cpp	/^int Record_object::compare(u32 _ObjectId) const {$/;"	f	class:tbl::Record_object	signature:(u32 _ObjectId) const
tbl::Record_object::load	table/Table_object.cpp	/^void Record_object::load(DataStream &stream) {$/;"	f	class:tbl::Record_object	signature:(DataStream &stream)
tbl::Record_platform::compare	table/Table_platform.cpp	/^int Record_platform::compare(u32 _Category) const {$/;"	f	class:tbl::Record_platform	signature:(u32 _Category) const
tbl::Record_platform::load	table/Table_platform.cpp	/^void Record_platform::load(DataStream &stream) {$/;"	f	class:tbl::Record_platform	signature:(DataStream &stream)
tbl::Record_progress::load	table/Table_progress.cpp	/^void Record_progress::load(DataStream &stream) {$/;"	f	class:tbl::Record_progress	signature:(DataStream &stream)
tbl::Record_spell::compare	table/Table_spell.cpp	/^int Record_spell::compare(u32 _SpellId) const {$/;"	f	class:tbl::Record_spell	signature:(u32 _SpellId) const
tbl::Record_spell::load	table/Table_spell.cpp	/^void Record_spell::load(DataStream &stream) {$/;"	f	class:tbl::Record_spell	signature:(DataStream &stream)
tbl::Record_sub_wave::compare	table/Table_sub_wave.cpp	/^int Record_sub_wave::compare(u32 _SubWaveId) const {$/;"	f	class:tbl::Record_sub_wave	signature:(u32 _SubWaveId) const
tbl::Record_sub_wave::load	table/Table_sub_wave.cpp	/^void Record_sub_wave::load(DataStream &stream) {$/;"	f	class:tbl::Record_sub_wave	signature:(DataStream &stream)
tbl::Record_tech::compare	table/Table_tech.cpp	/^int Record_tech::compare(u32 _Slot,u32 _Rank) const {$/;"	f	class:tbl::Record_tech	signature:(u32 _Slot,u32 _Rank) const
tbl::Record_tech::load	table/Table_tech.cpp	/^void Record_tech::load(DataStream &stream) {$/;"	f	class:tbl::Record_tech	signature:(DataStream &stream)
tbl::Record_tower::compare	table/Table_tower.cpp	/^int Record_tower::compare(u32 _TowerID) const {$/;"	f	class:tbl::Record_tower	signature:(u32 _TowerID) const
tbl::Record_tower::load	table/Table_tower.cpp	/^void Record_tower::load(DataStream &stream) {$/;"	f	class:tbl::Record_tower	signature:(DataStream &stream)
tbl::Record_training::compare	table/Table_training.cpp	/^int Record_training::compare(u32 _Class,u32 _Slot,u32 _AdvancedTimes) const {$/;"	f	class:tbl::Record_training	signature:(u32 _Class,u32 _Slot,u32 _AdvancedTimes) const
tbl::Record_training::load	table/Table_training.cpp	/^void Record_training::load(DataStream &stream) {$/;"	f	class:tbl::Record_training	signature:(DataStream &stream)
tbl::Record_wave::compare	table/Table_wave.cpp	/^int Record_wave::compare(u32 _LevelId,u32 _WaveId) const {$/;"	f	class:tbl::Record_wave	signature:(u32 _LevelId,u32 _WaveId) const
tbl::Record_wave::load	table/Table_wave.cpp	/^void Record_wave::load(DataStream &stream) {$/;"	f	class:tbl::Record_wave	signature:(DataStream &stream)
tbl::Table_Registration::Table_Registration	table/Table_Registration.cpp	/^Table_Registration::Table_Registration()$/;"	f	class:tbl::Table_Registration	signature:()
tbl::Table_Registration::at	table/Table_Registration.cpp	/^const Record_Registration * Table_Registration::at(size_t index) const{$/;"	f	class:tbl::Table_Registration	signature:(size_t index) const
tbl::Table_Registration::find	table/Table_Registration.cpp	/^size_t Table_Registration::find(u32 _Id,u32 _StepId) {$/;"	f	class:tbl::Table_Registration	signature:(u32 _Id,u32 _StepId)
tbl::Table_Registration::fini	table/Table_Registration.cpp	/^void Table_Registration::fini() {$/;"	f	class:tbl::Table_Registration	signature:()
tbl::Table_Registration::init	table/Table_Registration.cpp	/^bool Table_Registration::init(DataStream &stream) {$/;"	f	class:tbl::Table_Registration	signature:(DataStream &stream)
tbl::Table_Registration::init	table/Table_Registration.cpp	/^bool Table_Registration::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_Registration	signature:(u32 fsId, const str8& path)
tbl::Table_Registration::size	table/Table_Registration.cpp	/^size_t Table_Registration::size() const {$/;"	f	class:tbl::Table_Registration	signature:() const
tbl::Table_Registration::version	table/Table_Registration.cpp	/^u32 Table_Registration::version() const {$/;"	f	class:tbl::Table_Registration	signature:() const
tbl::Table_Registration::~Table_Registration	table/Table_Registration.cpp	/^Table_Registration::~Table_Registration() {$/;"	f	class:tbl::Table_Registration	signature:()
tbl::Table_award::Table_award	table/Table_award.cpp	/^Table_award::Table_award()$/;"	f	class:tbl::Table_award	signature:()
tbl::Table_award::at	table/Table_award.cpp	/^const Record_award * Table_award::at(size_t index) const{$/;"	f	class:tbl::Table_award	signature:(size_t index) const
tbl::Table_award::find	table/Table_award.cpp	/^size_t Table_award::find(u32 _AwardId) {$/;"	f	class:tbl::Table_award	signature:(u32 _AwardId)
tbl::Table_award::fini	table/Table_award.cpp	/^void Table_award::fini() {$/;"	f	class:tbl::Table_award	signature:()
tbl::Table_award::init	table/Table_award.cpp	/^bool Table_award::init(DataStream &stream) {$/;"	f	class:tbl::Table_award	signature:(DataStream &stream)
tbl::Table_award::init	table/Table_award.cpp	/^bool Table_award::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_award	signature:(u32 fsId, const str8& path)
tbl::Table_award::size	table/Table_award.cpp	/^size_t Table_award::size() const {$/;"	f	class:tbl::Table_award	signature:() const
tbl::Table_award::version	table/Table_award.cpp	/^u32 Table_award::version() const {$/;"	f	class:tbl::Table_award	signature:() const
tbl::Table_award::~Table_award	table/Table_award.cpp	/^Table_award::~Table_award() {$/;"	f	class:tbl::Table_award	signature:()
tbl::Table_buff::Table_buff	table/Table_buff.cpp	/^Table_buff::Table_buff()$/;"	f	class:tbl::Table_buff	signature:()
tbl::Table_buff::at	table/Table_buff.cpp	/^const Record_buff * Table_buff::at(size_t index) const{$/;"	f	class:tbl::Table_buff	signature:(size_t index) const
tbl::Table_buff::find	table/Table_buff.cpp	/^size_t Table_buff::find(u32 _BuffID) {$/;"	f	class:tbl::Table_buff	signature:(u32 _BuffID)
tbl::Table_buff::fini	table/Table_buff.cpp	/^void Table_buff::fini() {$/;"	f	class:tbl::Table_buff	signature:()
tbl::Table_buff::init	table/Table_buff.cpp	/^bool Table_buff::init(DataStream &stream) {$/;"	f	class:tbl::Table_buff	signature:(DataStream &stream)
tbl::Table_buff::init	table/Table_buff.cpp	/^bool Table_buff::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_buff	signature:(u32 fsId, const str8& path)
tbl::Table_buff::size	table/Table_buff.cpp	/^size_t Table_buff::size() const {$/;"	f	class:tbl::Table_buff	signature:() const
tbl::Table_buff::version	table/Table_buff.cpp	/^u32 Table_buff::version() const {$/;"	f	class:tbl::Table_buff	signature:() const
tbl::Table_buff::~Table_buff	table/Table_buff.cpp	/^Table_buff::~Table_buff() {$/;"	f	class:tbl::Table_buff	signature:()
tbl::Table_cage::Table_cage	table/Table_cage.cpp	/^Table_cage::Table_cage()$/;"	f	class:tbl::Table_cage	signature:()
tbl::Table_cage::at	table/Table_cage.cpp	/^const Record_cage * Table_cage::at(size_t index) const{$/;"	f	class:tbl::Table_cage	signature:(size_t index) const
tbl::Table_cage::find	table/Table_cage.cpp	/^size_t Table_cage::find(u32 _Id) {$/;"	f	class:tbl::Table_cage	signature:(u32 _Id)
tbl::Table_cage::fini	table/Table_cage.cpp	/^void Table_cage::fini() {$/;"	f	class:tbl::Table_cage	signature:()
tbl::Table_cage::init	table/Table_cage.cpp	/^bool Table_cage::init(DataStream &stream) {$/;"	f	class:tbl::Table_cage	signature:(DataStream &stream)
tbl::Table_cage::init	table/Table_cage.cpp	/^bool Table_cage::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_cage	signature:(u32 fsId, const str8& path)
tbl::Table_cage::size	table/Table_cage.cpp	/^size_t Table_cage::size() const {$/;"	f	class:tbl::Table_cage	signature:() const
tbl::Table_cage::version	table/Table_cage.cpp	/^u32 Table_cage::version() const {$/;"	f	class:tbl::Table_cage	signature:() const
tbl::Table_cage::~Table_cage	table/Table_cage.cpp	/^Table_cage::~Table_cage() {$/;"	f	class:tbl::Table_cage	signature:()
tbl::Table_coupon::Table_coupon	table/Table_coupon.cpp	/^Table_coupon::Table_coupon()$/;"	f	class:tbl::Table_coupon	signature:()
tbl::Table_coupon::at	table/Table_coupon.cpp	/^const Record_coupon * Table_coupon::at(size_t index) const{$/;"	f	class:tbl::Table_coupon	signature:(size_t index) const
tbl::Table_coupon::find	table/Table_coupon.cpp	/^size_t Table_coupon::find(u32 _CouponId) {$/;"	f	class:tbl::Table_coupon	signature:(u32 _CouponId)
tbl::Table_coupon::fini	table/Table_coupon.cpp	/^void Table_coupon::fini() {$/;"	f	class:tbl::Table_coupon	signature:()
tbl::Table_coupon::init	table/Table_coupon.cpp	/^bool Table_coupon::init(DataStream &stream) {$/;"	f	class:tbl::Table_coupon	signature:(DataStream &stream)
tbl::Table_coupon::init	table/Table_coupon.cpp	/^bool Table_coupon::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_coupon	signature:(u32 fsId, const str8& path)
tbl::Table_coupon::size	table/Table_coupon.cpp	/^size_t Table_coupon::size() const {$/;"	f	class:tbl::Table_coupon	signature:() const
tbl::Table_coupon::version	table/Table_coupon.cpp	/^u32 Table_coupon::version() const {$/;"	f	class:tbl::Table_coupon	signature:() const
tbl::Table_coupon::~Table_coupon	table/Table_coupon.cpp	/^Table_coupon::~Table_coupon() {$/;"	f	class:tbl::Table_coupon	signature:()
tbl::Table_dialog::Table_dialog	table/Table_dialog.cpp	/^Table_dialog::Table_dialog()$/;"	f	class:tbl::Table_dialog	signature:()
tbl::Table_dialog::at	table/Table_dialog.cpp	/^const Record_dialog * Table_dialog::at(size_t index) const{$/;"	f	class:tbl::Table_dialog	signature:(size_t index) const
tbl::Table_dialog::find	table/Table_dialog.cpp	/^size_t Table_dialog::find(u32 _LevelID,u32 _WaveID,u32 _DialogID) {$/;"	f	class:tbl::Table_dialog	signature:(u32 _LevelID,u32 _WaveID,u32 _DialogID)
tbl::Table_dialog::fini	table/Table_dialog.cpp	/^void Table_dialog::fini() {$/;"	f	class:tbl::Table_dialog	signature:()
tbl::Table_dialog::init	table/Table_dialog.cpp	/^bool Table_dialog::init(DataStream &stream) {$/;"	f	class:tbl::Table_dialog	signature:(DataStream &stream)
tbl::Table_dialog::init	table/Table_dialog.cpp	/^bool Table_dialog::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_dialog	signature:(u32 fsId, const str8& path)
tbl::Table_dialog::size	table/Table_dialog.cpp	/^size_t Table_dialog::size() const {$/;"	f	class:tbl::Table_dialog	signature:() const
tbl::Table_dialog::version	table/Table_dialog.cpp	/^u32 Table_dialog::version() const {$/;"	f	class:tbl::Table_dialog	signature:() const
tbl::Table_dialog::~Table_dialog	table/Table_dialog.cpp	/^Table_dialog::~Table_dialog() {$/;"	f	class:tbl::Table_dialog	signature:()
tbl::Table_diamond_shop::Table_diamond_shop	table/Table_diamond_shop.cpp	/^Table_diamond_shop::Table_diamond_shop()$/;"	f	class:tbl::Table_diamond_shop	signature:()
tbl::Table_diamond_shop::at	table/Table_diamond_shop.cpp	/^const Record_diamond_shop * Table_diamond_shop::at(size_t index) const{$/;"	f	class:tbl::Table_diamond_shop	signature:(size_t index) const
tbl::Table_diamond_shop::find	table/Table_diamond_shop.cpp	/^size_t Table_diamond_shop::find(u32 _Id) {$/;"	f	class:tbl::Table_diamond_shop	signature:(u32 _Id)
tbl::Table_diamond_shop::fini	table/Table_diamond_shop.cpp	/^void Table_diamond_shop::fini() {$/;"	f	class:tbl::Table_diamond_shop	signature:()
tbl::Table_diamond_shop::init	table/Table_diamond_shop.cpp	/^bool Table_diamond_shop::init(DataStream &stream) {$/;"	f	class:tbl::Table_diamond_shop	signature:(DataStream &stream)
tbl::Table_diamond_shop::init	table/Table_diamond_shop.cpp	/^bool Table_diamond_shop::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_diamond_shop	signature:(u32 fsId, const str8& path)
tbl::Table_diamond_shop::size	table/Table_diamond_shop.cpp	/^size_t Table_diamond_shop::size() const {$/;"	f	class:tbl::Table_diamond_shop	signature:() const
tbl::Table_diamond_shop::version	table/Table_diamond_shop.cpp	/^u32 Table_diamond_shop::version() const {$/;"	f	class:tbl::Table_diamond_shop	signature:() const
tbl::Table_diamond_shop::~Table_diamond_shop	table/Table_diamond_shop.cpp	/^Table_diamond_shop::~Table_diamond_shop() {$/;"	f	class:tbl::Table_diamond_shop	signature:()
tbl::Table_force_guide::Table_force_guide	table/Table_force_guide.cpp	/^Table_force_guide::Table_force_guide()$/;"	f	class:tbl::Table_force_guide	signature:()
tbl::Table_force_guide::at	table/Table_force_guide.cpp	/^const Record_force_guide * Table_force_guide::at(size_t index) const{$/;"	f	class:tbl::Table_force_guide	signature:(size_t index) const
tbl::Table_force_guide::find	table/Table_force_guide.cpp	/^size_t Table_force_guide::find(u32 _GroupId,u32 _StepId) {$/;"	f	class:tbl::Table_force_guide	signature:(u32 _GroupId,u32 _StepId)
tbl::Table_force_guide::fini	table/Table_force_guide.cpp	/^void Table_force_guide::fini() {$/;"	f	class:tbl::Table_force_guide	signature:()
tbl::Table_force_guide::init	table/Table_force_guide.cpp	/^bool Table_force_guide::init(DataStream &stream) {$/;"	f	class:tbl::Table_force_guide	signature:(DataStream &stream)
tbl::Table_force_guide::init	table/Table_force_guide.cpp	/^bool Table_force_guide::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_force_guide	signature:(u32 fsId, const str8& path)
tbl::Table_force_guide::size	table/Table_force_guide.cpp	/^size_t Table_force_guide::size() const {$/;"	f	class:tbl::Table_force_guide	signature:() const
tbl::Table_force_guide::version	table/Table_force_guide.cpp	/^u32 Table_force_guide::version() const {$/;"	f	class:tbl::Table_force_guide	signature:() const
tbl::Table_force_guide::~Table_force_guide	table/Table_force_guide.cpp	/^Table_force_guide::~Table_force_guide() {$/;"	f	class:tbl::Table_force_guide	signature:()
tbl::Table_gold_mine::Table_gold_mine	table/Table_gold_mine.cpp	/^Table_gold_mine::Table_gold_mine()$/;"	f	class:tbl::Table_gold_mine	signature:()
tbl::Table_gold_mine::at	table/Table_gold_mine.cpp	/^const Record_gold_mine * Table_gold_mine::at(size_t index) const{$/;"	f	class:tbl::Table_gold_mine	signature:(size_t index) const
tbl::Table_gold_mine::find	table/Table_gold_mine.cpp	/^size_t Table_gold_mine::find(u32 _Id) {$/;"	f	class:tbl::Table_gold_mine	signature:(u32 _Id)
tbl::Table_gold_mine::fini	table/Table_gold_mine.cpp	/^void Table_gold_mine::fini() {$/;"	f	class:tbl::Table_gold_mine	signature:()
tbl::Table_gold_mine::init	table/Table_gold_mine.cpp	/^bool Table_gold_mine::init(DataStream &stream) {$/;"	f	class:tbl::Table_gold_mine	signature:(DataStream &stream)
tbl::Table_gold_mine::init	table/Table_gold_mine.cpp	/^bool Table_gold_mine::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_gold_mine	signature:(u32 fsId, const str8& path)
tbl::Table_gold_mine::size	table/Table_gold_mine.cpp	/^size_t Table_gold_mine::size() const {$/;"	f	class:tbl::Table_gold_mine	signature:() const
tbl::Table_gold_mine::version	table/Table_gold_mine.cpp	/^u32 Table_gold_mine::version() const {$/;"	f	class:tbl::Table_gold_mine	signature:() const
tbl::Table_gold_mine::~Table_gold_mine	table/Table_gold_mine.cpp	/^Table_gold_mine::~Table_gold_mine() {$/;"	f	class:tbl::Table_gold_mine	signature:()
tbl::Table_herorune::Table_herorune	table/Table_herorune.cpp	/^Table_herorune::Table_herorune()$/;"	f	class:tbl::Table_herorune	signature:()
tbl::Table_herorune::at	table/Table_herorune.cpp	/^const Record_herorune * Table_herorune::at(size_t index) const{$/;"	f	class:tbl::Table_herorune	signature:(size_t index) const
tbl::Table_herorune::find	table/Table_herorune.cpp	/^size_t Table_herorune::find(u32 _RuneClass,u32 _RuneRank) {$/;"	f	class:tbl::Table_herorune	signature:(u32 _RuneClass,u32 _RuneRank)
tbl::Table_herorune::fini	table/Table_herorune.cpp	/^void Table_herorune::fini() {$/;"	f	class:tbl::Table_herorune	signature:()
tbl::Table_herorune::init	table/Table_herorune.cpp	/^bool Table_herorune::init(DataStream &stream) {$/;"	f	class:tbl::Table_herorune	signature:(DataStream &stream)
tbl::Table_herorune::init	table/Table_herorune.cpp	/^bool Table_herorune::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_herorune	signature:(u32 fsId, const str8& path)
tbl::Table_herorune::size	table/Table_herorune.cpp	/^size_t Table_herorune::size() const {$/;"	f	class:tbl::Table_herorune	signature:() const
tbl::Table_herorune::version	table/Table_herorune.cpp	/^u32 Table_herorune::version() const {$/;"	f	class:tbl::Table_herorune	signature:() const
tbl::Table_herorune::~Table_herorune	table/Table_herorune.cpp	/^Table_herorune::~Table_herorune() {$/;"	f	class:tbl::Table_herorune	signature:()
tbl::Table_hint::Table_hint	table/Table_hint.cpp	/^Table_hint::Table_hint()$/;"	f	class:tbl::Table_hint	signature:()
tbl::Table_hint::at	table/Table_hint.cpp	/^const Record_hint * Table_hint::at(size_t index) const{$/;"	f	class:tbl::Table_hint	signature:(size_t index) const
tbl::Table_hint::fini	table/Table_hint.cpp	/^void Table_hint::fini() {$/;"	f	class:tbl::Table_hint	signature:()
tbl::Table_hint::init	table/Table_hint.cpp	/^bool Table_hint::init(DataStream &stream) {$/;"	f	class:tbl::Table_hint	signature:(DataStream &stream)
tbl::Table_hint::init	table/Table_hint.cpp	/^bool Table_hint::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_hint	signature:(u32 fsId, const str8& path)
tbl::Table_hint::size	table/Table_hint.cpp	/^size_t Table_hint::size() const {$/;"	f	class:tbl::Table_hint	signature:() const
tbl::Table_hint::version	table/Table_hint.cpp	/^u32 Table_hint::version() const {$/;"	f	class:tbl::Table_hint	signature:() const
tbl::Table_hint::~Table_hint	table/Table_hint.cpp	/^Table_hint::~Table_hint() {$/;"	f	class:tbl::Table_hint	signature:()
tbl::Table_item_store::Table_item_store	table/Table_item_store.cpp	/^Table_item_store::Table_item_store()$/;"	f	class:tbl::Table_item_store	signature:()
tbl::Table_item_store::at	table/Table_item_store.cpp	/^const Record_item_store * Table_item_store::at(size_t index) const{$/;"	f	class:tbl::Table_item_store	signature:(size_t index) const
tbl::Table_item_store::find	table/Table_item_store.cpp	/^size_t Table_item_store::find(u32 _id) {$/;"	f	class:tbl::Table_item_store	signature:(u32 _id)
tbl::Table_item_store::fini	table/Table_item_store.cpp	/^void Table_item_store::fini() {$/;"	f	class:tbl::Table_item_store	signature:()
tbl::Table_item_store::init	table/Table_item_store.cpp	/^bool Table_item_store::init(DataStream &stream) {$/;"	f	class:tbl::Table_item_store	signature:(DataStream &stream)
tbl::Table_item_store::init	table/Table_item_store.cpp	/^bool Table_item_store::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_item_store	signature:(u32 fsId, const str8& path)
tbl::Table_item_store::size	table/Table_item_store.cpp	/^size_t Table_item_store::size() const {$/;"	f	class:tbl::Table_item_store	signature:() const
tbl::Table_item_store::version	table/Table_item_store.cpp	/^u32 Table_item_store::version() const {$/;"	f	class:tbl::Table_item_store	signature:() const
tbl::Table_item_store::~Table_item_store	table/Table_item_store.cpp	/^Table_item_store::~Table_item_store() {$/;"	f	class:tbl::Table_item_store	signature:()
tbl::Table_level::Table_level	table/Table_level.cpp	/^Table_level::Table_level()$/;"	f	class:tbl::Table_level	signature:()
tbl::Table_level::at	table/Table_level.cpp	/^const Record_level * Table_level::at(size_t index) const{$/;"	f	class:tbl::Table_level	signature:(size_t index) const
tbl::Table_level::find	table/Table_level.cpp	/^size_t Table_level::find(u32 _LevelId) {$/;"	f	class:tbl::Table_level	signature:(u32 _LevelId)
tbl::Table_level::fini	table/Table_level.cpp	/^void Table_level::fini() {$/;"	f	class:tbl::Table_level	signature:()
tbl::Table_level::init	table/Table_level.cpp	/^bool Table_level::init(DataStream &stream) {$/;"	f	class:tbl::Table_level	signature:(DataStream &stream)
tbl::Table_level::init	table/Table_level.cpp	/^bool Table_level::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_level	signature:(u32 fsId, const str8& path)
tbl::Table_level::size	table/Table_level.cpp	/^size_t Table_level::size() const {$/;"	f	class:tbl::Table_level	signature:() const
tbl::Table_level::version	table/Table_level.cpp	/^u32 Table_level::version() const {$/;"	f	class:tbl::Table_level	signature:() const
tbl::Table_level::~Table_level	table/Table_level.cpp	/^Table_level::~Table_level() {$/;"	f	class:tbl::Table_level	signature:()
tbl::Table_levelclass::Table_levelclass	table/Table_levelclass.cpp	/^Table_levelclass::Table_levelclass()$/;"	f	class:tbl::Table_levelclass	signature:()
tbl::Table_levelclass::at	table/Table_levelclass.cpp	/^const Record_levelclass * Table_levelclass::at(size_t index) const{$/;"	f	class:tbl::Table_levelclass	signature:(size_t index) const
tbl::Table_levelclass::find	table/Table_levelclass.cpp	/^size_t Table_levelclass::find(u32 _ID) {$/;"	f	class:tbl::Table_levelclass	signature:(u32 _ID)
tbl::Table_levelclass::fini	table/Table_levelclass.cpp	/^void Table_levelclass::fini() {$/;"	f	class:tbl::Table_levelclass	signature:()
tbl::Table_levelclass::init	table/Table_levelclass.cpp	/^bool Table_levelclass::init(DataStream &stream) {$/;"	f	class:tbl::Table_levelclass	signature:(DataStream &stream)
tbl::Table_levelclass::init	table/Table_levelclass.cpp	/^bool Table_levelclass::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_levelclass	signature:(u32 fsId, const str8& path)
tbl::Table_levelclass::size	table/Table_levelclass.cpp	/^size_t Table_levelclass::size() const {$/;"	f	class:tbl::Table_levelclass	signature:() const
tbl::Table_levelclass::version	table/Table_levelclass.cpp	/^u32 Table_levelclass::version() const {$/;"	f	class:tbl::Table_levelclass	signature:() const
tbl::Table_levelclass::~Table_levelclass	table/Table_levelclass.cpp	/^Table_levelclass::~Table_levelclass() {$/;"	f	class:tbl::Table_levelclass	signature:()
tbl::Table_mission::Table_mission	table/Table_mission.cpp	/^Table_mission::Table_mission()$/;"	f	class:tbl::Table_mission	signature:()
tbl::Table_mission::at	table/Table_mission.cpp	/^const Record_mission * Table_mission::at(size_t index) const{$/;"	f	class:tbl::Table_mission	signature:(size_t index) const
tbl::Table_mission::find	table/Table_mission.cpp	/^size_t Table_mission::find(u32 _Id) {$/;"	f	class:tbl::Table_mission	signature:(u32 _Id)
tbl::Table_mission::fini	table/Table_mission.cpp	/^void Table_mission::fini() {$/;"	f	class:tbl::Table_mission	signature:()
tbl::Table_mission::init	table/Table_mission.cpp	/^bool Table_mission::init(DataStream &stream) {$/;"	f	class:tbl::Table_mission	signature:(DataStream &stream)
tbl::Table_mission::init	table/Table_mission.cpp	/^bool Table_mission::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_mission	signature:(u32 fsId, const str8& path)
tbl::Table_mission::size	table/Table_mission.cpp	/^size_t Table_mission::size() const {$/;"	f	class:tbl::Table_mission	signature:() const
tbl::Table_mission::version	table/Table_mission.cpp	/^u32 Table_mission::version() const {$/;"	f	class:tbl::Table_mission	signature:() const
tbl::Table_mission::~Table_mission	table/Table_mission.cpp	/^Table_mission::~Table_mission() {$/;"	f	class:tbl::Table_mission	signature:()
tbl::Table_monster::Table_monster	table/Table_monster.cpp	/^Table_monster::Table_monster()$/;"	f	class:tbl::Table_monster	signature:()
tbl::Table_monster::at	table/Table_monster.cpp	/^const Record_monster * Table_monster::at(size_t index) const{$/;"	f	class:tbl::Table_monster	signature:(size_t index) const
tbl::Table_monster::find	table/Table_monster.cpp	/^size_t Table_monster::find(u32 _MonsterID) {$/;"	f	class:tbl::Table_monster	signature:(u32 _MonsterID)
tbl::Table_monster::fini	table/Table_monster.cpp	/^void Table_monster::fini() {$/;"	f	class:tbl::Table_monster	signature:()
tbl::Table_monster::init	table/Table_monster.cpp	/^bool Table_monster::init(DataStream &stream) {$/;"	f	class:tbl::Table_monster	signature:(DataStream &stream)
tbl::Table_monster::init	table/Table_monster.cpp	/^bool Table_monster::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_monster	signature:(u32 fsId, const str8& path)
tbl::Table_monster::size	table/Table_monster.cpp	/^size_t Table_monster::size() const {$/;"	f	class:tbl::Table_monster	signature:() const
tbl::Table_monster::version	table/Table_monster.cpp	/^u32 Table_monster::version() const {$/;"	f	class:tbl::Table_monster	signature:() const
tbl::Table_monster::~Table_monster	table/Table_monster.cpp	/^Table_monster::~Table_monster() {$/;"	f	class:tbl::Table_monster	signature:()
tbl::Table_object::Table_object	table/Table_object.cpp	/^Table_object::Table_object()$/;"	f	class:tbl::Table_object	signature:()
tbl::Table_object::at	table/Table_object.cpp	/^const Record_object * Table_object::at(size_t index) const{$/;"	f	class:tbl::Table_object	signature:(size_t index) const
tbl::Table_object::find	table/Table_object.cpp	/^size_t Table_object::find(u32 _ObjectId) {$/;"	f	class:tbl::Table_object	signature:(u32 _ObjectId)
tbl::Table_object::fini	table/Table_object.cpp	/^void Table_object::fini() {$/;"	f	class:tbl::Table_object	signature:()
tbl::Table_object::init	table/Table_object.cpp	/^bool Table_object::init(DataStream &stream) {$/;"	f	class:tbl::Table_object	signature:(DataStream &stream)
tbl::Table_object::init	table/Table_object.cpp	/^bool Table_object::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_object	signature:(u32 fsId, const str8& path)
tbl::Table_object::size	table/Table_object.cpp	/^size_t Table_object::size() const {$/;"	f	class:tbl::Table_object	signature:() const
tbl::Table_object::version	table/Table_object.cpp	/^u32 Table_object::version() const {$/;"	f	class:tbl::Table_object	signature:() const
tbl::Table_object::~Table_object	table/Table_object.cpp	/^Table_object::~Table_object() {$/;"	f	class:tbl::Table_object	signature:()
tbl::Table_platform::Table_platform	table/Table_platform.cpp	/^Table_platform::Table_platform()$/;"	f	class:tbl::Table_platform	signature:()
tbl::Table_platform::at	table/Table_platform.cpp	/^const Record_platform * Table_platform::at(size_t index) const{$/;"	f	class:tbl::Table_platform	signature:(size_t index) const
tbl::Table_platform::find	table/Table_platform.cpp	/^size_t Table_platform::find(u32 _Category) {$/;"	f	class:tbl::Table_platform	signature:(u32 _Category)
tbl::Table_platform::fini	table/Table_platform.cpp	/^void Table_platform::fini() {$/;"	f	class:tbl::Table_platform	signature:()
tbl::Table_platform::init	table/Table_platform.cpp	/^bool Table_platform::init(DataStream &stream) {$/;"	f	class:tbl::Table_platform	signature:(DataStream &stream)
tbl::Table_platform::init	table/Table_platform.cpp	/^bool Table_platform::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_platform	signature:(u32 fsId, const str8& path)
tbl::Table_platform::size	table/Table_platform.cpp	/^size_t Table_platform::size() const {$/;"	f	class:tbl::Table_platform	signature:() const
tbl::Table_platform::version	table/Table_platform.cpp	/^u32 Table_platform::version() const {$/;"	f	class:tbl::Table_platform	signature:() const
tbl::Table_platform::~Table_platform	table/Table_platform.cpp	/^Table_platform::~Table_platform() {$/;"	f	class:tbl::Table_platform	signature:()
tbl::Table_progress::Table_progress	table/Table_progress.cpp	/^Table_progress::Table_progress()$/;"	f	class:tbl::Table_progress	signature:()
tbl::Table_progress::at	table/Table_progress.cpp	/^const Record_progress * Table_progress::at(size_t index) const{$/;"	f	class:tbl::Table_progress	signature:(size_t index) const
tbl::Table_progress::fini	table/Table_progress.cpp	/^void Table_progress::fini() {$/;"	f	class:tbl::Table_progress	signature:()
tbl::Table_progress::init	table/Table_progress.cpp	/^bool Table_progress::init(DataStream &stream) {$/;"	f	class:tbl::Table_progress	signature:(DataStream &stream)
tbl::Table_progress::init	table/Table_progress.cpp	/^bool Table_progress::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_progress	signature:(u32 fsId, const str8& path)
tbl::Table_progress::size	table/Table_progress.cpp	/^size_t Table_progress::size() const {$/;"	f	class:tbl::Table_progress	signature:() const
tbl::Table_progress::version	table/Table_progress.cpp	/^u32 Table_progress::version() const {$/;"	f	class:tbl::Table_progress	signature:() const
tbl::Table_progress::~Table_progress	table/Table_progress.cpp	/^Table_progress::~Table_progress() {$/;"	f	class:tbl::Table_progress	signature:()
tbl::Table_spell::Table_spell	table/Table_spell.cpp	/^Table_spell::Table_spell()$/;"	f	class:tbl::Table_spell	signature:()
tbl::Table_spell::at	table/Table_spell.cpp	/^const Record_spell * Table_spell::at(size_t index) const{$/;"	f	class:tbl::Table_spell	signature:(size_t index) const
tbl::Table_spell::find	table/Table_spell.cpp	/^size_t Table_spell::find(u32 _SpellId) {$/;"	f	class:tbl::Table_spell	signature:(u32 _SpellId)
tbl::Table_spell::fini	table/Table_spell.cpp	/^void Table_spell::fini() {$/;"	f	class:tbl::Table_spell	signature:()
tbl::Table_spell::init	table/Table_spell.cpp	/^bool Table_spell::init(DataStream &stream) {$/;"	f	class:tbl::Table_spell	signature:(DataStream &stream)
tbl::Table_spell::init	table/Table_spell.cpp	/^bool Table_spell::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_spell	signature:(u32 fsId, const str8& path)
tbl::Table_spell::size	table/Table_spell.cpp	/^size_t Table_spell::size() const {$/;"	f	class:tbl::Table_spell	signature:() const
tbl::Table_spell::version	table/Table_spell.cpp	/^u32 Table_spell::version() const {$/;"	f	class:tbl::Table_spell	signature:() const
tbl::Table_spell::~Table_spell	table/Table_spell.cpp	/^Table_spell::~Table_spell() {$/;"	f	class:tbl::Table_spell	signature:()
tbl::Table_sub_wave::Table_sub_wave	table/Table_sub_wave.cpp	/^Table_sub_wave::Table_sub_wave()$/;"	f	class:tbl::Table_sub_wave	signature:()
tbl::Table_sub_wave::at	table/Table_sub_wave.cpp	/^const Record_sub_wave * Table_sub_wave::at(size_t index) const{$/;"	f	class:tbl::Table_sub_wave	signature:(size_t index) const
tbl::Table_sub_wave::find	table/Table_sub_wave.cpp	/^size_t Table_sub_wave::find(u32 _SubWaveId) {$/;"	f	class:tbl::Table_sub_wave	signature:(u32 _SubWaveId)
tbl::Table_sub_wave::fini	table/Table_sub_wave.cpp	/^void Table_sub_wave::fini() {$/;"	f	class:tbl::Table_sub_wave	signature:()
tbl::Table_sub_wave::init	table/Table_sub_wave.cpp	/^bool Table_sub_wave::init(DataStream &stream) {$/;"	f	class:tbl::Table_sub_wave	signature:(DataStream &stream)
tbl::Table_sub_wave::init	table/Table_sub_wave.cpp	/^bool Table_sub_wave::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_sub_wave	signature:(u32 fsId, const str8& path)
tbl::Table_sub_wave::size	table/Table_sub_wave.cpp	/^size_t Table_sub_wave::size() const {$/;"	f	class:tbl::Table_sub_wave	signature:() const
tbl::Table_sub_wave::version	table/Table_sub_wave.cpp	/^u32 Table_sub_wave::version() const {$/;"	f	class:tbl::Table_sub_wave	signature:() const
tbl::Table_sub_wave::~Table_sub_wave	table/Table_sub_wave.cpp	/^Table_sub_wave::~Table_sub_wave() {$/;"	f	class:tbl::Table_sub_wave	signature:()
tbl::Table_tech::Table_tech	table/Table_tech.cpp	/^Table_tech::Table_tech()$/;"	f	class:tbl::Table_tech	signature:()
tbl::Table_tech::at	table/Table_tech.cpp	/^const Record_tech * Table_tech::at(size_t index) const{$/;"	f	class:tbl::Table_tech	signature:(size_t index) const
tbl::Table_tech::find	table/Table_tech.cpp	/^size_t Table_tech::find(u32 _Slot,u32 _Rank) {$/;"	f	class:tbl::Table_tech	signature:(u32 _Slot,u32 _Rank)
tbl::Table_tech::fini	table/Table_tech.cpp	/^void Table_tech::fini() {$/;"	f	class:tbl::Table_tech	signature:()
tbl::Table_tech::init	table/Table_tech.cpp	/^bool Table_tech::init(DataStream &stream) {$/;"	f	class:tbl::Table_tech	signature:(DataStream &stream)
tbl::Table_tech::init	table/Table_tech.cpp	/^bool Table_tech::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_tech	signature:(u32 fsId, const str8& path)
tbl::Table_tech::size	table/Table_tech.cpp	/^size_t Table_tech::size() const {$/;"	f	class:tbl::Table_tech	signature:() const
tbl::Table_tech::version	table/Table_tech.cpp	/^u32 Table_tech::version() const {$/;"	f	class:tbl::Table_tech	signature:() const
tbl::Table_tech::~Table_tech	table/Table_tech.cpp	/^Table_tech::~Table_tech() {$/;"	f	class:tbl::Table_tech	signature:()
tbl::Table_tower::Table_tower	table/Table_tower.cpp	/^Table_tower::Table_tower()$/;"	f	class:tbl::Table_tower	signature:()
tbl::Table_tower::at	table/Table_tower.cpp	/^const Record_tower * Table_tower::at(size_t index) const{$/;"	f	class:tbl::Table_tower	signature:(size_t index) const
tbl::Table_tower::find	table/Table_tower.cpp	/^size_t Table_tower::find(u32 _TowerID) {$/;"	f	class:tbl::Table_tower	signature:(u32 _TowerID)
tbl::Table_tower::fini	table/Table_tower.cpp	/^void Table_tower::fini() {$/;"	f	class:tbl::Table_tower	signature:()
tbl::Table_tower::init	table/Table_tower.cpp	/^bool Table_tower::init(DataStream &stream) {$/;"	f	class:tbl::Table_tower	signature:(DataStream &stream)
tbl::Table_tower::init	table/Table_tower.cpp	/^bool Table_tower::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_tower	signature:(u32 fsId, const str8& path)
tbl::Table_tower::size	table/Table_tower.cpp	/^size_t Table_tower::size() const {$/;"	f	class:tbl::Table_tower	signature:() const
tbl::Table_tower::version	table/Table_tower.cpp	/^u32 Table_tower::version() const {$/;"	f	class:tbl::Table_tower	signature:() const
tbl::Table_tower::~Table_tower	table/Table_tower.cpp	/^Table_tower::~Table_tower() {$/;"	f	class:tbl::Table_tower	signature:()
tbl::Table_training::Table_training	table/Table_training.cpp	/^Table_training::Table_training()$/;"	f	class:tbl::Table_training	signature:()
tbl::Table_training::at	table/Table_training.cpp	/^const Record_training * Table_training::at(size_t index) const{$/;"	f	class:tbl::Table_training	signature:(size_t index) const
tbl::Table_training::find	table/Table_training.cpp	/^size_t Table_training::find(u32 _Class,u32 _Slot,u32 _AdvancedTimes) {$/;"	f	class:tbl::Table_training	signature:(u32 _Class,u32 _Slot,u32 _AdvancedTimes)
tbl::Table_training::fini	table/Table_training.cpp	/^void Table_training::fini() {$/;"	f	class:tbl::Table_training	signature:()
tbl::Table_training::init	table/Table_training.cpp	/^bool Table_training::init(DataStream &stream) {$/;"	f	class:tbl::Table_training	signature:(DataStream &stream)
tbl::Table_training::init	table/Table_training.cpp	/^bool Table_training::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_training	signature:(u32 fsId, const str8& path)
tbl::Table_training::size	table/Table_training.cpp	/^size_t Table_training::size() const {$/;"	f	class:tbl::Table_training	signature:() const
tbl::Table_training::version	table/Table_training.cpp	/^u32 Table_training::version() const {$/;"	f	class:tbl::Table_training	signature:() const
tbl::Table_training::~Table_training	table/Table_training.cpp	/^Table_training::~Table_training() {$/;"	f	class:tbl::Table_training	signature:()
tbl::Table_wave::Table_wave	table/Table_wave.cpp	/^Table_wave::Table_wave()$/;"	f	class:tbl::Table_wave	signature:()
tbl::Table_wave::at	table/Table_wave.cpp	/^const Record_wave * Table_wave::at(size_t index) const{$/;"	f	class:tbl::Table_wave	signature:(size_t index) const
tbl::Table_wave::find	table/Table_wave.cpp	/^size_t Table_wave::find(u32 _LevelId,u32 _WaveId) {$/;"	f	class:tbl::Table_wave	signature:(u32 _LevelId,u32 _WaveId)
tbl::Table_wave::fini	table/Table_wave.cpp	/^void Table_wave::fini() {$/;"	f	class:tbl::Table_wave	signature:()
tbl::Table_wave::init	table/Table_wave.cpp	/^bool Table_wave::init(DataStream &stream) {$/;"	f	class:tbl::Table_wave	signature:(DataStream &stream)
tbl::Table_wave::init	table/Table_wave.cpp	/^bool Table_wave::init(u32 fsId, const str8& path) {$/;"	f	class:tbl::Table_wave	signature:(u32 fsId, const str8& path)
tbl::Table_wave::size	table/Table_wave.cpp	/^size_t Table_wave::size() const {$/;"	f	class:tbl::Table_wave	signature:() const
tbl::Table_wave::version	table/Table_wave.cpp	/^u32 Table_wave::version() const {$/;"	f	class:tbl::Table_wave	signature:() const
tbl::Table_wave::~Table_wave	table/Table_wave.cpp	/^Table_wave::~Table_wave() {$/;"	f	class:tbl::Table_wave	signature:()
tbl::_read_str8	table/TableBase.cpp	/^    void _read_str8(DataStream &stream, str8 &value) {$/;"	f	namespace:tbl	signature:(DataStream &stream, str8 &value)
tbl::_read_z_u32	table/TableBase.cpp	/^    u32 _read_z_u32(DataStream &stream) {$/;"	f	namespace:tbl	signature:(DataStream &stream)
tbl::_write_str8	table/TableBase.cpp	/^    void _write_str8(DataStream &stream, const str8 &value) {$/;"	f	namespace:tbl	signature:(DataStream &stream, const str8 &value)
tbl::_write_z_u32	table/TableBase.cpp	/^    void _write_z_u32(DataStream &stream, u32 value) {$/;"	f	namespace:tbl	signature:(DataStream &stream, u32 value)
tbl::operator <<	table/TableBase.cpp	/^	DataStream & operator <<(DataStream &stream, const Field_float &field) {$/;"	f	namespace:tbl	signature:(DataStream &stream, const Field_float &field)
tbl::operator <<	table/TableBase.cpp	/^	DataStream & operator <<(DataStream &stream, const Field_int &field) {$/;"	f	namespace:tbl	signature:(DataStream &stream, const Field_int &field)
tbl::operator <<	table/TableBase.cpp	/^	DataStream & operator <<(DataStream &stream, const Field_string &field) {$/;"	f	namespace:tbl	signature:(DataStream &stream, const Field_string &field)
tbl::operator <<	table/TableBase.cpp	/^	DataStream & operator <<(DataStream &stream, const Field_uint &field) {$/;"	f	namespace:tbl	signature:(DataStream &stream, const Field_uint &field)
tbl::operator <<	table/TableBase.cpp	/^    DataStream & operator <<(DataStream &stream, const RecordFormat &format) {$/;"	f	namespace:tbl	signature:(DataStream &stream, const RecordFormat &format)
tbl::operator >>	table/TableBase.cpp	/^    DataStream & operator >>(DataStream &stream, Field_float &field) {$/;"	f	namespace:tbl	signature:(DataStream &stream, Field_float &field)
tbl::operator >>	table/TableBase.cpp	/^    DataStream & operator >>(DataStream &stream, Field_int &field) {$/;"	f	namespace:tbl	signature:(DataStream &stream, Field_int &field)
tbl::operator >>	table/TableBase.cpp	/^    DataStream & operator >>(DataStream &stream, Field_string &field) {$/;"	f	namespace:tbl	signature:(DataStream &stream, Field_string &field)
tbl::operator >>	table/TableBase.cpp	/^    DataStream & operator >>(DataStream &stream, Field_uint &field) {$/;"	f	namespace:tbl	signature:(DataStream &stream, Field_uint &field)
tbl::operator >>	table/TableBase.cpp	/^    DataStream & operator >>(DataStream &stream, RecordFormat &format) {$/;"	f	namespace:tbl	signature:(DataStream &stream, RecordFormat &format)
techList	worker/BSTechUpgrade.cpp	/^ std::vector<u32> & BSTechUpgrade::techList()$/;"	f	class:BSTechUpgrade	signature:()
time	DateTime.h	/^        u32 time;$/;"	m	union:Time::__anon3	access:public
title	manager/BSCouponManager.h	/^    vn::str8 title;$/;"	m	struct:AllocatedObject	access:public
to_string	worker/UUID.cpp	/^str8 UUID::to_string() const$/;"	f	class:UUID	signature:() const
today	DateTime.cpp	/^Date Date::today() {$/;"	f	class:Date	signature:()
today	DateTime.h	/^    static Date today();$/;"	p	struct:Date	access:public
tower	manager/BSFactory.cpp	/^tbl::Table_tower & BSFactory::tower()$/;"	f	class:BSFactory	signature:()
towerList	worker/BSTowerUpgrade.cpp	/^const std::vector<std::vector<u32>> & BSTowerUpgrade::towerList()$/;"	f	class:BSTowerUpgrade	signature:()
type	Log/DC_DataBase_EventLog.h	/^    virtual DC_DataBase_EventLog_Type type() const = 0;$/;"	p	struct:RefCounted	access:public
type	Log/DC_File_EventLog.h	/^    virtual DC_File_EventLog_Type type() const = 0;$/;"	p	struct:AllocatedObject	access:public
type	manager/BSCouponManager.h	/^    Type type() const { return kCT_Diamonds; }$/;"	f	struct:BSCoupon	access:public
type	manager/BSCouponManager.h	/^    Type type() const { return kCT_Hero; }$/;"	f	struct:BSCoupon	access:public
type	manager/BSCouponManager.h	/^    Type type() const { return kCT_Items; }$/;"	f	struct:BSCoupon	access:public
type	manager/BSCouponManager.h	/^    virtual Type type() const = 0;$/;"	p	struct:AllocatedObject	access:public
u32	Log/DC_DataBase_EventLog.h	/^enum DC_DataBase_EventLog_Type : u32 {$/;"	g
u32	Log/DC_File_EventLog.h	/^enum DC_File_EventLog_Type : u32 {$/;"	g
u32	manager/BSAwardManager.h	/^    std::vector<std::pair<u32, u32>> afterWin; \/\/ <id, weight>$/;"	m	struct:AllocatedObject	access:public
u32	manager/BSAwardManager.h	/^    std::vector<std::pair<u32, u32>> items; \/\/ <id, count>$/;"	m	struct:AllocatedObject	access:public
u32	manager/BSCouponManager.h	/^    std::vector<std::pair<u32, u32>> items; \/\/ <id, count>$/;"	m	struct:BSCoupon	access:public
u64	Log/DC_File_EventLog.h	/^    std::pair<u64, u64> userId = {0, 0};$/;"	m	struct:DC_File_EventLog	access:public
unlock_rune	worker/BSHero.cpp	/^bool BSHero::unlock_rune(u32 idx, u32 runeIdx)$/;"	f	class:BSHero	signature:(u32 idx, u32 runeIdx)
unlocked	worker/BSHero.cpp	/^bool BSHero::unlocked(u32 heroClassId) {$/;"	f	class:BSHero	signature:(u32 heroClassId)
unmeet_monster	worker/BSMonsterMap.cpp	/^void  BSMonsterMap::unmeet_monster(u32 id)$/;"	f	class:BSMonsterMap	signature:(u32 id)
update	OPTDServer.cpp	/^void OPTDServer::update(f32 deltaTime){$/;"	f	class:OPTDServer	signature:(f32 deltaTime)
update	PPLink/PPLinkManger.cpp	/^void PPLinkManger::update(vn::u64 diff){$/;"	f	class:PPLinkManger	signature:(vn::u64 diff)
update	WorldManager.cpp	/^void WorldManager::update(vn::f32 deltaTime)$/;"	f	class:WorldManager	signature:(vn::f32 deltaTime)
update	manager/DC_DataBase.cpp	/^void DC_DataBase::update(f32 deltaTime)$/;"	f	class:DC_DataBase	signature:(f32 deltaTime)
update	manager/DC_File.cpp	/^void DC_File::update(f32 deltaTime)$/;"	f	class:DC_File	signature:(f32 deltaTime)
update	worker/BSGoldMine.cpp	/^bool BSGoldMine::GoldMine::update(f32 deltaTime)$/;"	f	class:BSGoldMine::GoldMine	signature:(f32 deltaTime)
update	worker/BSGoldMine.cpp	/^void BSGoldMine::update(f32 deltaTime)$/;"	f	class:BSGoldMine	signature:(f32 deltaTime)
update	worker/BSIntrusion.cpp	/^void BSIntrusion::update(f32 deltaTime)$/;"	f	class:BSIntrusion	signature:(f32 deltaTime)
update	worker/LoggedUser.cpp	/^void LoggedUser::update(f32 deltaTime)$/;"	f	class:LoggedUser	signature:(f32 deltaTime)
update	worker/PreLoggingUser.cpp	/^void PreLoggingUser::update(f32 deltaTime) {$/;"	f	class:PreLoggingUser	signature:(f32 deltaTime)
updateAnnouncement	WorldManager.cpp	/^void WorldManager::updateAnnouncement(vn::str8 content)$/;"	f	class:WorldManager	signature:(vn::str8 content)
update_levelInfo	worker/BSLevel.cpp	/^bool BSLevel::update_levelInfo(const tbl::Record_level *data, u32 starNum, s32 score, bool shovel, bool watch, bool *intrusion,bool *ifNew,s32 *addDiamond) {$/;"	f	class:BSLevel	signature:(const tbl::Record_level *data, u32 starNum, s32 score, bool shovel, bool watch, bool *intrusion,bool *ifNew,s32 *addDiamond)
upgrade_hero	worker/BSHero.cpp	/^bool BSHero::upgrade_hero(u32 idx, bool useCoupon,s32 *payDiamond)$/;"	f	class:BSHero	signature:(u32 idx, bool useCoupon,s32 *payDiamond)
upgrade_tech	worker/BSTechUpgrade.cpp	/^bool BSTechUpgrade::upgrade_tech(u32 idx,vn::s32 *diamondPay)$/;"	f	class:BSTechUpgrade	signature:(u32 idx,vn::s32 *diamondPay)
upgrade_tower	worker/BSTowerUpgrade.cpp	/^bool BSTowerUpgrade::upgrade_tower(u32 idx, u32 num,vn::s32 *diamondPay)$/;"	f	class:BSTowerUpgrade	signature:(u32 idx, u32 num,vn::s32 *diamondPay)
use	worker/BSItemStore.cpp	/^bool BSItemStore::use(u32 id)$/;"	f	class:BSItemStore	signature:(u32 id)
userId	Log/DC_File_EventLog.h	/^    std::pair<u64, u64> userId = {0, 0};$/;"	m	struct:DC_File_EventLog	access:public
validTime	manager/BSCouponManager.h	/^    vn::f32 validTime = 0;$/;"	m	struct:AllocatedObject	access:public
version	table/Table_Registration.cpp	/^u32 Table_Registration::version() const {$/;"	f	class:tbl::Table_Registration	signature:() const
version	table/Table_award.cpp	/^u32 Table_award::version() const {$/;"	f	class:tbl::Table_award	signature:() const
version	table/Table_buff.cpp	/^u32 Table_buff::version() const {$/;"	f	class:tbl::Table_buff	signature:() const
version	table/Table_cage.cpp	/^u32 Table_cage::version() const {$/;"	f	class:tbl::Table_cage	signature:() const
version	table/Table_coupon.cpp	/^u32 Table_coupon::version() const {$/;"	f	class:tbl::Table_coupon	signature:() const
version	table/Table_dialog.cpp	/^u32 Table_dialog::version() const {$/;"	f	class:tbl::Table_dialog	signature:() const
version	table/Table_diamond_shop.cpp	/^u32 Table_diamond_shop::version() const {$/;"	f	class:tbl::Table_diamond_shop	signature:() const
version	table/Table_force_guide.cpp	/^u32 Table_force_guide::version() const {$/;"	f	class:tbl::Table_force_guide	signature:() const
version	table/Table_gold_mine.cpp	/^u32 Table_gold_mine::version() const {$/;"	f	class:tbl::Table_gold_mine	signature:() const
version	table/Table_herorune.cpp	/^u32 Table_herorune::version() const {$/;"	f	class:tbl::Table_herorune	signature:() const
version	table/Table_hint.cpp	/^u32 Table_hint::version() const {$/;"	f	class:tbl::Table_hint	signature:() const
version	table/Table_item_store.cpp	/^u32 Table_item_store::version() const {$/;"	f	class:tbl::Table_item_store	signature:() const
version	table/Table_level.cpp	/^u32 Table_level::version() const {$/;"	f	class:tbl::Table_level	signature:() const
version	table/Table_levelclass.cpp	/^u32 Table_levelclass::version() const {$/;"	f	class:tbl::Table_levelclass	signature:() const
version	table/Table_mission.cpp	/^u32 Table_mission::version() const {$/;"	f	class:tbl::Table_mission	signature:() const
version	table/Table_monster.cpp	/^u32 Table_monster::version() const {$/;"	f	class:tbl::Table_monster	signature:() const
version	table/Table_object.cpp	/^u32 Table_object::version() const {$/;"	f	class:tbl::Table_object	signature:() const
version	table/Table_platform.cpp	/^u32 Table_platform::version() const {$/;"	f	class:tbl::Table_platform	signature:() const
version	table/Table_progress.cpp	/^u32 Table_progress::version() const {$/;"	f	class:tbl::Table_progress	signature:() const
version	table/Table_spell.cpp	/^u32 Table_spell::version() const {$/;"	f	class:tbl::Table_spell	signature:() const
version	table/Table_sub_wave.cpp	/^u32 Table_sub_wave::version() const {$/;"	f	class:tbl::Table_sub_wave	signature:() const
version	table/Table_tech.cpp	/^u32 Table_tech::version() const {$/;"	f	class:tbl::Table_tech	signature:() const
version	table/Table_tower.cpp	/^u32 Table_tower::version() const {$/;"	f	class:tbl::Table_tower	signature:() const
version	table/Table_training.cpp	/^u32 Table_training::version() const {$/;"	f	class:tbl::Table_training	signature:() const
version	table/Table_wave.cpp	/^u32 Table_wave::version() const {$/;"	f	class:tbl::Table_wave	signature:() const
vn	DateTime.h	/^using namespace vn;$/;"	v
vn	Log/DC_DataBase_EventLog.h	/^using namespace vn;$/;"	v
vn	Log/DC_File_EventLog.h	/^using namespace vn;$/;"	v
vn	manager/BSAwardManager.h	/^using namespace vn;$/;"	v
vn	manager/BSCommonFunc.h	/^using namespace vn;$/;"	v
vn	manager/BSCouponManager.h	/^using namespace vn;$/;"	v
vn	manager/BSDiamondShop.h	/^using namespace vn;$/;"	v
vn	manager/BSFactory.h	/^using namespace vn;$/;"	v
vn	manager/BSMissionManager.h	/^using namespace vn;$/;"	v
vn	manager/BSRegistrationManager.h	/^using namespace vn;$/;"	v
vn	manager/BSRmbShopManager.h	/^using namespace vn;$/;"	v
vn	manager/BSTechManager.h	/^using namespace vn;$/;"	v
vn	manager/BSTowerManager.h	/^using namespace vn;$/;"	v
vn	manager/DataCenter.h	/^using namespace vn;$/;"	v
vn	manager/LoggedUserManager.h	/^using namespace vn;$/;"	v
vn	worker/AsyncTask.h	/^using namespace vn;$/;"	v
vn	worker/BSForceGuide.h	/^using namespace vn;$/;"	v
vn	worker/BSGoldMine.h	/^using namespace vn;$/;"	v
vn	worker/BSHero.h	/^using namespace vn;$/;"	v
vn	worker/BSIntrusion.h	/^using namespace vn;$/;"	v
vn	worker/BSItemStore.h	/^using namespace vn;$/;"	v
vn	worker/BSLevel.h	/^using namespace vn;$/;"	v
vn	worker/BSLevelGroup.h	/^using namespace vn;$/;"	v
vn	worker/BSLevelGroupInfo.h	/^using namespace vn;$/;"	v
vn	worker/BSMonsterMap.h	/^using namespace vn;$/;"	v
vn	worker/BSPlatformStore.h	/^using namespace vn;$/;"	v
vn	worker/BSPlatformStoreInfo.h	/^using namespace vn;$/;"	v
vn	worker/BSPlayerBaseInfo.h	/^using namespace vn;$/;"	v
vn	worker/BSTechUpgrade.h	/^using namespace vn;$/;"	v
vn	worker/BSTowerUpgrade.h	/^using namespace vn;$/;"	v
vn	worker/LoggedUser.h	/^using namespace vn;$/;"	v
vn	worker/UUID.h	/^using namespace vn;$/;"	v
vn::AllocatedObject	ServerData.h	/^struct ServerData : vn::AllocatedObject {$/;"	s	class:vn
vn::AllocatedObject::announcementContent	ServerData.h	/^    vn::str8 announcementContent;$/;"	m	struct:vn::AllocatedObject	access:public
vn::AllocatedObject::announcementId	ServerData.h	/^    vn::u32 announcementId = 0;$/;"	m	struct:vn::AllocatedObject	access:public
vn::AllocatedObject::last_registration_date	ServerData.h	/^    Date last_registration_date;$/;"	m	struct:vn::AllocatedObject	access:public
vn::AllocatedObject::load	ServerData.h	/^    void load(vn::DataStream &);$/;"	p	struct:vn::AllocatedObject	access:public	signature:(vn::DataStream &)
vn::AllocatedObject::load	ServerData.h	/^    void load(vn::Variable_object &obj);$/;"	p	struct:vn::AllocatedObject	access:public	signature:(vn::Variable_object &obj)
vn::AllocatedObject::save	ServerData.h	/^    void save(vn::DataStream &) const;$/;"	p	struct:vn::AllocatedObject	access:public	signature:(vn::DataStream &) const
vn::AllocatedObject::save	ServerData.h	/^    void save(vn::Variable_object &obj) const;$/;"	p	struct:vn::AllocatedObject	access:public	signature:(vn::Variable_object &obj) const
watch	Log/DC_DataBase_EventLog.h	/^    bool shovel = false, watch = false;$/;"	m	struct:DC_DataBase_EventLog_User	access:public
watch	Log/DC_File_EventLog.h	/^    bool shovel = false, watch = false;$/;"	m	struct:DC_File_EventLog_User	access:public
watch	worker/BSHero.cpp	/^const u32 * BSHero::watch()$/;"	f	class:BSHero	signature:()
weight	manager/BSAwardManager.h	/^    u32 weight = 0;$/;"	m	struct:AllocatedObject	access:public
weight	manager/BSCouponManager.h	/^    vn::u32 weight = 0;	\/\/权重$/;"	m	struct:AllocatedObject	access:public
win	worker/BSLevelGroup.cpp	/^BSLevelGroup::LevelInfo * BSLevelGroup::win(u32 levelId, u32 stars, bool watch, bool shovel, const std::vector<u32> &heros, const std::vector<std::pair<u32, u32>> &towers, const std::vector<std::pair<u32, u32>> &platforms, bool &firstVictory, size_t &firstReward) {$/;"	f	class:BSLevelGroup	signature:(u32 levelId, u32 stars, bool watch, bool shovel, const std::vector<u32> &heros, const std::vector<std::pair<u32, u32>> &towers, const std::vector<std::pair<u32, u32>> &platforms, bool &firstVictory, size_t &firstReward)
win	worker/BSLevelGroup.cpp	/^bool BSLevelGroupManager::win(u32 levelId, u32 stars, bool watch, bool shovel, const std::vector<u32> &heroes, const std::vector<std::pair<u32, u32>> &towers, const std::vector<std::pair<u32, u32>> &platforms, bool *intrusion,bool *ifNew,vn::s32 *pAddDiamond) {$/;"	f	class:BSLevelGroupManager	signature:(u32 levelId, u32 stars, bool watch, bool shovel, const std::vector<u32> &heroes, const std::vector<std::pair<u32, u32>> &towers, const std::vector<std::pair<u32, u32>> &platforms, bool *intrusion,bool *ifNew,vn::s32 *pAddDiamond)
year	DateTime.h	/^            u32 year : 16;$/;"	m	struct:Date::__anon1::__anon2	access:public
~BSCoupon	manager/BSCouponManager.h	/^    virtual ~BSCoupon() = default;$/;"	p	struct:AllocatedObject	access:public
~BSForceGuide	worker/BSForceGuide.cpp	/^BSForceGuide::~BSForceGuide()$/;"	f	class:BSForceGuide	signature:()
~BSHero	worker/BSHero.cpp	/^BSHero::~BSHero()$/;"	f	class:BSHero	signature:()
~BSItemStore	worker/BSItemStore.cpp	/^BSItemStore::~BSItemStore()$/;"	f	class:BSItemStore	signature:()
~BSLevel	worker/BSLevel.cpp	/^BSLevel::~BSLevel()$/;"	f	class:BSLevel	signature:()
~BSMonsterMap	worker/BSMonsterMap.cpp	/^BSMonsterMap::~BSMonsterMap()$/;"	f	class:BSMonsterMap	signature:()
~BSPlayerBaseInfo	worker/BSPlayerBaseInfo.cpp	/^BSPlayerBaseInfo::~BSPlayerBaseInfo()$/;"	f	class:BSPlayerBaseInfo	signature:()
~BSTechManager	manager/BSTechManager.cpp	/^BSTechManager::~BSTechManager()$/;"	f	class:BSTechManager	signature:()
~BSTechUpgrade	worker/BSTechUpgrade.cpp	/^BSTechUpgrade::~BSTechUpgrade()$/;"	f	class:BSTechUpgrade	signature:()
~BSTowerUpgrade	worker/BSTowerUpgrade.cpp	/^BSTowerUpgrade::~BSTowerUpgrade()$/;"	f	class:BSTowerUpgrade	signature:()
~DC_File_EventLog	Log/DC_File_EventLog.h	/^    virtual ~DC_File_EventLog() = default;$/;"	p	struct:AllocatedObject	access:public
~File	File/FileSystemPKG.cpp	/^FileSystemPKG::File::~File() {$/;"	f	class:FileSystemPKG::File	signature:()
~FileInMemory	File/FileSystemPKG.cpp	/^FileSystemPKG::FileInMemory::~FileInMemory() {$/;"	f	class:FileSystemPKG::FileInMemory	signature:()
~FileSystemPKG	File/FileSystemPKG.cpp	/^FileSystemPKG::~FileSystemPKG() {$/;"	f	class:FileSystemPKG	signature:()
~LoggedUser	worker/LoggedUser.cpp	/^LoggedUser::~LoggedUser()$/;"	f	class:LoggedUser	signature:()
~PreLoggingUser	worker/PreLoggingUser.cpp	/^PreLoggingUser::~PreLoggingUser() {$/;"	f	class:PreLoggingUser	signature:()
~Table_Registration	table/Table_Registration.cpp	/^Table_Registration::~Table_Registration() {$/;"	f	class:tbl::Table_Registration	signature:()
~Table_award	table/Table_award.cpp	/^Table_award::~Table_award() {$/;"	f	class:tbl::Table_award	signature:()
~Table_buff	table/Table_buff.cpp	/^Table_buff::~Table_buff() {$/;"	f	class:tbl::Table_buff	signature:()
~Table_cage	table/Table_cage.cpp	/^Table_cage::~Table_cage() {$/;"	f	class:tbl::Table_cage	signature:()
~Table_coupon	table/Table_coupon.cpp	/^Table_coupon::~Table_coupon() {$/;"	f	class:tbl::Table_coupon	signature:()
~Table_dialog	table/Table_dialog.cpp	/^Table_dialog::~Table_dialog() {$/;"	f	class:tbl::Table_dialog	signature:()
~Table_diamond_shop	table/Table_diamond_shop.cpp	/^Table_diamond_shop::~Table_diamond_shop() {$/;"	f	class:tbl::Table_diamond_shop	signature:()
~Table_force_guide	table/Table_force_guide.cpp	/^Table_force_guide::~Table_force_guide() {$/;"	f	class:tbl::Table_force_guide	signature:()
~Table_gold_mine	table/Table_gold_mine.cpp	/^Table_gold_mine::~Table_gold_mine() {$/;"	f	class:tbl::Table_gold_mine	signature:()
~Table_herorune	table/Table_herorune.cpp	/^Table_herorune::~Table_herorune() {$/;"	f	class:tbl::Table_herorune	signature:()
~Table_hint	table/Table_hint.cpp	/^Table_hint::~Table_hint() {$/;"	f	class:tbl::Table_hint	signature:()
~Table_item_store	table/Table_item_store.cpp	/^Table_item_store::~Table_item_store() {$/;"	f	class:tbl::Table_item_store	signature:()
~Table_level	table/Table_level.cpp	/^Table_level::~Table_level() {$/;"	f	class:tbl::Table_level	signature:()
~Table_levelclass	table/Table_levelclass.cpp	/^Table_levelclass::~Table_levelclass() {$/;"	f	class:tbl::Table_levelclass	signature:()
~Table_mission	table/Table_mission.cpp	/^Table_mission::~Table_mission() {$/;"	f	class:tbl::Table_mission	signature:()
~Table_monster	table/Table_monster.cpp	/^Table_monster::~Table_monster() {$/;"	f	class:tbl::Table_monster	signature:()
~Table_object	table/Table_object.cpp	/^Table_object::~Table_object() {$/;"	f	class:tbl::Table_object	signature:()
~Table_platform	table/Table_platform.cpp	/^Table_platform::~Table_platform() {$/;"	f	class:tbl::Table_platform	signature:()
~Table_progress	table/Table_progress.cpp	/^Table_progress::~Table_progress() {$/;"	f	class:tbl::Table_progress	signature:()
~Table_spell	table/Table_spell.cpp	/^Table_spell::~Table_spell() {$/;"	f	class:tbl::Table_spell	signature:()
~Table_sub_wave	table/Table_sub_wave.cpp	/^Table_sub_wave::~Table_sub_wave() {$/;"	f	class:tbl::Table_sub_wave	signature:()
~Table_tech	table/Table_tech.cpp	/^Table_tech::~Table_tech() {$/;"	f	class:tbl::Table_tech	signature:()
~Table_tower	table/Table_tower.cpp	/^Table_tower::~Table_tower() {$/;"	f	class:tbl::Table_tower	signature:()
~Table_training	table/Table_training.cpp	/^Table_training::~Table_training() {$/;"	f	class:tbl::Table_training	signature:()
~Table_wave	table/Table_wave.cpp	/^Table_wave::~Table_wave() {$/;"	f	class:tbl::Table_wave	signature:()
~WorkQueue	worker/WorkQueue.cpp	/^WorkQueue::~WorkQueue() {$/;"	f	class:WorkQueue	signature:()
